
./user/testsigill.b：     文件格式 elf32-tradlittlemips


Disassembly of section .text:

00400000 <sigill_handler>:
#include <lib.h>
#include <signal.h>

static int a = 0;

void sigill_handler(int sig) {
  400000:	27bdffe8 	addiu	sp,sp,-24
  400004:	afbf0014 	sw	ra,20(sp)
  400008:	afbe0010 	sw	s8,16(sp)
  40000c:	03a0f025 	move	s8,sp
  400010:	afc40018 	sw	a0,24(s8)
    debugf("capture SIGILL signal. %d\n", a);
  400014:	3c020041 	lui	v0,0x41
  400018:	8c428000 	lw	v0,-32768(v0)
  40001c:	00402825 	move	a1,v0
  400020:	3c020040 	lui	v0,0x40
  400024:	24445de0 	addiu	a0,v0,24032
  400028:	0c100141 	jal	400504 <debugf>
  40002c:	00000000 	nop
    syscall_yield();
  400030:	0c1004be 	jal	4012f8 <syscall_yield>
  400034:	00000000 	nop
    debugf("SIGILL signal handler returns. %d\n", a);
  400038:	3c020041 	lui	v0,0x41
  40003c:	8c428000 	lw	v0,-32768(v0)
  400040:	00402825 	move	a1,v0
  400044:	3c020040 	lui	v0,0x40
  400048:	24445dfc 	addiu	a0,v0,24060
  40004c:	0c100141 	jal	400504 <debugf>
  400050:	00000000 	nop
    if(a>=1) exit();
  400054:	3c020041 	lui	v0,0x41
  400058:	8c428000 	lw	v0,-32768(v0)
  40005c:	18400003 	blez	v0,40006c <sigill_handler+0x6c>
  400060:	00000000 	nop
  400064:	0c100190 	jal	400640 <exit>
  400068:	00000000 	nop
}
  40006c:	00000000 	nop
  400070:	03c0e825 	move	sp,s8
  400074:	8fbf0014 	lw	ra,20(sp)
  400078:	8fbe0010 	lw	s8,16(sp)
  40007c:	27bd0018 	addiu	sp,sp,24
  400080:	03e00008 	jr	ra
  400084:	00000000 	nop

00400088 <sigchld_handler>:

void sigchld_handler(int sig)
{
  400088:	27bdffe8 	addiu	sp,sp,-24
  40008c:	afbf0014 	sw	ra,20(sp)
  400090:	afbe0010 	sw	s8,16(sp)
  400094:	03a0f025 	move	s8,sp
  400098:	afc40018 	sw	a0,24(s8)
    debugf("capture SIGCHLD signal. %d\n", a);
  40009c:	3c020041 	lui	v0,0x41
  4000a0:	8c428000 	lw	v0,-32768(v0)
  4000a4:	00402825 	move	a1,v0
  4000a8:	3c020040 	lui	v0,0x40
  4000ac:	24445e20 	addiu	a0,v0,24096
  4000b0:	0c100141 	jal	400504 <debugf>
  4000b4:	00000000 	nop
    debugf("SIGCHLD signal handler returns. %d\n", a);
  4000b8:	3c020041 	lui	v0,0x41
  4000bc:	8c428000 	lw	v0,-32768(v0)
  4000c0:	00402825 	move	a1,v0
  4000c4:	3c020040 	lui	v0,0x40
  4000c8:	24445e3c 	addiu	a0,v0,24124
  4000cc:	0c100141 	jal	400504 <debugf>
  4000d0:	00000000 	nop
}
  4000d4:	00000000 	nop
  4000d8:	03c0e825 	move	sp,s8
  4000dc:	8fbf0014 	lw	ra,20(sp)
  4000e0:	8fbe0010 	lw	s8,16(sp)
  4000e4:	27bd0018 	addiu	sp,sp,24
  4000e8:	03e00008 	jr	ra
  4000ec:	00000000 	nop

004000f0 <sigint_handler>:

void sigint_handler(int sig)
{
  4000f0:	27bdffe8 	addiu	sp,sp,-24
  4000f4:	afbf0014 	sw	ra,20(sp)
  4000f8:	afbe0010 	sw	s8,16(sp)
  4000fc:	03a0f025 	move	s8,sp
  400100:	afc40018 	sw	a0,24(s8)
    a++;
  400104:	3c020041 	lui	v0,0x41
  400108:	8c428000 	lw	v0,-32768(v0)
  40010c:	24430001 	addiu	v1,v0,1
  400110:	3c020041 	lui	v0,0x41
  400114:	ac438000 	sw	v1,-32768(v0)
    printf("capture SIGINT signal. %d\n", a);
  400118:	3c020041 	lui	v0,0x41
  40011c:	8c428000 	lw	v0,-32768(v0)
  400120:	00402825 	move	a1,v0
  400124:	3c020040 	lui	v0,0x40
  400128:	24445e60 	addiu	a0,v0,24160
  40012c:	0c100e01 	jal	403804 <printf>
  400130:	00000000 	nop
    printf("SIGINT signal handler returns. %d\n", a);
  400134:	3c020041 	lui	v0,0x41
  400138:	8c428000 	lw	v0,-32768(v0)
  40013c:	00402825 	move	a1,v0
  400140:	3c020040 	lui	v0,0x40
  400144:	24445e7c 	addiu	a0,v0,24188
  400148:	0c100e01 	jal	403804 <printf>
  40014c:	00000000 	nop
}
  400150:	00000000 	nop
  400154:	03c0e825 	move	sp,s8
  400158:	8fbf0014 	lw	ra,20(sp)
  40015c:	8fbe0010 	lw	s8,16(sp)
  400160:	27bd0018 	addiu	sp,sp,24
  400164:	03e00008 	jr	ra
  400168:	00000000 	nop

0040016c <main>:

int main() {
  40016c:	27bdffd8 	addiu	sp,sp,-40
  400170:	afbf0024 	sw	ra,36(sp)
  400174:	afbe0020 	sw	s8,32(sp)
  400178:	03a0f025 	move	s8,sp
    a+=1;
  40017c:	3c020041 	lui	v0,0x41
  400180:	8c428000 	lw	v0,-32768(v0)
  400184:	24430001 	addiu	v1,v0,1
  400188:	3c020041 	lui	v0,0x41
  40018c:	ac438000 	sw	v1,-32768(v0)
    struct sigaction sa;
    sa.sa_handler = sigill_handler;
  400190:	3c020040 	lui	v0,0x40
  400194:	24420000 	addiu	v0,v0,0
  400198:	afc20014 	sw	v0,20(s8)
    sigemptyset(&sa.sa_mask);
  40019c:	27c20014 	addiu	v0,s8,20
  4001a0:	24420004 	addiu	v0,v0,4
  4001a4:	00402025 	move	a0,v0
  4001a8:	0c1001dc 	jal	400770 <sigemptyset>
  4001ac:	00000000 	nop
    sigaction(SIGILL, &sa, NULL);
  4001b0:	27c20014 	addiu	v0,s8,20
  4001b4:	00003025 	move	a2,zero
  4001b8:	00402825 	move	a1,v0
  4001bc:	24040004 	li	a0,4
  4001c0:	0c1001ba 	jal	4006e8 <sigaction>
  4001c4:	00000000 	nop

    sa.sa_handler = sigchld_handler;
  4001c8:	3c020040 	lui	v0,0x40
  4001cc:	24420088 	addiu	v0,v0,136
  4001d0:	afc20014 	sw	v0,20(s8)
    sigemptyset(&sa.sa_mask);
  4001d4:	27c20014 	addiu	v0,s8,20
  4001d8:	24420004 	addiu	v0,v0,4
  4001dc:	00402025 	move	a0,v0
  4001e0:	0c1001dc 	jal	400770 <sigemptyset>
  4001e4:	00000000 	nop
    sigaction(SIGCHLD, &sa, NULL);
  4001e8:	27c20014 	addiu	v0,s8,20
  4001ec:	00003025 	move	a2,zero
  4001f0:	00402825 	move	a1,v0
  4001f4:	24040011 	li	a0,17
  4001f8:	0c1001ba 	jal	4006e8 <sigaction>
  4001fc:	00000000 	nop

    sa.sa_handler = sigint_handler;
  400200:	3c020040 	lui	v0,0x40
  400204:	244200f0 	addiu	v0,v0,240
  400208:	afc20014 	sw	v0,20(s8)
    sigemptyset(&sa.sa_mask);
  40020c:	27c20014 	addiu	v0,s8,20
  400210:	24420004 	addiu	v0,v0,4
  400214:	00402025 	move	a0,v0
  400218:	0c1001dc 	jal	400770 <sigemptyset>
  40021c:	00000000 	nop
    sigaction(SIGINT, &sa, NULL);
  400220:	27c20014 	addiu	v0,s8,20
  400224:	00003025 	move	a2,zero
  400228:	00402825 	move	a1,v0
  40022c:	24040002 	li	a0,2
  400230:	0c1001ba 	jal	4006e8 <sigaction>
  400234:	00000000 	nop

    u_int pid = syscall_getenvid();
  400238:	0c1004b1 	jal	4012c4 <syscall_getenvid>
  40023c:	00000000 	nop
  400240:	afc20010 	sw	v0,16(s8)
    if(fork() == 0){
  400244:	0c1003fc 	jal	400ff0 <fork>
  400248:	00000000 	nop
  40024c:	1440000f 	bnez	v0,40028c <main+0x120>
  400250:	00000000 	nop
        debugf("send SIGINT.\n");
  400254:	3c020040 	lui	v0,0x40
  400258:	24445ea0 	addiu	a0,v0,24224
  40025c:	0c100141 	jal	400504 <debugf>
  400260:	00000000 	nop
        kill(pid, SIGINT);
  400264:	24050002 	li	a1,2
  400268:	8fc40010 	lw	a0,16(s8)
  40026c:	0c1001cc 	jal	400730 <kill>
  400270:	00000000 	nop
        debugf("send SIGCHLD.\n");
  400274:	3c020040 	lui	v0,0x40
  400278:	24445eb0 	addiu	a0,v0,24240
  40027c:	0c100141 	jal	400504 <debugf>
  400280:	00000000 	nop
        exit();
  400284:	0c100190 	jal	400640 <exit>
  400288:	00000000 	nop
    }
    asm("\tmove $t0,$sp\r\n"
  40028c:	03a04025 	move	t0,sp
  400290:	01000008 	jr	t0
  400294:	00000000 	nop
        "\tjr $t0\r\n");
    debugf("Hello, world!\n");
  400298:	3c020040 	lui	v0,0x40
  40029c:	24445ec0 	addiu	a0,v0,24256
  4002a0:	0c100141 	jal	400504 <debugf>
  4002a4:	00000000 	nop
    return 0;
  4002a8:	00001025 	move	v0,zero
}
  4002ac:	03c0e825 	move	sp,s8
  4002b0:	8fbf0024 	lw	ra,36(sp)
  4002b4:	8fbe0020 	lw	s8,32(sp)
  4002b8:	27bd0028 	addiu	sp,sp,40
  4002bc:	03e00008 	jr	ra
  4002c0:	00000000 	nop
	...

004002d0 <_start>:
#include <asm/asm.h>

.text
EXPORT(_start)
	lw      a0, 0(sp)
  4002d0:	8fa40000 	lw	a0,0(sp)
	lw      a1, 4(sp)
  4002d4:	8fa50004 	lw	a1,4(sp)
	jal     libmain
  4002d8:	0c1001a0 	jal	400680 <libmain>
  4002dc:	00000000 	nop

004002e0 <msyscall>:

LEAF(msyscall)
	// Just use 'syscall' instruction and return.

	/* Exercise 4.1: Your code here. */
	syscall
  4002e0:	0000000c 	syscall
	jr ra
  4002e4:	03e00008 	jr	ra
  4002e8:	00000000 	nop
  4002ec:	00000000 	nop

004002f0 <debug_flush>:
struct debug_ctx {
	char buf[BUF_LEN];
	size_t pos;
};

static void debug_flush(struct debug_ctx *ctx) {
  4002f0:	27bdffe0 	addiu	sp,sp,-32
  4002f4:	afbf001c 	sw	ra,28(sp)
  4002f8:	afbe0018 	sw	s8,24(sp)
  4002fc:	03a0f025 	move	s8,sp
  400300:	afc40020 	sw	a0,32(s8)
	if (ctx->pos == 0) {
  400304:	8fc20020 	lw	v0,32(s8)
  400308:	8c420400 	lw	v0,1024(v0)
  40030c:	10400018 	beqz	v0,400370 <debug_flush+0x80>
  400310:	00000000 	nop
		return;
	}
	int r;
	if ((r = syscall_print_cons(ctx->buf, ctx->pos)) != 0) {
  400314:	8fc30020 	lw	v1,32(s8)
  400318:	8fc20020 	lw	v0,32(s8)
  40031c:	8c420400 	lw	v0,1024(v0)
  400320:	00402825 	move	a1,v0
  400324:	00602025 	move	a0,v1
  400328:	0c1004a0 	jal	401280 <syscall_print_cons>
  40032c:	00000000 	nop
  400330:	afc20010 	sw	v0,16(s8)
  400334:	8fc20010 	lw	v0,16(s8)
  400338:	10400009 	beqz	v0,400360 <debug_flush+0x70>
  40033c:	00000000 	nop
		user_panic("syscall_print_cons: %d", r);
  400340:	8fc70010 	lw	a3,16(s8)
  400344:	3c020040 	lui	v0,0x40
  400348:	24465ed0 	addiu	a2,v0,24272
  40034c:	24050011 	li	a1,17
  400350:	3c020040 	lui	v0,0x40
  400354:	24445ee8 	addiu	a0,v0,24296
  400358:	0c100157 	jal	40055c <_user_panic>
  40035c:	00000000 	nop
	}
	ctx->pos = 0;
  400360:	8fc20020 	lw	v0,32(s8)
  400364:	ac400400 	sw	zero,1024(v0)
  400368:	10000002 	b	400374 <debug_flush+0x84>
  40036c:	00000000 	nop
		return;
  400370:	00000000 	nop
}
  400374:	03c0e825 	move	sp,s8
  400378:	8fbf001c 	lw	ra,28(sp)
  40037c:	8fbe0018 	lw	s8,24(sp)
  400380:	27bd0020 	addiu	sp,sp,32
  400384:	03e00008 	jr	ra
  400388:	00000000 	nop

0040038c <debug_output>:

static void debug_output(void *data, const char *s, size_t l) {
  40038c:	27bdffe0 	addiu	sp,sp,-32
  400390:	afbf001c 	sw	ra,28(sp)
  400394:	afbe0018 	sw	s8,24(sp)
  400398:	03a0f025 	move	s8,sp
  40039c:	afc40020 	sw	a0,32(s8)
  4003a0:	afc50024 	sw	a1,36(s8)
  4003a4:	afc60028 	sw	a2,40(s8)
	struct debug_ctx *ctx = (struct debug_ctx *)data;
  4003a8:	8fc20020 	lw	v0,32(s8)
  4003ac:	afc20010 	sw	v0,16(s8)

	while (ctx->pos + l > BUF_LEN) {
  4003b0:	1000001d 	b	400428 <debug_output+0x9c>
  4003b4:	00000000 	nop
		size_t n = BUF_LEN - ctx->pos;
  4003b8:	8fc20010 	lw	v0,16(s8)
  4003bc:	8c420400 	lw	v0,1024(v0)
  4003c0:	24030400 	li	v1,1024
  4003c4:	00621023 	subu	v0,v1,v0
  4003c8:	afc20014 	sw	v0,20(s8)
		memcpy(ctx->buf + ctx->pos, s, n);
  4003cc:	8fc30010 	lw	v1,16(s8)
  4003d0:	8fc20010 	lw	v0,16(s8)
  4003d4:	8c420400 	lw	v0,1024(v0)
  4003d8:	00621021 	addu	v0,v1,v0
  4003dc:	8fc60014 	lw	a2,20(s8)
  4003e0:	8fc50024 	lw	a1,36(s8)
  4003e4:	00402025 	move	a0,v0
  4003e8:	0c101650 	jal	405940 <memcpy>
  4003ec:	00000000 	nop
		s += n;
  4003f0:	8fc30024 	lw	v1,36(s8)
  4003f4:	8fc20014 	lw	v0,20(s8)
  4003f8:	00621021 	addu	v0,v1,v0
  4003fc:	afc20024 	sw	v0,36(s8)
		l -= n;
  400400:	8fc30028 	lw	v1,40(s8)
  400404:	8fc20014 	lw	v0,20(s8)
  400408:	00621023 	subu	v0,v1,v0
  40040c:	afc20028 	sw	v0,40(s8)
		ctx->pos = BUF_LEN;
  400410:	8fc20010 	lw	v0,16(s8)
  400414:	24030400 	li	v1,1024
  400418:	ac430400 	sw	v1,1024(v0)
		debug_flush(ctx);
  40041c:	8fc40010 	lw	a0,16(s8)
  400420:	0c1000bc 	jal	4002f0 <debug_flush>
  400424:	00000000 	nop
	while (ctx->pos + l > BUF_LEN) {
  400428:	8fc20010 	lw	v0,16(s8)
  40042c:	8c430400 	lw	v1,1024(v0)
  400430:	8fc20028 	lw	v0,40(s8)
  400434:	00621021 	addu	v0,v1,v0
  400438:	2c420401 	sltiu	v0,v0,1025
  40043c:	1040ffde 	beqz	v0,4003b8 <debug_output+0x2c>
  400440:	00000000 	nop
	}
	memcpy(ctx->buf + ctx->pos, s, l);
  400444:	8fc30010 	lw	v1,16(s8)
  400448:	8fc20010 	lw	v0,16(s8)
  40044c:	8c420400 	lw	v0,1024(v0)
  400450:	00621021 	addu	v0,v1,v0
  400454:	8fc60028 	lw	a2,40(s8)
  400458:	8fc50024 	lw	a1,36(s8)
  40045c:	00402025 	move	a0,v0
  400460:	0c101650 	jal	405940 <memcpy>
  400464:	00000000 	nop
	ctx->pos += l;
  400468:	8fc20010 	lw	v0,16(s8)
  40046c:	8c430400 	lw	v1,1024(v0)
  400470:	8fc20028 	lw	v0,40(s8)
  400474:	00621821 	addu	v1,v1,v0
  400478:	8fc20010 	lw	v0,16(s8)
  40047c:	ac430400 	sw	v1,1024(v0)
}
  400480:	00000000 	nop
  400484:	03c0e825 	move	sp,s8
  400488:	8fbf001c 	lw	ra,28(sp)
  40048c:	8fbe0018 	lw	s8,24(sp)
  400490:	27bd0020 	addiu	sp,sp,32
  400494:	03e00008 	jr	ra
  400498:	00000000 	nop

0040049c <vdebugf>:

static void vdebugf(const char *fmt, va_list ap) {
  40049c:	27bdfbe0 	addiu	sp,sp,-1056
  4004a0:	afbf041c 	sw	ra,1052(sp)
  4004a4:	afbe0418 	sw	s8,1048(sp)
  4004a8:	03a0f025 	move	s8,sp
  4004ac:	afc40420 	sw	a0,1056(s8)
  4004b0:	afc50424 	sw	a1,1060(s8)
	struct debug_ctx ctx;
	ctx.pos = 0;
  4004b4:	afc00410 	sw	zero,1040(s8)
	vprintfmt(debug_output, &ctx, fmt, ap);
  4004b8:	8fc70424 	lw	a3,1060(s8)
  4004bc:	8fc60420 	lw	a2,1056(s8)
  4004c0:	27c20010 	addiu	v0,s8,16
  4004c4:	00402825 	move	a1,v0
  4004c8:	3c020040 	lui	v0,0x40
  4004cc:	2444038c 	addiu	a0,v0,908
  4004d0:	0c101334 	jal	404cd0 <vprintfmt>
  4004d4:	00000000 	nop
	debug_flush(&ctx);
  4004d8:	27c20010 	addiu	v0,s8,16
  4004dc:	00402025 	move	a0,v0
  4004e0:	0c1000bc 	jal	4002f0 <debug_flush>
  4004e4:	00000000 	nop
}
  4004e8:	00000000 	nop
  4004ec:	03c0e825 	move	sp,s8
  4004f0:	8fbf041c 	lw	ra,1052(sp)
  4004f4:	8fbe0418 	lw	s8,1048(sp)
  4004f8:	27bd0420 	addiu	sp,sp,1056
  4004fc:	03e00008 	jr	ra
  400500:	00000000 	nop

00400504 <debugf>:

void debugf(const char *fmt, ...) {
  400504:	27bdffe0 	addiu	sp,sp,-32
  400508:	afbf001c 	sw	ra,28(sp)
  40050c:	afbe0018 	sw	s8,24(sp)
  400510:	03a0f025 	move	s8,sp
  400514:	afc40020 	sw	a0,32(s8)
  400518:	afc50024 	sw	a1,36(s8)
  40051c:	afc60028 	sw	a2,40(s8)
  400520:	afc7002c 	sw	a3,44(s8)
	va_list ap;
	va_start(ap, fmt);
  400524:	27c20024 	addiu	v0,s8,36
  400528:	afc20010 	sw	v0,16(s8)
	vdebugf(fmt, ap);
  40052c:	8fc20010 	lw	v0,16(s8)
  400530:	00402825 	move	a1,v0
  400534:	8fc40020 	lw	a0,32(s8)
  400538:	0c100127 	jal	40049c <vdebugf>
  40053c:	00000000 	nop
	va_end(ap);
}
  400540:	00000000 	nop
  400544:	03c0e825 	move	sp,s8
  400548:	8fbf001c 	lw	ra,28(sp)
  40054c:	8fbe0018 	lw	s8,24(sp)
  400550:	27bd0020 	addiu	sp,sp,32
  400554:	03e00008 	jr	ra
  400558:	00000000 	nop

0040055c <_user_panic>:

void _user_panic(const char *file, int line, const char *fmt, ...) {
  40055c:	27bdffe0 	addiu	sp,sp,-32
  400560:	afbf001c 	sw	ra,28(sp)
  400564:	afbe0018 	sw	s8,24(sp)
  400568:	03a0f025 	move	s8,sp
  40056c:	afc40020 	sw	a0,32(s8)
  400570:	afc50024 	sw	a1,36(s8)
  400574:	afc60028 	sw	a2,40(s8)
  400578:	afc7002c 	sw	a3,44(s8)
	debugf("panic at %s:%d: ", file, line);
  40057c:	8fc60024 	lw	a2,36(s8)
  400580:	8fc50020 	lw	a1,32(s8)
  400584:	3c020040 	lui	v0,0x40
  400588:	24445ef8 	addiu	a0,v0,24312
  40058c:	0c100141 	jal	400504 <debugf>
  400590:	00000000 	nop
	va_list ap;
	va_start(ap, fmt);
  400594:	27c2002c 	addiu	v0,s8,44
  400598:	afc20010 	sw	v0,16(s8)
	vdebugf(fmt, ap);
  40059c:	8fc20010 	lw	v0,16(s8)
  4005a0:	00402825 	move	a1,v0
  4005a4:	8fc40028 	lw	a0,40(s8)
  4005a8:	0c100127 	jal	40049c <vdebugf>
  4005ac:	00000000 	nop
	va_end(ap);
	debugf("\n");
  4005b0:	3c020040 	lui	v0,0x40
  4005b4:	24445f0c 	addiu	a0,v0,24332
  4005b8:	0c100141 	jal	400504 <debugf>
  4005bc:	00000000 	nop
	exit();
  4005c0:	0c100190 	jal	400640 <exit>
  4005c4:	00000000 	nop

004005c8 <_user_halt>:
}

void _user_halt(const char *file, int line, const char *fmt, ...) {
  4005c8:	27bdffe0 	addiu	sp,sp,-32
  4005cc:	afbf001c 	sw	ra,28(sp)
  4005d0:	afbe0018 	sw	s8,24(sp)
  4005d4:	03a0f025 	move	s8,sp
  4005d8:	afc40020 	sw	a0,32(s8)
  4005dc:	afc50024 	sw	a1,36(s8)
  4005e0:	afc60028 	sw	a2,40(s8)
  4005e4:	afc7002c 	sw	a3,44(s8)
	debugf("halt at %s:%d: ", file, line);
  4005e8:	8fc60024 	lw	a2,36(s8)
  4005ec:	8fc50020 	lw	a1,32(s8)
  4005f0:	3c020040 	lui	v0,0x40
  4005f4:	24445f10 	addiu	a0,v0,24336
  4005f8:	0c100141 	jal	400504 <debugf>
  4005fc:	00000000 	nop
	va_list ap;
	va_start(ap, fmt);
  400600:	27c2002c 	addiu	v0,s8,44
  400604:	afc20010 	sw	v0,16(s8)
	vdebugf(fmt, ap);
  400608:	8fc20010 	lw	v0,16(s8)
  40060c:	00402825 	move	a1,v0
  400610:	8fc40028 	lw	a0,40(s8)
  400614:	0c100127 	jal	40049c <vdebugf>
  400618:	00000000 	nop
	va_end(ap);
	debugf("\n");
  40061c:	3c020040 	lui	v0,0x40
  400620:	24445f0c 	addiu	a0,v0,24332
  400624:	0c100141 	jal	400504 <debugf>
  400628:	00000000 	nop
	syscall_panic("user halt");
  40062c:	3c020040 	lui	v0,0x40
  400630:	24445f20 	addiu	a0,v0,24352
  400634:	0c10054a 	jal	401528 <syscall_panic>
  400638:	00000000 	nop
  40063c:	00000000 	nop

00400640 <exit>:
#include <env.h>
#include <lib.h>
#include <mmu.h>
#include <signal.h>

void exit(void) {
  400640:	27bdffe8 	addiu	sp,sp,-24
  400644:	afbf0014 	sw	ra,20(sp)
  400648:	afbe0010 	sw	s8,16(sp)
  40064c:	03a0f025 	move	s8,sp
	// After fs is ready (lab5), all our open files should be closed before dying.
#if !defined(LAB) || LAB >= 5
	close_all();
  400650:	0c10077d 	jal	401df4 <close_all>
  400654:	00000000 	nop
#endif

	syscall_env_destroy(0);
  400658:	00002025 	move	a0,zero
  40065c:	0c1004cc 	jal	401330 <syscall_env_destroy>
  400660:	00000000 	nop
	user_panic("unreachable code");
  400664:	3c020040 	lui	v0,0x40
  400668:	24465f30 	addiu	a2,v0,24368
  40066c:	2405000d 	li	a1,13
  400670:	3c020040 	lui	v0,0x40
  400674:	24445f44 	addiu	a0,v0,24388
  400678:	0c100157 	jal	40055c <_user_panic>
  40067c:	00000000 	nop

00400680 <libmain>:
}

const volatile struct Env *env;
extern int main(int, char **);

void libmain(int argc, char **argv) {
  400680:	27bdffe8 	addiu	sp,sp,-24
  400684:	afbf0014 	sw	ra,20(sp)
  400688:	afbe0010 	sw	s8,16(sp)
  40068c:	03a0f025 	move	s8,sp
  400690:	afc40018 	sw	a0,24(s8)
  400694:	afc5001c 	sw	a1,28(s8)
	// set env to point at our env structure in envs[].
	env = &envs[ENVX(syscall_getenvid())];
  400698:	0c1004b1 	jal	4012c4 <syscall_getenvid>
  40069c:	00000000 	nop
  4006a0:	304303ff 	andi	v1,v0,0x3ff
  4006a4:	00601025 	move	v0,v1
  4006a8:	00021180 	sll	v0,v0,0x6
  4006ac:	00431023 	subu	v0,v0,v1
  4006b0:	000210c0 	sll	v0,v0,0x3
  4006b4:	00401825 	move	v1,v0
  4006b8:	3c027f40 	lui	v0,0x7f40
  4006bc:	00621821 	addu	v1,v1,v0
  4006c0:	3c020041 	lui	v0,0x41
  4006c4:	ac438010 	sw	v1,-32752(v0)

    env_set_sig_entry();
  4006c8:	0c1003ed 	jal	400fb4 <env_set_sig_entry>
  4006cc:	00000000 	nop
	// call user main routine
	main(argc, argv);
  4006d0:	8fc5001c 	lw	a1,28(s8)
  4006d4:	8fc40018 	lw	a0,24(s8)
  4006d8:	0c10005b 	jal	40016c <main>
  4006dc:	00000000 	nop

	// exit gracefully
	exit();
  4006e0:	0c100190 	jal	400640 <exit>
  4006e4:	00000000 	nop

004006e8 <sigaction>:
}

int sigaction(int signum, const struct sigaction *newact, struct sigaction *oldact){
  4006e8:	27bdffe8 	addiu	sp,sp,-24
  4006ec:	afbf0014 	sw	ra,20(sp)
  4006f0:	afbe0010 	sw	s8,16(sp)
  4006f4:	03a0f025 	move	s8,sp
  4006f8:	afc40018 	sw	a0,24(s8)
  4006fc:	afc5001c 	sw	a1,28(s8)
  400700:	afc60020 	sw	a2,32(s8)
    return syscall_sigaction(signum, newact, oldact);
  400704:	8fc60020 	lw	a2,32(s8)
  400708:	8fc5001c 	lw	a1,28(s8)
  40070c:	8fc40018 	lw	a0,24(s8)
  400710:	0c1005c7 	jal	40171c <syscall_sigaction>
  400714:	00000000 	nop
}
  400718:	03c0e825 	move	sp,s8
  40071c:	8fbf0014 	lw	ra,20(sp)
  400720:	8fbe0010 	lw	s8,16(sp)
  400724:	27bd0018 	addiu	sp,sp,24
  400728:	03e00008 	jr	ra
  40072c:	00000000 	nop

00400730 <kill>:

int kill(u_int envid, int sig){
  400730:	27bdffe8 	addiu	sp,sp,-24
  400734:	afbf0014 	sw	ra,20(sp)
  400738:	afbe0010 	sw	s8,16(sp)
  40073c:	03a0f025 	move	s8,sp
  400740:	afc40018 	sw	a0,24(s8)
  400744:	afc5001c 	sw	a1,28(s8)
    return syscall_kill(envid, sig);
  400748:	8fc5001c 	lw	a1,28(s8)
  40074c:	8fc40018 	lw	a0,24(s8)
  400750:	0c1005da 	jal	401768 <syscall_kill>
  400754:	00000000 	nop
}
  400758:	03c0e825 	move	sp,s8
  40075c:	8fbf0014 	lw	ra,20(sp)
  400760:	8fbe0010 	lw	s8,16(sp)
  400764:	27bd0018 	addiu	sp,sp,24
  400768:	03e00008 	jr	ra
  40076c:	00000000 	nop

00400770 <sigemptyset>:

// 清空参数中的__set掩码，初始化信号集以排除所有信号。这意味着__set将不包含任何信号。(清0)
int sigemptyset(sigset_t *__set){
  400770:	27bdfff8 	addiu	sp,sp,-8
  400774:	afbe0004 	sw	s8,4(sp)
  400778:	03a0f025 	move	s8,sp
  40077c:	afc40008 	sw	a0,8(s8)
    __set->sig = 0;
  400780:	8fc20008 	lw	v0,8(s8)
  400784:	ac400000 	sw	zero,0(v0)
    return 0;
  400788:	00001025 	move	v0,zero
}
  40078c:	03c0e825 	move	sp,s8
  400790:	8fbe0004 	lw	s8,4(sp)
  400794:	27bd0008 	addiu	sp,sp,8
  400798:	03e00008 	jr	ra
  40079c:	00000000 	nop

004007a0 <sigfillset>:

// 将参数中的__set掩码填满，使其包含所有已定义的信号。这意味着__set将包括所有信号。(全为1)
int sigfillset(sigset_t *__set){
  4007a0:	27bdfff8 	addiu	sp,sp,-8
  4007a4:	afbe0004 	sw	s8,4(sp)
  4007a8:	03a0f025 	move	s8,sp
  4007ac:	afc40008 	sw	a0,8(s8)
    __set->sig = 0xffffffff;
  4007b0:	8fc20008 	lw	v0,8(s8)
  4007b4:	2403ffff 	li	v1,-1
  4007b8:	ac430000 	sw	v1,0(v0)
    return 0;
  4007bc:	00001025 	move	v0,zero
}
  4007c0:	03c0e825 	move	sp,s8
  4007c4:	8fbe0004 	lw	s8,4(sp)
  4007c8:	27bd0008 	addiu	sp,sp,8
  4007cc:	03e00008 	jr	ra
  4007d0:	00000000 	nop

004007d4 <sigaddset>:

// 向__set信号集中添加一个信号__signo。如果操作成功，__set将包含该信号。(置位为1)
int sigaddset(sigset_t *__set, int __signo){
  4007d4:	27bdfff8 	addiu	sp,sp,-8
  4007d8:	afbe0004 	sw	s8,4(sp)
  4007dc:	03a0f025 	move	s8,sp
  4007e0:	afc40008 	sw	a0,8(s8)
  4007e4:	afc5000c 	sw	a1,12(s8)
    if(__signo < SIG_MIN || __signo > SIG_MAX){
  4007e8:	8fc2000c 	lw	v0,12(s8)
  4007ec:	18400005 	blez	v0,400804 <sigaddset+0x30>
  4007f0:	00000000 	nop
  4007f4:	8fc2000c 	lw	v0,12(s8)
  4007f8:	28420021 	slti	v0,v0,33
  4007fc:	14400004 	bnez	v0,400810 <sigaddset+0x3c>
  400800:	00000000 	nop
        return -1;
  400804:	2402ffff 	li	v0,-1
  400808:	1000000b 	b	400838 <sigaddset+0x64>
  40080c:	00000000 	nop
    }
    __set->sig |= (1 << (__signo - 1));
  400810:	8fc20008 	lw	v0,8(s8)
  400814:	8c420000 	lw	v0,0(v0)
  400818:	8fc3000c 	lw	v1,12(s8)
  40081c:	2463ffff 	addiu	v1,v1,-1
  400820:	24040001 	li	a0,1
  400824:	00641804 	sllv	v1,a0,v1
  400828:	00431825 	or	v1,v0,v1
  40082c:	8fc20008 	lw	v0,8(s8)
  400830:	ac430000 	sw	v1,0(v0)
    return 0;
  400834:	00001025 	move	v0,zero
}
  400838:	03c0e825 	move	sp,s8
  40083c:	8fbe0004 	lw	s8,4(sp)
  400840:	27bd0008 	addiu	sp,sp,8
  400844:	03e00008 	jr	ra
  400848:	00000000 	nop

0040084c <sigdelset>:

// 从__set信号集中删除一个信号__signo。如果操作成功，__set将不再包含该信号。(置位为0)
int sigdelset(sigset_t *__set, int __signo){
  40084c:	27bdfff8 	addiu	sp,sp,-8
  400850:	afbe0004 	sw	s8,4(sp)
  400854:	03a0f025 	move	s8,sp
  400858:	afc40008 	sw	a0,8(s8)
  40085c:	afc5000c 	sw	a1,12(s8)
    if(__signo < SIG_MIN || __signo > SIG_MAX){
  400860:	8fc2000c 	lw	v0,12(s8)
  400864:	18400005 	blez	v0,40087c <sigdelset+0x30>
  400868:	00000000 	nop
  40086c:	8fc2000c 	lw	v0,12(s8)
  400870:	28420021 	slti	v0,v0,33
  400874:	14400004 	bnez	v0,400888 <sigdelset+0x3c>
  400878:	00000000 	nop
        return -1;
  40087c:	2402ffff 	li	v0,-1
  400880:	1000000c 	b	4008b4 <sigdelset+0x68>
  400884:	00000000 	nop
    }
    __set->sig &= ~(1 << (__signo - 1));
  400888:	8fc20008 	lw	v0,8(s8)
  40088c:	8c420000 	lw	v0,0(v0)
  400890:	8fc3000c 	lw	v1,12(s8)
  400894:	2463ffff 	addiu	v1,v1,-1
  400898:	24040001 	li	a0,1
  40089c:	00641804 	sllv	v1,a0,v1
  4008a0:	00031827 	nor	v1,zero,v1
  4008a4:	00431824 	and	v1,v0,v1
  4008a8:	8fc20008 	lw	v0,8(s8)
  4008ac:	ac430000 	sw	v1,0(v0)
    return 0;
  4008b0:	00001025 	move	v0,zero
}
  4008b4:	03c0e825 	move	sp,s8
  4008b8:	8fbe0004 	lw	s8,4(sp)
  4008bc:	27bd0008 	addiu	sp,sp,8
  4008c0:	03e00008 	jr	ra
  4008c4:	00000000 	nop

004008c8 <sigismember>:

// 检查信号__signo是否是__set信号集的成员。如果是，返回1；如果不是，返回0。
int sigismember(const sigset_t *__set, int __signo){
  4008c8:	27bdfff8 	addiu	sp,sp,-8
  4008cc:	afbe0004 	sw	s8,4(sp)
  4008d0:	03a0f025 	move	s8,sp
  4008d4:	afc40008 	sw	a0,8(s8)
  4008d8:	afc5000c 	sw	a1,12(s8)
    if(__signo < SIG_MIN || __signo > SIG_MAX){
  4008dc:	8fc2000c 	lw	v0,12(s8)
  4008e0:	18400005 	blez	v0,4008f8 <sigismember+0x30>
  4008e4:	00000000 	nop
  4008e8:	8fc2000c 	lw	v0,12(s8)
  4008ec:	28420021 	slti	v0,v0,33
  4008f0:	14400004 	bnez	v0,400904 <sigismember+0x3c>
  4008f4:	00000000 	nop
        return -1;
  4008f8:	2402ffff 	li	v0,-1
  4008fc:	1000000e 	b	400938 <sigismember+0x70>
  400900:	00000000 	nop
    }
    if(__set->sig & (1 << (__signo - 1))){
  400904:	8fc20008 	lw	v0,8(s8)
  400908:	8c420000 	lw	v0,0(v0)
  40090c:	8fc3000c 	lw	v1,12(s8)
  400910:	2463ffff 	addiu	v1,v1,-1
  400914:	24040001 	li	a0,1
  400918:	00641804 	sllv	v1,a0,v1
  40091c:	00431024 	and	v0,v0,v1
  400920:	10400004 	beqz	v0,400934 <sigismember+0x6c>
  400924:	00000000 	nop
        return 1;
  400928:	24020001 	li	v0,1
  40092c:	10000002 	b	400938 <sigismember+0x70>
  400930:	00000000 	nop
    }
    return 0;
  400934:	00001025 	move	v0,zero
}
  400938:	03c0e825 	move	sp,s8
  40093c:	8fbe0004 	lw	s8,4(sp)
  400940:	27bd0008 	addiu	sp,sp,8
  400944:	03e00008 	jr	ra
  400948:	00000000 	nop

0040094c <sigisemptyset>:

// 检查信号集__set是否为空。如果为空，返回1；如果不为空，返回0。
int sigisemptyset(const sigset_t *__set){
  40094c:	27bdfff8 	addiu	sp,sp,-8
  400950:	afbe0004 	sw	s8,4(sp)
  400954:	03a0f025 	move	s8,sp
  400958:	afc40008 	sw	a0,8(s8)
    if(__set->sig == 0){
  40095c:	8fc20008 	lw	v0,8(s8)
  400960:	8c420000 	lw	v0,0(v0)
  400964:	14400004 	bnez	v0,400978 <sigisemptyset+0x2c>
  400968:	00000000 	nop
        return 1;
  40096c:	24020001 	li	v0,1
  400970:	10000002 	b	40097c <sigisemptyset+0x30>
  400974:	00000000 	nop
    }
    return 0;
  400978:	00001025 	move	v0,zero
}
  40097c:	03c0e825 	move	sp,s8
  400980:	8fbe0004 	lw	s8,4(sp)
  400984:	27bd0008 	addiu	sp,sp,8
  400988:	03e00008 	jr	ra
  40098c:	00000000 	nop

00400990 <sigandset>:

// 计算两个信号集__left和__right的交集，并将结果存储在__set中。
int sigandset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right){
  400990:	27bdfff8 	addiu	sp,sp,-8
  400994:	afbe0004 	sw	s8,4(sp)
  400998:	03a0f025 	move	s8,sp
  40099c:	afc40008 	sw	a0,8(s8)
  4009a0:	afc5000c 	sw	a1,12(s8)
  4009a4:	afc60010 	sw	a2,16(s8)
    __set->sig = (__left->sig & __right->sig);
  4009a8:	8fc2000c 	lw	v0,12(s8)
  4009ac:	8c430000 	lw	v1,0(v0)
  4009b0:	8fc20010 	lw	v0,16(s8)
  4009b4:	8c420000 	lw	v0,0(v0)
  4009b8:	00621824 	and	v1,v1,v0
  4009bc:	8fc20008 	lw	v0,8(s8)
  4009c0:	ac430000 	sw	v1,0(v0)
    return 0;
  4009c4:	00001025 	move	v0,zero
}
  4009c8:	03c0e825 	move	sp,s8
  4009cc:	8fbe0004 	lw	s8,4(sp)
  4009d0:	27bd0008 	addiu	sp,sp,8
  4009d4:	03e00008 	jr	ra
  4009d8:	00000000 	nop

004009dc <sigorset>:

// 计算两个信号集__left和__right的并集，并将结果存储在__set中。
int sigorset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right){
  4009dc:	27bdfff8 	addiu	sp,sp,-8
  4009e0:	afbe0004 	sw	s8,4(sp)
  4009e4:	03a0f025 	move	s8,sp
  4009e8:	afc40008 	sw	a0,8(s8)
  4009ec:	afc5000c 	sw	a1,12(s8)
  4009f0:	afc60010 	sw	a2,16(s8)
    __set->sig = (__left->sig | __right->sig);
  4009f4:	8fc2000c 	lw	v0,12(s8)
  4009f8:	8c430000 	lw	v1,0(v0)
  4009fc:	8fc20010 	lw	v0,16(s8)
  400a00:	8c420000 	lw	v0,0(v0)
  400a04:	00621825 	or	v1,v1,v0
  400a08:	8fc20008 	lw	v0,8(s8)
  400a0c:	ac430000 	sw	v1,0(v0)
    return 0;
  400a10:	00001025 	move	v0,zero
}
  400a14:	03c0e825 	move	sp,s8
  400a18:	8fbe0004 	lw	s8,4(sp)
  400a1c:	27bd0008 	addiu	sp,sp,8
  400a20:	03e00008 	jr	ra
  400a24:	00000000 	nop

00400a28 <sigprocmask>:

// 根据__how的值更改当前进程的信号屏蔽字。__set是要应用的新掩码，__oset（如果非NULL）
// 则保存旧的信号屏蔽字。__how可以是SIG_BLOCK（添加__set到当前掩码）、SIG_UNBLOCK（
// 从当前掩码中移除__set）、或SIG_SETMASK（设置当前掩码为__set）。
int sigprocmask(int __how, const sigset_t * __set, sigset_t * __oset){
  400a28:	27bdffe8 	addiu	sp,sp,-24
  400a2c:	afbf0014 	sw	ra,20(sp)
  400a30:	afbe0010 	sw	s8,16(sp)
  400a34:	03a0f025 	move	s8,sp
  400a38:	afc40018 	sw	a0,24(s8)
  400a3c:	afc5001c 	sw	a1,28(s8)
  400a40:	afc60020 	sw	a2,32(s8)
    return syscall_sigprocmask(__how, __set, __oset);
  400a44:	8fc60020 	lw	a2,32(s8)
  400a48:	8fc5001c 	lw	a1,28(s8)
  400a4c:	8fc40018 	lw	a0,24(s8)
  400a50:	0c1005b4 	jal	4016d0 <syscall_sigprocmask>
  400a54:	00000000 	nop
}
  400a58:	03c0e825 	move	sp,s8
  400a5c:	8fbf0014 	lw	ra,20(sp)
  400a60:	8fbe0010 	lw	s8,16(sp)
  400a64:	27bd0018 	addiu	sp,sp,24
  400a68:	03e00008 	jr	ra
  400a6c:	00000000 	nop

00400a70 <sigpending>:

// 获取当前被阻塞且未处理的信号集，并将其存储在__set中。
int sigpending(sigset_t *__set){
  400a70:	27bdfff8 	addiu	sp,sp,-8
  400a74:	afbe0004 	sw	s8,4(sp)
  400a78:	03a0f025 	move	s8,sp
  400a7c:	afc40008 	sw	a0,8(s8)
    __set->sig = env->env_sig_pending.sig;
  400a80:	3c020041 	lui	v0,0x41
  400a84:	8c428010 	lw	v0,-32752(v0)
  400a88:	8c4300e4 	lw	v1,228(v0)
  400a8c:	8fc20008 	lw	v0,8(s8)
  400a90:	ac430000 	sw	v1,0(v0)
    return 0;
  400a94:	00001025 	move	v0,zero
  400a98:	03c0e825 	move	sp,s8
  400a9c:	8fbe0004 	lw	s8,4(sp)
  400aa0:	27bd0008 	addiu	sp,sp,8
  400aa4:	03e00008 	jr	ra
  400aa8:	00000000 	nop
  400aac:	00000000 	nop

00400ab0 <cow_entry>:
 * Post-Condition:
 *  - Launch a 'user_panic' if 'va' is not a copy-on-write page.
 *  - Otherwise, this handler should map a private writable copy of
 *    the faulting page at the same address.
 */
static void __attribute__((noreturn)) cow_entry(struct Trapframe *tf) {
  400ab0:	27bdffc8 	addiu	sp,sp,-56
  400ab4:	afbf0034 	sw	ra,52(sp)
  400ab8:	afbe0030 	sw	s8,48(sp)
  400abc:	03a0f025 	move	s8,sp
  400ac0:	afc40038 	sw	a0,56(s8)
	u_int va = tf->cp0_badvaddr;
  400ac4:	8fc20038 	lw	v0,56(s8)
  400ac8:	8c42008c 	lw	v0,140(v0)
  400acc:	afc20018 	sw	v0,24(s8)

	/* Step 1: Find the 'perm' in which the faulting address 'va' is mapped. */
	/* Hint: Use 'vpt' and 'VPN' to find the page table entry. If the 'perm' doesn't have
	 * 'PTE_COW', launch a 'user_panic'. */
	/* Exercise 4.13: Your code here. (1/6) */
	perm = PTE_FLAGS(vpt[VPN(va)]);
  400ad0:	8fc20018 	lw	v0,24(s8)
  400ad4:	00021302 	srl	v0,v0,0xc
  400ad8:	00021880 	sll	v1,v0,0x2
  400adc:	3c027fc0 	lui	v0,0x7fc0
  400ae0:	00621021 	addu	v0,v1,v0
  400ae4:	8c420000 	lw	v0,0(v0)
  400ae8:	30420fff 	andi	v0,v0,0xfff
  400aec:	afc2001c 	sw	v0,28(s8)
	if(!(perm & PTE_COW)){
  400af0:	8fc2001c 	lw	v0,28(s8)
  400af4:	30420001 	andi	v0,v0,0x1
  400af8:	14400009 	bnez	v0,400b20 <cow_entry+0x70>
  400afc:	00000000 	nop
		user_panic("No PTE_COW for page %x",va);
  400b00:	8fc70018 	lw	a3,24(s8)
  400b04:	3c020040 	lui	v0,0x40
  400b08:	24465f50 	addiu	a2,v0,24400
  400b0c:	2405001a 	li	a1,26
  400b10:	3c020040 	lui	v0,0x40
  400b14:	24445f68 	addiu	a0,v0,24424
  400b18:	0c100157 	jal	40055c <_user_panic>
  400b1c:	00000000 	nop
	}
	/* Step 2: Remove 'PTE_COW' from the 'perm', and add 'PTE_D' to it. */
	/* Exercise 4.13: Your code here. (2/6) */
	perm &= ~PTE_COW;
  400b20:	8fc3001c 	lw	v1,28(s8)
  400b24:	2402fffe 	li	v0,-2
  400b28:	00621024 	and	v0,v1,v0
  400b2c:	afc2001c 	sw	v0,28(s8)
	perm |= PTE_D;
  400b30:	8fc2001c 	lw	v0,28(s8)
  400b34:	34420100 	ori	v0,v0,0x100
  400b38:	afc2001c 	sw	v0,28(s8)
	/* Step 3: Allocate a new page at 'UCOW'. */
	/* Exercise 4.13: Your code here. (3/6) */
	try(syscall_mem_alloc(0, UCOW, perm));
  400b3c:	8fc6001c 	lw	a2,28(s8)
  400b40:	3c02003f 	lui	v0,0x3f
  400b44:	3445f000 	ori	a1,v0,0xf000
  400b48:	00002025 	move	a0,zero
  400b4c:	0c1004ec 	jal	4013b0 <syscall_mem_alloc>
  400b50:	00000000 	nop
  400b54:	afc20020 	sw	v0,32(s8)
  400b58:	8fc20020 	lw	v0,32(s8)
  400b5c:	14400031 	bnez	v0,400c24 <cow_entry+0x174>
  400b60:	00000000 	nop
	/* Step 4: Copy the content of the faulting page at 'va' to 'UCOW'. */
	/* Hint: 'va' may not be aligned to a page! */
	/* Exercise 4.13: Your code here. (4/6) */
	memcpy(UCOW, ROUNDDOWN(va, PAGE_SIZE), PAGE_SIZE);
  400b64:	8fc30018 	lw	v1,24(s8)
  400b68:	2402f000 	li	v0,-4096
  400b6c:	00621024 	and	v0,v1,v0
  400b70:	24061000 	li	a2,4096
  400b74:	00402825 	move	a1,v0
  400b78:	3c02003f 	lui	v0,0x3f
  400b7c:	3444f000 	ori	a0,v0,0xf000
  400b80:	0c101650 	jal	405940 <memcpy>
  400b84:	00000000 	nop
	// Step 5: Map the page at 'UCOW' to 'va' with the new 'perm'.
	/* Exercise 4.13: Your code here. (5/6) */
	try(syscall_mem_map(0, UCOW, 0, ROUNDDOWN(va, PAGE_SIZE), perm));
  400b88:	8fc30018 	lw	v1,24(s8)
  400b8c:	2402f000 	li	v0,-4096
  400b90:	00621024 	and	v0,v1,v0
  400b94:	00401825 	move	v1,v0
  400b98:	8fc2001c 	lw	v0,28(s8)
  400b9c:	afa20010 	sw	v0,16(sp)
  400ba0:	00603825 	move	a3,v1
  400ba4:	00003025 	move	a2,zero
  400ba8:	3c02003f 	lui	v0,0x3f
  400bac:	3445f000 	ori	a1,v0,0xf000
  400bb0:	00002025 	move	a0,zero
  400bb4:	0c1004ff 	jal	4013fc <syscall_mem_map>
  400bb8:	00000000 	nop
  400bbc:	afc20024 	sw	v0,36(s8)
  400bc0:	8fc20024 	lw	v0,36(s8)
  400bc4:	1440001a 	bnez	v0,400c30 <cow_entry+0x180>
  400bc8:	00000000 	nop
	// Step 6: Unmap the page at 'UCOW'.
	/* Exercise 4.13: Your code here. (6/6) */
	try(syscall_mem_unmap(0, UCOW));
  400bcc:	3c02003f 	lui	v0,0x3f
  400bd0:	3445f000 	ori	a1,v0,0xf000
  400bd4:	00002025 	move	a0,zero
  400bd8:	0c100517 	jal	40145c <syscall_mem_unmap>
  400bdc:	00000000 	nop
  400be0:	afc20028 	sw	v0,40(s8)
  400be4:	8fc20028 	lw	v0,40(s8)
  400be8:	14400014 	bnez	v0,400c3c <cow_entry+0x18c>
  400bec:	00000000 	nop
	// Step 7: Return to the faulting routine.
	int r = syscall_set_trapframe(0, tf);
  400bf0:	8fc50038 	lw	a1,56(s8)
  400bf4:	00002025 	move	a0,zero
  400bf8:	0c100539 	jal	4014e4 <syscall_set_trapframe>
  400bfc:	00000000 	nop
  400c00:	afc2002c 	sw	v0,44(s8)
	user_panic("syscall_set_trapframe returned %d", r);
  400c04:	8fc7002c 	lw	a3,44(s8)
  400c08:	3c020040 	lui	v0,0x40
  400c0c:	24465f74 	addiu	a2,v0,24436
  400c10:	2405002f 	li	a1,47
  400c14:	3c020040 	lui	v0,0x40
  400c18:	24445f68 	addiu	a0,v0,24424
  400c1c:	0c100157 	jal	40055c <_user_panic>
  400c20:	00000000 	nop
	try(syscall_mem_alloc(0, UCOW, perm));
  400c24:	00000000 	nop
  400c28:	10000005 	b	400c40 <cow_entry+0x190>
  400c2c:	00000000 	nop
	try(syscall_mem_map(0, UCOW, 0, ROUNDDOWN(va, PAGE_SIZE), perm));
  400c30:	00000000 	nop
  400c34:	10000002 	b	400c40 <cow_entry+0x190>
  400c38:	00000000 	nop
	try(syscall_mem_unmap(0, UCOW));
  400c3c:	00000000 	nop
}
  400c40:	03c0e825 	move	sp,s8
  400c44:	8fbf0034 	lw	ra,52(sp)
  400c48:	8fbe0030 	lw	s8,48(sp)
  400c4c:	27bd0038 	addiu	sp,sp,56
  400c50:	03e00008 	jr	ra
  400c54:	00000000 	nop

00400c58 <duppage>:
 *   - You can pass '0' as an 'envid' in arguments of 'syscall_*' to indicate current env because
 *     kernel 'envid2env' converts '0' to 'curenv').
 *   - You should use 'syscall_mem_map', the user space wrapper around 'msyscall' to invoke
 *     'sys_mem_map' in kernel.
 */
static void duppage(u_int envid, u_int vpn) {
  400c58:	27bdffd8 	addiu	sp,sp,-40
  400c5c:	afbf0024 	sw	ra,36(sp)
  400c60:	afbe0020 	sw	s8,32(sp)
  400c64:	03a0f025 	move	s8,sp
  400c68:	afc40028 	sw	a0,40(s8)
  400c6c:	afc5002c 	sw	a1,44(s8)
	u_int addr;
	u_int perm;
	/* Step 1: Get the permission of the page. */
	/* Hint: Use 'vpt' to find the page table entry. */
	/* Exercise 4.10: Your code here. (1/2) */
	Pte *pte = &vpt[vpn];
  400c70:	8fc2002c 	lw	v0,44(s8)
  400c74:	00021880 	sll	v1,v0,0x2
  400c78:	3c027fc0 	lui	v0,0x7fc0
  400c7c:	00621021 	addu	v0,v1,v0
  400c80:	afc20018 	sw	v0,24(s8)
	perm = PTE_FLAGS(*pte);
  400c84:	8fc20018 	lw	v0,24(s8)
  400c88:	8c420000 	lw	v0,0(v0)
  400c8c:	30420fff 	andi	v0,v0,0xfff
  400c90:	afc2001c 	sw	v0,28(s8)
	/* Step 2: If the page is writable, and not shared with children, and not marked as COW yet,
	 * then map it as copy-on-write, both in the parent (0) and the child (envid). */
	/* Hint: The page should be first mapped to the child before remapped in the parent. (Why?)
	 */
	/* Exercise 4.10: Your code here. (2/2) */
	if((perm & PTE_D) && !(perm & PTE_COW) && !(perm & PTE_LIBRARY)){
  400c94:	8fc2001c 	lw	v0,28(s8)
  400c98:	30420100 	andi	v0,v0,0x100
  400c9c:	1040002e 	beqz	v0,400d58 <duppage+0x100>
  400ca0:	00000000 	nop
  400ca4:	8fc2001c 	lw	v0,28(s8)
  400ca8:	30420001 	andi	v0,v0,0x1
  400cac:	1440002a 	bnez	v0,400d58 <duppage+0x100>
  400cb0:	00000000 	nop
  400cb4:	8fc2001c 	lw	v0,28(s8)
  400cb8:	30420002 	andi	v0,v0,0x2
  400cbc:	14400026 	bnez	v0,400d58 <duppage+0x100>
  400cc0:	00000000 	nop
		perm &= ~PTE_D;
  400cc4:	8fc3001c 	lw	v1,28(s8)
  400cc8:	2402feff 	li	v0,-257
  400ccc:	00621024 	and	v0,v1,v0
  400cd0:	afc2001c 	sw	v0,28(s8)
		perm |= PTE_COW;
  400cd4:	8fc2001c 	lw	v0,28(s8)
  400cd8:	34420001 	ori	v0,v0,0x1
  400cdc:	afc2001c 	sw	v0,28(s8)
		syscall_mem_map(0, (vpn * PAGE_SIZE), envid, (vpn * PAGE_SIZE), perm);
  400ce0:	8fc2002c 	lw	v0,44(s8)
  400ce4:	00021300 	sll	v0,v0,0xc
  400ce8:	00401825 	move	v1,v0
  400cec:	8fc2002c 	lw	v0,44(s8)
  400cf0:	00021300 	sll	v0,v0,0xc
  400cf4:	00402025 	move	a0,v0
  400cf8:	8fc2001c 	lw	v0,28(s8)
  400cfc:	afa20010 	sw	v0,16(sp)
  400d00:	00803825 	move	a3,a0
  400d04:	8fc60028 	lw	a2,40(s8)
  400d08:	00602825 	move	a1,v1
  400d0c:	00002025 	move	a0,zero
  400d10:	0c1004ff 	jal	4013fc <syscall_mem_map>
  400d14:	00000000 	nop
		syscall_mem_map(0, (vpn * PAGE_SIZE), 0, (vpn * PAGE_SIZE), perm);
  400d18:	8fc2002c 	lw	v0,44(s8)
  400d1c:	00021300 	sll	v0,v0,0xc
  400d20:	00401825 	move	v1,v0
  400d24:	8fc2002c 	lw	v0,44(s8)
  400d28:	00021300 	sll	v0,v0,0xc
  400d2c:	00402025 	move	a0,v0
  400d30:	8fc2001c 	lw	v0,28(s8)
  400d34:	afa20010 	sw	v0,16(sp)
  400d38:	00803825 	move	a3,a0
  400d3c:	00003025 	move	a2,zero
  400d40:	00602825 	move	a1,v1
  400d44:	00002025 	move	a0,zero
  400d48:	0c1004ff 	jal	4013fc <syscall_mem_map>
  400d4c:	00000000 	nop
  400d50:	10000010 	b	400d94 <duppage+0x13c>
  400d54:	00000000 	nop
	}
	else{
		syscall_mem_map(0, (vpn * PAGE_SIZE), envid, (vpn * PAGE_SIZE), perm);
  400d58:	8fc2002c 	lw	v0,44(s8)
  400d5c:	00021300 	sll	v0,v0,0xc
  400d60:	00401825 	move	v1,v0
  400d64:	8fc2002c 	lw	v0,44(s8)
  400d68:	00021300 	sll	v0,v0,0xc
  400d6c:	00402025 	move	a0,v0
  400d70:	8fc2001c 	lw	v0,28(s8)
  400d74:	afa20010 	sw	v0,16(sp)
  400d78:	00803825 	move	a3,a0
  400d7c:	8fc60028 	lw	a2,40(s8)
  400d80:	00602825 	move	a1,v1
  400d84:	00002025 	move	a0,zero
  400d88:	0c1004ff 	jal	4013fc <syscall_mem_map>
  400d8c:	00000000 	nop
	...
	}
}
  400d98:	03c0e825 	move	sp,s8
  400d9c:	8fbf0024 	lw	ra,36(sp)
  400da0:	8fbe0020 	lw	s8,32(sp)
  400da4:	27bd0028 	addiu	sp,sp,40
  400da8:	03e00008 	jr	ra
  400dac:	00000000 	nop

00400db0 <sig_entry>:

static void __attribute__((noreturn)) sig_entry(struct Trapframe *tf, u_int signum, void (*handler)(int), u_int mask) {
  400db0:	27bdffc8 	addiu	sp,sp,-56
  400db4:	afbf0034 	sw	ra,52(sp)
  400db8:	afbe0030 	sw	s8,48(sp)
  400dbc:	03a0f025 	move	s8,sp
  400dc0:	afc40038 	sw	a0,56(s8)
  400dc4:	afc5003c 	sw	a1,60(s8)
  400dc8:	afc60040 	sw	a2,64(s8)
  400dcc:	afc70044 	sw	a3,68(s8)
	debugf("%x %d in sig_entry! %x\n", env->env_id, signum,debugf);
  400dd0:	3c020041 	lui	v0,0x41
  400dd4:	8c428010 	lw	v0,-32752(v0)
  400dd8:	8c4300a0 	lw	v1,160(v0)
  400ddc:	3c020040 	lui	v0,0x40
  400de0:	24470504 	addiu	a3,v0,1284
  400de4:	8fc6003c 	lw	a2,60(s8)
  400de8:	00602825 	move	a1,v1
  400dec:	3c020040 	lui	v0,0x40
  400df0:	24445f98 	addiu	a0,v0,24472
  400df4:	0c100141 	jal	400504 <debugf>
  400df8:	00000000 	nop
	int r;
	sigset_t sa_mask;
	sigset_t old_mask;
	sa_mask.sig = mask | (1 << (signum - 1));
  400dfc:	8fc2003c 	lw	v0,60(s8)
  400e00:	2442ffff 	addiu	v0,v0,-1
  400e04:	24030001 	li	v1,1
  400e08:	00431004 	sllv	v0,v1,v0
  400e0c:	00401825 	move	v1,v0
  400e10:	8fc20044 	lw	v0,68(s8)
  400e14:	00621025 	or	v0,v1,v0
  400e18:	afc20028 	sw	v0,40(s8)
	if(handler != NULL){
  400e1c:	8fc20040 	lw	v0,64(s8)
  400e20:	10400027 	beqz	v0,400ec0 <sig_entry+0x110>
  400e24:	00000000 	nop
		try(sigprocmask(SIG_BLOCK, &sa_mask, &old_mask));
  400e28:	27c3002c 	addiu	v1,s8,44
  400e2c:	27c20028 	addiu	v0,s8,40
  400e30:	00603025 	move	a2,v1
  400e34:	00402825 	move	a1,v0
  400e38:	00002025 	move	a0,zero
  400e3c:	0c10028a 	jal	400a28 <sigprocmask>
  400e40:	00000000 	nop
  400e44:	afc20014 	sw	v0,20(s8)
  400e48:	8fc20014 	lw	v0,20(s8)
  400e4c:	1440004c 	bnez	v0,400f80 <sig_entry+0x1d0>
  400e50:	00000000 	nop
		void *func = handler;
  400e54:	8fc20040 	lw	v0,64(s8)
  400e58:	afc20018 	sw	v0,24(s8)
		try(syscall_set_sig_flag(0, signum));
  400e5c:	8fc5003c 	lw	a1,60(s8)
  400e60:	00002025 	move	a0,zero
  400e64:	0c1005fc 	jal	4017f0 <syscall_set_sig_flag>
  400e68:	00000000 	nop
  400e6c:	afc2001c 	sw	v0,28(s8)
  400e70:	8fc2001c 	lw	v0,28(s8)
  400e74:	14400045 	bnez	v0,400f8c <sig_entry+0x1dc>
  400e78:	00000000 	nop
		handler(signum);
  400e7c:	8fc3003c 	lw	v1,60(s8)
  400e80:	8fc20040 	lw	v0,64(s8)
  400e84:	00602025 	move	a0,v1
  400e88:	0040f809 	jalr	v0
  400e8c:	00000000 	nop
		
		try(sigprocmask(SIG_SETMASK, &old_mask, NULL));
  400e90:	27c2002c 	addiu	v0,s8,44
  400e94:	00003025 	move	a2,zero
  400e98:	00402825 	move	a1,v0
  400e9c:	24040002 	li	a0,2
  400ea0:	0c10028a 	jal	400a28 <sigprocmask>
  400ea4:	00000000 	nop
  400ea8:	afc20020 	sw	v0,32(s8)
  400eac:	8fc20020 	lw	v0,32(s8)
  400eb0:	10400026 	beqz	v0,400f4c <sig_entry+0x19c>
  400eb4:	00000000 	nop
  400eb8:	10000038 	b	400f9c <sig_entry+0x1ec>
  400ebc:	00000000 	nop
	}
	else if(signum == SIGKILL || signum == SIGINT || signum == SIGILL || signum == SIGSEGV){
  400ec0:	8fc3003c 	lw	v1,60(s8)
  400ec4:	24020009 	li	v0,9
  400ec8:	1062000d 	beq	v1,v0,400f00 <sig_entry+0x150>
  400ecc:	00000000 	nop
  400ed0:	8fc3003c 	lw	v1,60(s8)
  400ed4:	24020002 	li	v0,2
  400ed8:	10620009 	beq	v1,v0,400f00 <sig_entry+0x150>
  400edc:	00000000 	nop
  400ee0:	8fc3003c 	lw	v1,60(s8)
  400ee4:	24020004 	li	v0,4
  400ee8:	10620005 	beq	v1,v0,400f00 <sig_entry+0x150>
  400eec:	00000000 	nop
  400ef0:	8fc3003c 	lw	v1,60(s8)
  400ef4:	2402000b 	li	v0,11
  400ef8:	14620003 	bne	v1,v0,400f08 <sig_entry+0x158>
  400efc:	00000000 	nop
        exit();
  400f00:	0c100190 	jal	400640 <exit>
  400f04:	00000000 	nop
		return;
    }
	else if (signum == SIGSYS) {
  400f08:	8fc3003c 	lw	v1,60(s8)
  400f0c:	2402001f 	li	v0,31
  400f10:	1462000e 	bne	v1,v0,400f4c <sig_entry+0x19c>
  400f14:	00000000 	nop
		try(syscall_set_sig_flag(0, 2));
  400f18:	24050002 	li	a1,2
  400f1c:	00002025 	move	a0,zero
  400f20:	0c1005fc 	jal	4017f0 <syscall_set_sig_flag>
  400f24:	00000000 	nop
  400f28:	afc20010 	sw	v0,16(s8)
  400f2c:	8fc20010 	lw	v0,16(s8)
  400f30:	14400019 	bnez	v0,400f98 <sig_entry+0x1e8>
  400f34:	00000000 	nop
		tf->cp0_epc += 4;
  400f38:	8fc20038 	lw	v0,56(s8)
  400f3c:	8c420094 	lw	v0,148(v0)
  400f40:	24430004 	addiu	v1,v0,4
  400f44:	8fc20038 	lw	v0,56(s8)
  400f48:	ac430094 	sw	v1,148(v0)
	}
	r = syscall_set_trapframe(0, tf);
  400f4c:	8fc50038 	lw	a1,56(s8)
  400f50:	00002025 	move	a0,zero
  400f54:	0c100539 	jal	4014e4 <syscall_set_trapframe>
  400f58:	00000000 	nop
  400f5c:	afc20024 	sw	v0,36(s8)
	user_panic("syscall_set_trapframe returned %d", r);
  400f60:	8fc70024 	lw	a3,36(s8)
  400f64:	3c020040 	lui	v0,0x40
  400f68:	24465f74 	addiu	a2,v0,24436
  400f6c:	24050077 	li	a1,119
  400f70:	3c020040 	lui	v0,0x40
  400f74:	24445f68 	addiu	a0,v0,24424
  400f78:	0c100157 	jal	40055c <_user_panic>
  400f7c:	00000000 	nop
		try(sigprocmask(SIG_BLOCK, &sa_mask, &old_mask));
  400f80:	00000000 	nop
  400f84:	10000005 	b	400f9c <sig_entry+0x1ec>
  400f88:	00000000 	nop
		try(syscall_set_sig_flag(0, signum));
  400f8c:	00000000 	nop
  400f90:	10000002 	b	400f9c <sig_entry+0x1ec>
  400f94:	00000000 	nop
		try(syscall_set_sig_flag(0, 2));
  400f98:	00000000 	nop
}
  400f9c:	03c0e825 	move	sp,s8
  400fa0:	8fbf0034 	lw	ra,52(sp)
  400fa4:	8fbe0030 	lw	s8,48(sp)
  400fa8:	27bd0038 	addiu	sp,sp,56
  400fac:	03e00008 	jr	ra
  400fb0:	00000000 	nop

00400fb4 <env_set_sig_entry>:

int env_set_sig_entry(){
  400fb4:	27bdffe8 	addiu	sp,sp,-24
  400fb8:	afbf0014 	sw	ra,20(sp)
  400fbc:	afbe0010 	sw	s8,16(sp)
  400fc0:	03a0f025 	move	s8,sp
	return syscall_set_sig_entry(0, sig_entry);
  400fc4:	3c020040 	lui	v0,0x40
  400fc8:	24450db0 	addiu	a1,v0,3504
  400fcc:	00002025 	move	a0,zero
  400fd0:	0c1005eb 	jal	4017ac <syscall_set_sig_entry>
  400fd4:	00000000 	nop
}
  400fd8:	03c0e825 	move	sp,s8
  400fdc:	8fbf0014 	lw	ra,20(sp)
  400fe0:	8fbe0010 	lw	s8,16(sp)
  400fe4:	27bd0018 	addiu	sp,sp,24
  400fe8:	03e00008 	jr	ra
  400fec:	00000000 	nop

00400ff0 <fork>:
 *
 * Hint:
 *   Use global symbols 'env', 'vpt' and 'vpd'.
 *   Use 'syscall_set_tlb_mod_entry', 'syscall_getenvid', 'syscall_exofork',  and 'duppage'.
 */
int fork(void) {
  400ff0:	27bdffc0 	addiu	sp,sp,-64
  400ff4:	afbf003c 	sw	ra,60(sp)
  400ff8:	afbe0038 	sw	s8,56(sp)
  400ffc:	03a0f025 	move	s8,sp
	u_int child;
	u_int i;

	/* Step 1: Set our TLB Mod user exception entry to 'cow_entry' if not done yet. */
	if (env->env_user_tlb_mod_entry != (u_int)cow_entry) {
  401000:	3c020041 	lui	v0,0x41
  401004:	8c428010 	lw	v0,-32752(v0)
  401008:	8c4300d4 	lw	v1,212(v0)
  40100c:	3c020040 	lui	v0,0x40
  401010:	24420ab0 	addiu	v0,v0,2736
  401014:	1062000d 	beq	v1,v0,40104c <fork+0x5c>
  401018:	00000000 	nop
		try(syscall_set_tlb_mod_entry(0, cow_entry));
  40101c:	3c020040 	lui	v0,0x40
  401020:	24450ab0 	addiu	a1,v0,2736
  401024:	00002025 	move	a0,zero
  401028:	0c1004db 	jal	40136c <syscall_set_tlb_mod_entry>
  40102c:	00000000 	nop
  401030:	afc2001c 	sw	v0,28(s8)
  401034:	8fc2001c 	lw	v0,28(s8)
  401038:	10400004 	beqz	v0,40104c <fork+0x5c>
  40103c:	00000000 	nop
  401040:	8fc2001c 	lw	v0,28(s8)
  401044:	10000078 	b	401228 <fork+0x238>
  401048:	00000000 	nop
	}

	if (env->env_user_sig_entry != (u_int)sig_entry) {
  40104c:	3c020041 	lui	v0,0x41
  401050:	8c428010 	lw	v0,-32752(v0)
  401054:	8c4300e8 	lw	v1,232(v0)
  401058:	3c020040 	lui	v0,0x40
  40105c:	24420db0 	addiu	v0,v0,3504
  401060:	1062000d 	beq	v1,v0,401098 <fork+0xa8>
  401064:	00000000 	nop
		try(syscall_set_sig_entry(0, sig_entry));
  401068:	3c020040 	lui	v0,0x40
  40106c:	24450db0 	addiu	a1,v0,3504
  401070:	00002025 	move	a0,zero
  401074:	0c1005eb 	jal	4017ac <syscall_set_sig_entry>
  401078:	00000000 	nop
  40107c:	afc20020 	sw	v0,32(s8)
  401080:	8fc20020 	lw	v0,32(s8)
  401084:	10400004 	beqz	v0,401098 <fork+0xa8>
  401088:	00000000 	nop
  40108c:	8fc20020 	lw	v0,32(s8)
  401090:	10000065 	b	401228 <fork+0x238>
  401094:	00000000 	nop
int syscall_mem_alloc(u_int envid, void *va, u_int perm);
int syscall_mem_map(u_int srcid, void *srcva, u_int dstid, void *dstva, u_int perm);
int syscall_mem_unmap(u_int envid, void *va);

__attribute__((always_inline)) inline static int syscall_exofork(void) {
	return msyscall(SYS_exofork, 0, 0, 0, 0, 0);
  401098:	afa00014 	sw	zero,20(sp)
  40109c:	afa00010 	sw	zero,16(sp)
  4010a0:	00003825 	move	a3,zero
  4010a4:	00003025 	move	a2,zero
  4010a8:	00002825 	move	a1,zero
  4010ac:	24040009 	li	a0,9
  4010b0:	0c1000b8 	jal	4002e0 <msyscall>
  4010b4:	00000000 	nop
	}

	/* Step 2: Create a child env that's not ready to be scheduled. */
	// Hint: 'env' should always point to the current env itself, so we should fix it to the
	// correct value.
	child = syscall_exofork();
  4010b8:	afc20024 	sw	v0,36(s8)
	if (child == 0) {
  4010bc:	8fc20024 	lw	v0,36(s8)
  4010c0:	14400010 	bnez	v0,401104 <fork+0x114>
  4010c4:	00000000 	nop
		env = envs + ENVX(syscall_getenvid());
  4010c8:	0c1004b1 	jal	4012c4 <syscall_getenvid>
  4010cc:	00000000 	nop
  4010d0:	304303ff 	andi	v1,v0,0x3ff
  4010d4:	00601025 	move	v0,v1
  4010d8:	00021180 	sll	v0,v0,0x6
  4010dc:	00431023 	subu	v0,v0,v1
  4010e0:	000210c0 	sll	v0,v0,0x3
  4010e4:	00401825 	move	v1,v0
  4010e8:	3c027f40 	lui	v0,0x7f40
  4010ec:	00621821 	addu	v1,v1,v0
  4010f0:	3c020041 	lui	v0,0x41
  4010f4:	ac438010 	sw	v1,-32752(v0)
		return 0;
  4010f8:	00001025 	move	v0,zero
  4010fc:	1000004a 	b	401228 <fork+0x238>
  401100:	00000000 	nop
	}
	/* Step 3: Map all mapped pages below 'USTACKTOP' into the child's address space. */
	// Hint: You should use 'duppage'.
	/* Exercise 4.15: Your code here. (1/2) */
	for(u_long va = 0; va < USTACKTOP; va += PAGE_SIZE){
  401104:	afc00018 	sw	zero,24(s8)
  401108:	1000001d 	b	401180 <fork+0x190>
  40110c:	00000000 	nop
		if ((vpd[PDX(va)] & PTE_V) && (vpt[VPN(va)] & PTE_V)) {
  401110:	8fc20018 	lw	v0,24(s8)
  401114:	00021582 	srl	v0,v0,0x16
  401118:	00021880 	sll	v1,v0,0x2
  40111c:	3c027fdf 	lui	v0,0x7fdf
  401120:	3442f000 	ori	v0,v0,0xf000
  401124:	00621021 	addu	v0,v1,v0
  401128:	8c420000 	lw	v0,0(v0)
  40112c:	30420080 	andi	v0,v0,0x80
  401130:	10400010 	beqz	v0,401174 <fork+0x184>
  401134:	00000000 	nop
  401138:	8fc20018 	lw	v0,24(s8)
  40113c:	00021302 	srl	v0,v0,0xc
  401140:	00021880 	sll	v1,v0,0x2
  401144:	3c027fc0 	lui	v0,0x7fc0
  401148:	00621021 	addu	v0,v1,v0
  40114c:	8c420000 	lw	v0,0(v0)
  401150:	30420080 	andi	v0,v0,0x80
  401154:	10400007 	beqz	v0,401174 <fork+0x184>
  401158:	00000000 	nop
        	duppage(child, VPN(va));
  40115c:	8fc20018 	lw	v0,24(s8)
  401160:	00021302 	srl	v0,v0,0xc
  401164:	00402825 	move	a1,v0
  401168:	8fc40024 	lw	a0,36(s8)
  40116c:	0c100316 	jal	400c58 <duppage>
  401170:	00000000 	nop
	for(u_long va = 0; va < USTACKTOP; va += PAGE_SIZE){
  401174:	8fc20018 	lw	v0,24(s8)
  401178:	24421000 	addiu	v0,v0,4096
  40117c:	afc20018 	sw	v0,24(s8)
  401180:	8fc30018 	lw	v1,24(s8)
  401184:	3c027f3f 	lui	v0,0x7f3f
  401188:	3442e000 	ori	v0,v0,0xe000
  40118c:	0062102b 	sltu	v0,v1,v0
  401190:	1440ffdf 	bnez	v0,401110 <fork+0x120>
  401194:	00000000 	nop
	/* Hint:
	 *   You may use 'syscall_set_tlb_mod_entry' and 'syscall_set_env_status'
	 *   Child's TLB Mod user exception entry should handle COW, so set it to 'cow_entry'
	 */
	/* Exercise 4.15: Your code here. (2/2) */
	try(syscall_set_tlb_mod_entry(child, cow_entry));
  401198:	3c020040 	lui	v0,0x40
  40119c:	24450ab0 	addiu	a1,v0,2736
  4011a0:	8fc40024 	lw	a0,36(s8)
  4011a4:	0c1004db 	jal	40136c <syscall_set_tlb_mod_entry>
  4011a8:	00000000 	nop
  4011ac:	afc20028 	sw	v0,40(s8)
  4011b0:	8fc20028 	lw	v0,40(s8)
  4011b4:	10400004 	beqz	v0,4011c8 <fork+0x1d8>
  4011b8:	00000000 	nop
  4011bc:	8fc20028 	lw	v0,40(s8)
  4011c0:	10000019 	b	401228 <fork+0x238>
  4011c4:	00000000 	nop
	try(syscall_set_sig_entry(child, sig_entry));
  4011c8:	3c020040 	lui	v0,0x40
  4011cc:	24450db0 	addiu	a1,v0,3504
  4011d0:	8fc40024 	lw	a0,36(s8)
  4011d4:	0c1005eb 	jal	4017ac <syscall_set_sig_entry>
  4011d8:	00000000 	nop
  4011dc:	afc2002c 	sw	v0,44(s8)
  4011e0:	8fc2002c 	lw	v0,44(s8)
  4011e4:	10400004 	beqz	v0,4011f8 <fork+0x208>
  4011e8:	00000000 	nop
  4011ec:	8fc2002c 	lw	v0,44(s8)
  4011f0:	1000000d 	b	401228 <fork+0x238>
  4011f4:	00000000 	nop
	try(syscall_set_env_status(child, ENV_RUNNABLE));
  4011f8:	24050001 	li	a1,1
  4011fc:	8fc40024 	lw	a0,36(s8)
  401200:	0c100528 	jal	4014a0 <syscall_set_env_status>
  401204:	00000000 	nop
  401208:	afc20030 	sw	v0,48(s8)
  40120c:	8fc20030 	lw	v0,48(s8)
  401210:	10400004 	beqz	v0,401224 <fork+0x234>
  401214:	00000000 	nop
  401218:	8fc20030 	lw	v0,48(s8)
  40121c:	10000002 	b	401228 <fork+0x238>
  401220:	00000000 	nop
	return child;
  401224:	8fc20024 	lw	v0,36(s8)
}
  401228:	03c0e825 	move	sp,s8
  40122c:	8fbf003c 	lw	ra,60(sp)
  401230:	8fbe0038 	lw	s8,56(sp)
  401234:	27bd0040 	addiu	sp,sp,64
  401238:	03e00008 	jr	ra
  40123c:	00000000 	nop

00401240 <syscall_putchar>:
#include <lib.h>
#include <mmu.h>
#include <syscall.h>
#include <trap.h>

void syscall_putchar(int ch) {
  401240:	27bdffe8 	addiu	sp,sp,-24
  401244:	afbf0014 	sw	ra,20(sp)
  401248:	afbe0010 	sw	s8,16(sp)
  40124c:	03a0f025 	move	s8,sp
  401250:	afc40018 	sw	a0,24(s8)
	msyscall(SYS_putchar, ch);
  401254:	8fc50018 	lw	a1,24(s8)
  401258:	00002025 	move	a0,zero
  40125c:	0c1000b8 	jal	4002e0 <msyscall>
  401260:	00000000 	nop
}
  401264:	00000000 	nop
  401268:	03c0e825 	move	sp,s8
  40126c:	8fbf0014 	lw	ra,20(sp)
  401270:	8fbe0010 	lw	s8,16(sp)
  401274:	27bd0018 	addiu	sp,sp,24
  401278:	03e00008 	jr	ra
  40127c:	00000000 	nop

00401280 <syscall_print_cons>:

int syscall_print_cons(const void *str, u_int num) {
  401280:	27bdffe8 	addiu	sp,sp,-24
  401284:	afbf0014 	sw	ra,20(sp)
  401288:	afbe0010 	sw	s8,16(sp)
  40128c:	03a0f025 	move	s8,sp
  401290:	afc40018 	sw	a0,24(s8)
  401294:	afc5001c 	sw	a1,28(s8)
	return msyscall(SYS_print_cons, str, num);
  401298:	8fc6001c 	lw	a2,28(s8)
  40129c:	8fc50018 	lw	a1,24(s8)
  4012a0:	24040001 	li	a0,1
  4012a4:	0c1000b8 	jal	4002e0 <msyscall>
  4012a8:	00000000 	nop
}
  4012ac:	03c0e825 	move	sp,s8
  4012b0:	8fbf0014 	lw	ra,20(sp)
  4012b4:	8fbe0010 	lw	s8,16(sp)
  4012b8:	27bd0018 	addiu	sp,sp,24
  4012bc:	03e00008 	jr	ra
  4012c0:	00000000 	nop

004012c4 <syscall_getenvid>:

u_int syscall_getenvid(void) {
  4012c4:	27bdffe8 	addiu	sp,sp,-24
  4012c8:	afbf0014 	sw	ra,20(sp)
  4012cc:	afbe0010 	sw	s8,16(sp)
  4012d0:	03a0f025 	move	s8,sp
	return msyscall(SYS_getenvid);
  4012d4:	24040002 	li	a0,2
  4012d8:	0c1000b8 	jal	4002e0 <msyscall>
  4012dc:	00000000 	nop
}
  4012e0:	03c0e825 	move	sp,s8
  4012e4:	8fbf0014 	lw	ra,20(sp)
  4012e8:	8fbe0010 	lw	s8,16(sp)
  4012ec:	27bd0018 	addiu	sp,sp,24
  4012f0:	03e00008 	jr	ra
  4012f4:	00000000 	nop

004012f8 <syscall_yield>:

void syscall_yield(void) {
  4012f8:	27bdffe8 	addiu	sp,sp,-24
  4012fc:	afbf0014 	sw	ra,20(sp)
  401300:	afbe0010 	sw	s8,16(sp)
  401304:	03a0f025 	move	s8,sp
	msyscall(SYS_yield);
  401308:	24040003 	li	a0,3
  40130c:	0c1000b8 	jal	4002e0 <msyscall>
  401310:	00000000 	nop
}
  401314:	00000000 	nop
  401318:	03c0e825 	move	sp,s8
  40131c:	8fbf0014 	lw	ra,20(sp)
  401320:	8fbe0010 	lw	s8,16(sp)
  401324:	27bd0018 	addiu	sp,sp,24
  401328:	03e00008 	jr	ra
  40132c:	00000000 	nop

00401330 <syscall_env_destroy>:

int syscall_env_destroy(u_int envid) {
  401330:	27bdffe8 	addiu	sp,sp,-24
  401334:	afbf0014 	sw	ra,20(sp)
  401338:	afbe0010 	sw	s8,16(sp)
  40133c:	03a0f025 	move	s8,sp
  401340:	afc40018 	sw	a0,24(s8)
	return msyscall(SYS_env_destroy, envid);
  401344:	8fc50018 	lw	a1,24(s8)
  401348:	24040004 	li	a0,4
  40134c:	0c1000b8 	jal	4002e0 <msyscall>
  401350:	00000000 	nop
}
  401354:	03c0e825 	move	sp,s8
  401358:	8fbf0014 	lw	ra,20(sp)
  40135c:	8fbe0010 	lw	s8,16(sp)
  401360:	27bd0018 	addiu	sp,sp,24
  401364:	03e00008 	jr	ra
  401368:	00000000 	nop

0040136c <syscall_set_tlb_mod_entry>:

int syscall_set_tlb_mod_entry(u_int envid, void (*func)(struct Trapframe *)) {
  40136c:	27bdffe8 	addiu	sp,sp,-24
  401370:	afbf0014 	sw	ra,20(sp)
  401374:	afbe0010 	sw	s8,16(sp)
  401378:	03a0f025 	move	s8,sp
  40137c:	afc40018 	sw	a0,24(s8)
  401380:	afc5001c 	sw	a1,28(s8)
	return msyscall(SYS_set_tlb_mod_entry, envid, func);
  401384:	8fc6001c 	lw	a2,28(s8)
  401388:	8fc50018 	lw	a1,24(s8)
  40138c:	24040005 	li	a0,5
  401390:	0c1000b8 	jal	4002e0 <msyscall>
  401394:	00000000 	nop
}
  401398:	03c0e825 	move	sp,s8
  40139c:	8fbf0014 	lw	ra,20(sp)
  4013a0:	8fbe0010 	lw	s8,16(sp)
  4013a4:	27bd0018 	addiu	sp,sp,24
  4013a8:	03e00008 	jr	ra
  4013ac:	00000000 	nop

004013b0 <syscall_mem_alloc>:

int syscall_mem_alloc(u_int envid, void *va, u_int perm) {
  4013b0:	27bdffe8 	addiu	sp,sp,-24
  4013b4:	afbf0014 	sw	ra,20(sp)
  4013b8:	afbe0010 	sw	s8,16(sp)
  4013bc:	03a0f025 	move	s8,sp
  4013c0:	afc40018 	sw	a0,24(s8)
  4013c4:	afc5001c 	sw	a1,28(s8)
  4013c8:	afc60020 	sw	a2,32(s8)
	return msyscall(SYS_mem_alloc, envid, va, perm);
  4013cc:	8fc70020 	lw	a3,32(s8)
  4013d0:	8fc6001c 	lw	a2,28(s8)
  4013d4:	8fc50018 	lw	a1,24(s8)
  4013d8:	24040006 	li	a0,6
  4013dc:	0c1000b8 	jal	4002e0 <msyscall>
  4013e0:	00000000 	nop
}
  4013e4:	03c0e825 	move	sp,s8
  4013e8:	8fbf0014 	lw	ra,20(sp)
  4013ec:	8fbe0010 	lw	s8,16(sp)
  4013f0:	27bd0018 	addiu	sp,sp,24
  4013f4:	03e00008 	jr	ra
  4013f8:	00000000 	nop

004013fc <syscall_mem_map>:

int syscall_mem_map(u_int srcid, void *srcva, u_int dstid, void *dstva, u_int perm) {
  4013fc:	27bdffe0 	addiu	sp,sp,-32
  401400:	afbf001c 	sw	ra,28(sp)
  401404:	afbe0018 	sw	s8,24(sp)
  401408:	03a0f025 	move	s8,sp
  40140c:	afc40020 	sw	a0,32(s8)
  401410:	afc50024 	sw	a1,36(s8)
  401414:	afc60028 	sw	a2,40(s8)
  401418:	afc7002c 	sw	a3,44(s8)
	return msyscall(SYS_mem_map, srcid, srcva, dstid, dstva, perm);
  40141c:	8fc20030 	lw	v0,48(s8)
  401420:	afa20014 	sw	v0,20(sp)
  401424:	8fc2002c 	lw	v0,44(s8)
  401428:	afa20010 	sw	v0,16(sp)
  40142c:	8fc70028 	lw	a3,40(s8)
  401430:	8fc60024 	lw	a2,36(s8)
  401434:	8fc50020 	lw	a1,32(s8)
  401438:	24040007 	li	a0,7
  40143c:	0c1000b8 	jal	4002e0 <msyscall>
  401440:	00000000 	nop
}
  401444:	03c0e825 	move	sp,s8
  401448:	8fbf001c 	lw	ra,28(sp)
  40144c:	8fbe0018 	lw	s8,24(sp)
  401450:	27bd0020 	addiu	sp,sp,32
  401454:	03e00008 	jr	ra
  401458:	00000000 	nop

0040145c <syscall_mem_unmap>:

int syscall_mem_unmap(u_int envid, void *va) {
  40145c:	27bdffe8 	addiu	sp,sp,-24
  401460:	afbf0014 	sw	ra,20(sp)
  401464:	afbe0010 	sw	s8,16(sp)
  401468:	03a0f025 	move	s8,sp
  40146c:	afc40018 	sw	a0,24(s8)
  401470:	afc5001c 	sw	a1,28(s8)
	return msyscall(SYS_mem_unmap, envid, va);
  401474:	8fc6001c 	lw	a2,28(s8)
  401478:	8fc50018 	lw	a1,24(s8)
  40147c:	24040008 	li	a0,8
  401480:	0c1000b8 	jal	4002e0 <msyscall>
  401484:	00000000 	nop
}
  401488:	03c0e825 	move	sp,s8
  40148c:	8fbf0014 	lw	ra,20(sp)
  401490:	8fbe0010 	lw	s8,16(sp)
  401494:	27bd0018 	addiu	sp,sp,24
  401498:	03e00008 	jr	ra
  40149c:	00000000 	nop

004014a0 <syscall_set_env_status>:

int syscall_set_env_status(u_int envid, u_int status) {
  4014a0:	27bdffe8 	addiu	sp,sp,-24
  4014a4:	afbf0014 	sw	ra,20(sp)
  4014a8:	afbe0010 	sw	s8,16(sp)
  4014ac:	03a0f025 	move	s8,sp
  4014b0:	afc40018 	sw	a0,24(s8)
  4014b4:	afc5001c 	sw	a1,28(s8)
	return msyscall(SYS_set_env_status, envid, status);
  4014b8:	8fc6001c 	lw	a2,28(s8)
  4014bc:	8fc50018 	lw	a1,24(s8)
  4014c0:	2404000a 	li	a0,10
  4014c4:	0c1000b8 	jal	4002e0 <msyscall>
  4014c8:	00000000 	nop
}
  4014cc:	03c0e825 	move	sp,s8
  4014d0:	8fbf0014 	lw	ra,20(sp)
  4014d4:	8fbe0010 	lw	s8,16(sp)
  4014d8:	27bd0018 	addiu	sp,sp,24
  4014dc:	03e00008 	jr	ra
  4014e0:	00000000 	nop

004014e4 <syscall_set_trapframe>:

int syscall_set_trapframe(u_int envid, struct Trapframe *tf) {
  4014e4:	27bdffe8 	addiu	sp,sp,-24
  4014e8:	afbf0014 	sw	ra,20(sp)
  4014ec:	afbe0010 	sw	s8,16(sp)
  4014f0:	03a0f025 	move	s8,sp
  4014f4:	afc40018 	sw	a0,24(s8)
  4014f8:	afc5001c 	sw	a1,28(s8)
	return msyscall(SYS_set_trapframe, envid, tf);
  4014fc:	8fc6001c 	lw	a2,28(s8)
  401500:	8fc50018 	lw	a1,24(s8)
  401504:	2404000b 	li	a0,11
  401508:	0c1000b8 	jal	4002e0 <msyscall>
  40150c:	00000000 	nop
}
  401510:	03c0e825 	move	sp,s8
  401514:	8fbf0014 	lw	ra,20(sp)
  401518:	8fbe0010 	lw	s8,16(sp)
  40151c:	27bd0018 	addiu	sp,sp,24
  401520:	03e00008 	jr	ra
  401524:	00000000 	nop

00401528 <syscall_panic>:

void syscall_panic(const char *msg) {
  401528:	27bdffe0 	addiu	sp,sp,-32
  40152c:	afbf001c 	sw	ra,28(sp)
  401530:	afbe0018 	sw	s8,24(sp)
  401534:	03a0f025 	move	s8,sp
  401538:	afc40020 	sw	a0,32(s8)
	int r = msyscall(SYS_panic, msg);
  40153c:	8fc50020 	lw	a1,32(s8)
  401540:	2404000c 	li	a0,12
  401544:	0c1000b8 	jal	4002e0 <msyscall>
  401548:	00000000 	nop
  40154c:	afc20010 	sw	v0,16(s8)
	user_panic("SYS_panic returned %d", r);
  401550:	8fc70010 	lw	a3,16(s8)
  401554:	3c020040 	lui	v0,0x40
  401558:	24465fb0 	addiu	a2,v0,24496
  40155c:	24050035 	li	a1,53
  401560:	3c020040 	lui	v0,0x40
  401564:	24445fc8 	addiu	a0,v0,24520
  401568:	0c100157 	jal	40055c <_user_panic>
  40156c:	00000000 	nop

00401570 <syscall_ipc_try_send>:
}

int syscall_ipc_try_send(u_int envid, u_int value, const void *srcva, u_int perm) {
  401570:	27bdffe0 	addiu	sp,sp,-32
  401574:	afbf001c 	sw	ra,28(sp)
  401578:	afbe0018 	sw	s8,24(sp)
  40157c:	03a0f025 	move	s8,sp
  401580:	afc40020 	sw	a0,32(s8)
  401584:	afc50024 	sw	a1,36(s8)
  401588:	afc60028 	sw	a2,40(s8)
  40158c:	afc7002c 	sw	a3,44(s8)
	return msyscall(SYS_ipc_try_send, envid, value, srcva, perm);
  401590:	8fc2002c 	lw	v0,44(s8)
  401594:	afa20010 	sw	v0,16(sp)
  401598:	8fc70028 	lw	a3,40(s8)
  40159c:	8fc60024 	lw	a2,36(s8)
  4015a0:	8fc50020 	lw	a1,32(s8)
  4015a4:	2404000d 	li	a0,13
  4015a8:	0c1000b8 	jal	4002e0 <msyscall>
  4015ac:	00000000 	nop
}
  4015b0:	03c0e825 	move	sp,s8
  4015b4:	8fbf001c 	lw	ra,28(sp)
  4015b8:	8fbe0018 	lw	s8,24(sp)
  4015bc:	27bd0020 	addiu	sp,sp,32
  4015c0:	03e00008 	jr	ra
  4015c4:	00000000 	nop

004015c8 <syscall_ipc_recv>:

int syscall_ipc_recv(void *dstva) {
  4015c8:	27bdffe8 	addiu	sp,sp,-24
  4015cc:	afbf0014 	sw	ra,20(sp)
  4015d0:	afbe0010 	sw	s8,16(sp)
  4015d4:	03a0f025 	move	s8,sp
  4015d8:	afc40018 	sw	a0,24(s8)
	return msyscall(SYS_ipc_recv, dstva);
  4015dc:	8fc50018 	lw	a1,24(s8)
  4015e0:	2404000e 	li	a0,14
  4015e4:	0c1000b8 	jal	4002e0 <msyscall>
  4015e8:	00000000 	nop
}
  4015ec:	03c0e825 	move	sp,s8
  4015f0:	8fbf0014 	lw	ra,20(sp)
  4015f4:	8fbe0010 	lw	s8,16(sp)
  4015f8:	27bd0018 	addiu	sp,sp,24
  4015fc:	03e00008 	jr	ra
  401600:	00000000 	nop

00401604 <syscall_cgetc>:

int syscall_cgetc() {
  401604:	27bdffe8 	addiu	sp,sp,-24
  401608:	afbf0014 	sw	ra,20(sp)
  40160c:	afbe0010 	sw	s8,16(sp)
  401610:	03a0f025 	move	s8,sp
	return msyscall(SYS_cgetc);
  401614:	2404000f 	li	a0,15
  401618:	0c1000b8 	jal	4002e0 <msyscall>
  40161c:	00000000 	nop
}
  401620:	03c0e825 	move	sp,s8
  401624:	8fbf0014 	lw	ra,20(sp)
  401628:	8fbe0010 	lw	s8,16(sp)
  40162c:	27bd0018 	addiu	sp,sp,24
  401630:	03e00008 	jr	ra
  401634:	00000000 	nop

00401638 <syscall_write_dev>:

int syscall_write_dev(void *va, u_int dev, u_int size) {
  401638:	27bdffe8 	addiu	sp,sp,-24
  40163c:	afbf0014 	sw	ra,20(sp)
  401640:	afbe0010 	sw	s8,16(sp)
  401644:	03a0f025 	move	s8,sp
  401648:	afc40018 	sw	a0,24(s8)
  40164c:	afc5001c 	sw	a1,28(s8)
  401650:	afc60020 	sw	a2,32(s8)
	/* Exercise 5.2: Your code here. (1/2) */
	return msyscall(SYS_write_dev, va, dev, size);
  401654:	8fc70020 	lw	a3,32(s8)
  401658:	8fc6001c 	lw	a2,28(s8)
  40165c:	8fc50018 	lw	a1,24(s8)
  401660:	24040010 	li	a0,16
  401664:	0c1000b8 	jal	4002e0 <msyscall>
  401668:	00000000 	nop
}
  40166c:	03c0e825 	move	sp,s8
  401670:	8fbf0014 	lw	ra,20(sp)
  401674:	8fbe0010 	lw	s8,16(sp)
  401678:	27bd0018 	addiu	sp,sp,24
  40167c:	03e00008 	jr	ra
  401680:	00000000 	nop

00401684 <syscall_read_dev>:

int syscall_read_dev(void *va, u_int dev, u_int size) {
  401684:	27bdffe8 	addiu	sp,sp,-24
  401688:	afbf0014 	sw	ra,20(sp)
  40168c:	afbe0010 	sw	s8,16(sp)
  401690:	03a0f025 	move	s8,sp
  401694:	afc40018 	sw	a0,24(s8)
  401698:	afc5001c 	sw	a1,28(s8)
  40169c:	afc60020 	sw	a2,32(s8)
	/* Exercise 5.2: Your code here. (2/2) */
	return msyscall(SYS_read_dev, va, dev, size);
  4016a0:	8fc70020 	lw	a3,32(s8)
  4016a4:	8fc6001c 	lw	a2,28(s8)
  4016a8:	8fc50018 	lw	a1,24(s8)
  4016ac:	24040011 	li	a0,17
  4016b0:	0c1000b8 	jal	4002e0 <msyscall>
  4016b4:	00000000 	nop
}
  4016b8:	03c0e825 	move	sp,s8
  4016bc:	8fbf0014 	lw	ra,20(sp)
  4016c0:	8fbe0010 	lw	s8,16(sp)
  4016c4:	27bd0018 	addiu	sp,sp,24
  4016c8:	03e00008 	jr	ra
  4016cc:	00000000 	nop

004016d0 <syscall_sigprocmask>:

int syscall_sigprocmask(int __how, const sigset_t * __set, sigset_t * __oset) {
  4016d0:	27bdffe8 	addiu	sp,sp,-24
  4016d4:	afbf0014 	sw	ra,20(sp)
  4016d8:	afbe0010 	sw	s8,16(sp)
  4016dc:	03a0f025 	move	s8,sp
  4016e0:	afc40018 	sw	a0,24(s8)
  4016e4:	afc5001c 	sw	a1,28(s8)
  4016e8:	afc60020 	sw	a2,32(s8)
	return msyscall(SYS_sigprocmask, __how, __set, __oset);
  4016ec:	8fc70020 	lw	a3,32(s8)
  4016f0:	8fc6001c 	lw	a2,28(s8)
  4016f4:	8fc50018 	lw	a1,24(s8)
  4016f8:	24040012 	li	a0,18
  4016fc:	0c1000b8 	jal	4002e0 <msyscall>
  401700:	00000000 	nop
}
  401704:	03c0e825 	move	sp,s8
  401708:	8fbf0014 	lw	ra,20(sp)
  40170c:	8fbe0010 	lw	s8,16(sp)
  401710:	27bd0018 	addiu	sp,sp,24
  401714:	03e00008 	jr	ra
  401718:	00000000 	nop

0040171c <syscall_sigaction>:

int syscall_sigaction(int signum, const struct sigaction *newact, struct sigaction *oldact){
  40171c:	27bdffe8 	addiu	sp,sp,-24
  401720:	afbf0014 	sw	ra,20(sp)
  401724:	afbe0010 	sw	s8,16(sp)
  401728:	03a0f025 	move	s8,sp
  40172c:	afc40018 	sw	a0,24(s8)
  401730:	afc5001c 	sw	a1,28(s8)
  401734:	afc60020 	sw	a2,32(s8)
	return msyscall(SYS_sigaction, signum, newact, oldact);
  401738:	8fc70020 	lw	a3,32(s8)
  40173c:	8fc6001c 	lw	a2,28(s8)
  401740:	8fc50018 	lw	a1,24(s8)
  401744:	24040013 	li	a0,19
  401748:	0c1000b8 	jal	4002e0 <msyscall>
  40174c:	00000000 	nop
}
  401750:	03c0e825 	move	sp,s8
  401754:	8fbf0014 	lw	ra,20(sp)
  401758:	8fbe0010 	lw	s8,16(sp)
  40175c:	27bd0018 	addiu	sp,sp,24
  401760:	03e00008 	jr	ra
  401764:	00000000 	nop

00401768 <syscall_kill>:

int syscall_kill(u_int envid, int sig){
  401768:	27bdffe8 	addiu	sp,sp,-24
  40176c:	afbf0014 	sw	ra,20(sp)
  401770:	afbe0010 	sw	s8,16(sp)
  401774:	03a0f025 	move	s8,sp
  401778:	afc40018 	sw	a0,24(s8)
  40177c:	afc5001c 	sw	a1,28(s8)
	return msyscall(SYS_kill, envid, sig);
  401780:	8fc6001c 	lw	a2,28(s8)
  401784:	8fc50018 	lw	a1,24(s8)
  401788:	24040016 	li	a0,22
  40178c:	0c1000b8 	jal	4002e0 <msyscall>
  401790:	00000000 	nop
}
  401794:	03c0e825 	move	sp,s8
  401798:	8fbf0014 	lw	ra,20(sp)
  40179c:	8fbe0010 	lw	s8,16(sp)
  4017a0:	27bd0018 	addiu	sp,sp,24
  4017a4:	03e00008 	jr	ra
  4017a8:	00000000 	nop

004017ac <syscall_set_sig_entry>:

int syscall_set_sig_entry(u_int envid, void (*func)(u_int, u_int, void (*handler)(int), struct Trapframe *)) {
  4017ac:	27bdffe8 	addiu	sp,sp,-24
  4017b0:	afbf0014 	sw	ra,20(sp)
  4017b4:	afbe0010 	sw	s8,16(sp)
  4017b8:	03a0f025 	move	s8,sp
  4017bc:	afc40018 	sw	a0,24(s8)
  4017c0:	afc5001c 	sw	a1,28(s8)
	return msyscall(SYS_set_sig_entry, envid, func);
  4017c4:	8fc6001c 	lw	a2,28(s8)
  4017c8:	8fc50018 	lw	a1,24(s8)
  4017cc:	24040014 	li	a0,20
  4017d0:	0c1000b8 	jal	4002e0 <msyscall>
  4017d4:	00000000 	nop
}
  4017d8:	03c0e825 	move	sp,s8
  4017dc:	8fbf0014 	lw	ra,20(sp)
  4017e0:	8fbe0010 	lw	s8,16(sp)
  4017e4:	27bd0018 	addiu	sp,sp,24
  4017e8:	03e00008 	jr	ra
  4017ec:	00000000 	nop

004017f0 <syscall_set_sig_flag>:

int syscall_set_sig_flag(u_int envid, u_int flag) {
  4017f0:	27bdffe8 	addiu	sp,sp,-24
  4017f4:	afbf0014 	sw	ra,20(sp)
  4017f8:	afbe0010 	sw	s8,16(sp)
  4017fc:	03a0f025 	move	s8,sp
  401800:	afc40018 	sw	a0,24(s8)
  401804:	afc5001c 	sw	a1,28(s8)
	return msyscall(SYS_set_sig_flag, envid, flag);
  401808:	8fc6001c 	lw	a2,28(s8)
  40180c:	8fc50018 	lw	a1,24(s8)
  401810:	24040015 	li	a0,21
  401814:	0c1000b8 	jal	4002e0 <msyscall>
  401818:	00000000 	nop
  40181c:	03c0e825 	move	sp,s8
  401820:	8fbf0014 	lw	ra,20(sp)
  401824:	8fbe0010 	lw	s8,16(sp)
  401828:	27bd0018 	addiu	sp,sp,24
  40182c:	03e00008 	jr	ra
  401830:	00000000 	nop
	...

00401840 <ipc_send>:
// Send val to whom.  This function keeps trying until
// it succeeds.  It should panic() on any error other than
// -E_IPC_NOT_RECV.
//
// Hint: use syscall_yield() to be CPU-friendly.
void ipc_send(u_int whom, u_int val, const void *srcva, u_int perm) {
  401840:	27bdffe0 	addiu	sp,sp,-32
  401844:	afbf001c 	sw	ra,28(sp)
  401848:	afbe0018 	sw	s8,24(sp)
  40184c:	03a0f025 	move	s8,sp
  401850:	afc40020 	sw	a0,32(s8)
  401854:	afc50024 	sw	a1,36(s8)
  401858:	afc60028 	sw	a2,40(s8)
  40185c:	afc7002c 	sw	a3,44(s8)
	int r;
	while ((r = syscall_ipc_try_send(whom, val, srcva, perm)) == -E_IPC_NOT_RECV) {
  401860:	10000003 	b	401870 <ipc_send+0x30>
  401864:	00000000 	nop
		syscall_yield();
  401868:	0c1004be 	jal	4012f8 <syscall_yield>
  40186c:	00000000 	nop
	while ((r = syscall_ipc_try_send(whom, val, srcva, perm)) == -E_IPC_NOT_RECV) {
  401870:	8fc7002c 	lw	a3,44(s8)
  401874:	8fc60028 	lw	a2,40(s8)
  401878:	8fc50024 	lw	a1,36(s8)
  40187c:	8fc40020 	lw	a0,32(s8)
  401880:	0c10055c 	jal	401570 <syscall_ipc_try_send>
  401884:	00000000 	nop
  401888:	afc20010 	sw	v0,16(s8)
  40188c:	8fc30010 	lw	v1,16(s8)
  401890:	2402fff9 	li	v0,-7
  401894:	1062fff4 	beq	v1,v0,401868 <ipc_send+0x28>
  401898:	00000000 	nop
	}
	user_assert(r == 0);
  40189c:	8fc20010 	lw	v0,16(s8)
  4018a0:	1040000a 	beqz	v0,4018cc <ipc_send+0x8c>
  4018a4:	00000000 	nop
  4018a8:	3c020040 	lui	v0,0x40
  4018ac:	24475fe0 	addiu	a3,v0,24544
  4018b0:	3c020040 	lui	v0,0x40
  4018b4:	24465fe8 	addiu	a2,v0,24552
  4018b8:	24050011 	li	a1,17
  4018bc:	3c020040 	lui	v0,0x40
  4018c0:	24446000 	addiu	a0,v0,24576
  4018c4:	0c100157 	jal	40055c <_user_panic>
  4018c8:	00000000 	nop
}
  4018cc:	00000000 	nop
  4018d0:	03c0e825 	move	sp,s8
  4018d4:	8fbf001c 	lw	ra,28(sp)
  4018d8:	8fbe0018 	lw	s8,24(sp)
  4018dc:	27bd0020 	addiu	sp,sp,32
  4018e0:	03e00008 	jr	ra
  4018e4:	00000000 	nop

004018e8 <ipc_recv>:

// Receive a value.  Return the value and store the caller's envid
// in *whom.
//
// Hint: use env to discover the value and who sent it.
u_int ipc_recv(u_int *whom, void *dstva, u_int *perm) {
  4018e8:	27bdffe0 	addiu	sp,sp,-32
  4018ec:	afbf001c 	sw	ra,28(sp)
  4018f0:	afbe0018 	sw	s8,24(sp)
  4018f4:	03a0f025 	move	s8,sp
  4018f8:	afc40020 	sw	a0,32(s8)
  4018fc:	afc50024 	sw	a1,36(s8)
  401900:	afc60028 	sw	a2,40(s8)
	int r = syscall_ipc_recv(dstva);
  401904:	8fc40024 	lw	a0,36(s8)
  401908:	0c100572 	jal	4015c8 <syscall_ipc_recv>
  40190c:	00000000 	nop
  401910:	afc20010 	sw	v0,16(s8)
	if (r != 0) {
  401914:	8fc20010 	lw	v0,16(s8)
  401918:	10400009 	beqz	v0,401940 <ipc_recv+0x58>
  40191c:	00000000 	nop
		user_panic("syscall_ipc_recv err: %d", r);
  401920:	8fc70010 	lw	a3,16(s8)
  401924:	3c020040 	lui	v0,0x40
  401928:	2446600c 	addiu	a2,v0,24588
  40192c:	2405001b 	li	a1,27
  401930:	3c020040 	lui	v0,0x40
  401934:	24446000 	addiu	a0,v0,24576
  401938:	0c100157 	jal	40055c <_user_panic>
  40193c:	00000000 	nop
	}

	if (whom) {
  401940:	8fc20020 	lw	v0,32(s8)
  401944:	10400006 	beqz	v0,401960 <ipc_recv+0x78>
  401948:	00000000 	nop
		*whom = env->env_ipc_from;
  40194c:	3c020041 	lui	v0,0x41
  401950:	8c428010 	lw	v0,-32752(v0)
  401954:	8c4300c4 	lw	v1,196(v0)
  401958:	8fc20020 	lw	v0,32(s8)
  40195c:	ac430000 	sw	v1,0(v0)
	}

	if (perm) {
  401960:	8fc20028 	lw	v0,40(s8)
  401964:	10400006 	beqz	v0,401980 <ipc_recv+0x98>
  401968:	00000000 	nop
		*perm = env->env_ipc_perm;
  40196c:	3c020041 	lui	v0,0x41
  401970:	8c428010 	lw	v0,-32752(v0)
  401974:	8c4300d0 	lw	v1,208(v0)
  401978:	8fc20028 	lw	v0,40(s8)
  40197c:	ac430000 	sw	v1,0(v0)
	}

	return env->env_ipc_value;
  401980:	3c020041 	lui	v0,0x41
  401984:	8c428010 	lw	v0,-32752(v0)
  401988:	8c4200c0 	lw	v0,192(v0)
}
  40198c:	03c0e825 	move	sp,s8
  401990:	8fbf001c 	lw	ra,28(sp)
  401994:	8fbe0018 	lw	s8,24(sp)
  401998:	27bd0020 	addiu	sp,sp,32
  40199c:	03e00008 	jr	ra
  4019a0:	00000000 	nop
	...

004019b0 <dev_lookup>:
#if !defined(LAB) || LAB >= 6
			       &devpipe,
#endif
			       0};

int dev_lookup(int dev_id, struct Dev **dev) {
  4019b0:	27bdffe0 	addiu	sp,sp,-32
  4019b4:	afbf001c 	sw	ra,28(sp)
  4019b8:	afbe0018 	sw	s8,24(sp)
  4019bc:	03a0f025 	move	s8,sp
  4019c0:	afc40020 	sw	a0,32(s8)
  4019c4:	afc50024 	sw	a1,36(s8)
	for (int i = 0; devtab[i]; i++) {
  4019c8:	afc00010 	sw	zero,16(s8)
  4019cc:	10000019 	b	401a34 <dev_lookup+0x84>
  4019d0:	00000000 	nop
		if (devtab[i]->dev_id == dev_id) {
  4019d4:	3c020040 	lui	v0,0x40
  4019d8:	8fc30010 	lw	v1,16(s8)
  4019dc:	00031880 	sll	v1,v1,0x2
  4019e0:	24427000 	addiu	v0,v0,28672
  4019e4:	00621021 	addu	v0,v1,v0
  4019e8:	8c420000 	lw	v0,0(v0)
  4019ec:	8c420000 	lw	v0,0(v0)
  4019f0:	8fc30020 	lw	v1,32(s8)
  4019f4:	1462000c 	bne	v1,v0,401a28 <dev_lookup+0x78>
  4019f8:	00000000 	nop
			*dev = devtab[i];
  4019fc:	3c020040 	lui	v0,0x40
  401a00:	8fc30010 	lw	v1,16(s8)
  401a04:	00031880 	sll	v1,v1,0x2
  401a08:	24427000 	addiu	v0,v0,28672
  401a0c:	00621021 	addu	v0,v1,v0
  401a10:	8c430000 	lw	v1,0(v0)
  401a14:	8fc20024 	lw	v0,36(s8)
  401a18:	ac430000 	sw	v1,0(v0)
			return 0;
  401a1c:	00001025 	move	v0,zero
  401a20:	10000018 	b	401a84 <dev_lookup+0xd4>
  401a24:	00000000 	nop
	for (int i = 0; devtab[i]; i++) {
  401a28:	8fc20010 	lw	v0,16(s8)
  401a2c:	24420001 	addiu	v0,v0,1
  401a30:	afc20010 	sw	v0,16(s8)
  401a34:	3c020040 	lui	v0,0x40
  401a38:	8fc30010 	lw	v1,16(s8)
  401a3c:	00031880 	sll	v1,v1,0x2
  401a40:	24427000 	addiu	v0,v0,28672
  401a44:	00621021 	addu	v0,v1,v0
  401a48:	8c420000 	lw	v0,0(v0)
  401a4c:	1440ffe1 	bnez	v0,4019d4 <dev_lookup+0x24>
  401a50:	00000000 	nop
		}
	}
	*dev = NULL;
  401a54:	8fc20024 	lw	v0,36(s8)
  401a58:	ac400000 	sw	zero,0(v0)
	debugf("[%08x] unknown device type %d\n", env->env_id, dev_id);
  401a5c:	3c020041 	lui	v0,0x41
  401a60:	8c428010 	lw	v0,-32752(v0)
  401a64:	8c4200a0 	lw	v0,160(v0)
  401a68:	8fc60020 	lw	a2,32(s8)
  401a6c:	00402825 	move	a1,v0
  401a70:	3c020040 	lui	v0,0x40
  401a74:	24446030 	addiu	a0,v0,24624
  401a78:	0c100141 	jal	400504 <debugf>
  401a7c:	00000000 	nop
	return -E_INVAL;
  401a80:	2402fffd 	li	v0,-3
}
  401a84:	03c0e825 	move	sp,s8
  401a88:	8fbf001c 	lw	ra,28(sp)
  401a8c:	8fbe0018 	lw	s8,24(sp)
  401a90:	27bd0020 	addiu	sp,sp,32
  401a94:	03e00008 	jr	ra
  401a98:	00000000 	nop

00401a9c <fd_alloc>:
//   (Do not allocate any pages: It is up to the caller to allocate
//    the page, meaning that if someone calls fd_alloc twice
//    in a row without allocating the first page we returned, we'll
//    return the same page at the second time.)
//   Return 0 on success, or an error code on error.
int fd_alloc(struct Fd **fd) {
  401a9c:	27bdfff0 	addiu	sp,sp,-16
  401aa0:	afbe000c 	sw	s8,12(sp)
  401aa4:	03a0f025 	move	s8,sp
  401aa8:	afc40010 	sw	a0,16(s8)
	u_int va;
	u_int fdno;

	for (fdno = 0; fdno < MAXFD - 1; fdno++) {
  401aac:	afc00000 	sw	zero,0(s8)
  401ab0:	10000029 	b	401b58 <fd_alloc+0xbc>
  401ab4:	00000000 	nop
		va = INDEX2FD(fdno);
  401ab8:	8fc30000 	lw	v1,0(s8)
  401abc:	3c020005 	lui	v0,0x5
  401ac0:	3442fc00 	ori	v0,v0,0xfc00
  401ac4:	00621021 	addu	v0,v1,v0
  401ac8:	00021300 	sll	v0,v0,0xc
  401acc:	afc20004 	sw	v0,4(s8)

		if ((vpd[va / PDMAP] & PTE_V) == 0) {
  401ad0:	8fc20004 	lw	v0,4(s8)
  401ad4:	00021582 	srl	v0,v0,0x16
  401ad8:	00021880 	sll	v1,v0,0x2
  401adc:	3c027fdf 	lui	v0,0x7fdf
  401ae0:	3442f000 	ori	v0,v0,0xf000
  401ae4:	00621021 	addu	v0,v1,v0
  401ae8:	8c420000 	lw	v0,0(v0)
  401aec:	30420080 	andi	v0,v0,0x80
  401af0:	14400007 	bnez	v0,401b10 <fd_alloc+0x74>
  401af4:	00000000 	nop
			*fd = (struct Fd *)va;
  401af8:	8fc30004 	lw	v1,4(s8)
  401afc:	8fc20010 	lw	v0,16(s8)
  401b00:	ac430000 	sw	v1,0(v0)
			return 0;
  401b04:	00001025 	move	v0,zero
  401b08:	10000018 	b	401b6c <fd_alloc+0xd0>
  401b0c:	00000000 	nop
		}

		if ((vpt[va / PTMAP] & PTE_V) == 0) { // the fd is not used
  401b10:	8fc20004 	lw	v0,4(s8)
  401b14:	00021302 	srl	v0,v0,0xc
  401b18:	00021880 	sll	v1,v0,0x2
  401b1c:	3c027fc0 	lui	v0,0x7fc0
  401b20:	00621021 	addu	v0,v1,v0
  401b24:	8c420000 	lw	v0,0(v0)
  401b28:	30420080 	andi	v0,v0,0x80
  401b2c:	14400007 	bnez	v0,401b4c <fd_alloc+0xb0>
  401b30:	00000000 	nop
			*fd = (struct Fd *)va;
  401b34:	8fc30004 	lw	v1,4(s8)
  401b38:	8fc20010 	lw	v0,16(s8)
  401b3c:	ac430000 	sw	v1,0(v0)
			return 0;
  401b40:	00001025 	move	v0,zero
  401b44:	10000009 	b	401b6c <fd_alloc+0xd0>
  401b48:	00000000 	nop
	for (fdno = 0; fdno < MAXFD - 1; fdno++) {
  401b4c:	8fc20000 	lw	v0,0(s8)
  401b50:	24420001 	addiu	v0,v0,1
  401b54:	afc20000 	sw	v0,0(s8)
  401b58:	8fc20000 	lw	v0,0(s8)
  401b5c:	2c42001f 	sltiu	v0,v0,31
  401b60:	1440ffd5 	bnez	v0,401ab8 <fd_alloc+0x1c>
  401b64:	00000000 	nop
		}
	}

	return -E_MAX_OPEN;
  401b68:	2402fff7 	li	v0,-9
}
  401b6c:	03c0e825 	move	sp,s8
  401b70:	8fbe000c 	lw	s8,12(sp)
  401b74:	27bd0010 	addiu	sp,sp,16
  401b78:	03e00008 	jr	ra
  401b7c:	00000000 	nop

00401b80 <fd_close>:

void fd_close(struct Fd *fd) {
  401b80:	27bdffe0 	addiu	sp,sp,-32
  401b84:	afbf001c 	sw	ra,28(sp)
  401b88:	afbe0018 	sw	s8,24(sp)
  401b8c:	03a0f025 	move	s8,sp
  401b90:	afc40020 	sw	a0,32(s8)
	panic_on(syscall_mem_unmap(0, fd));
  401b94:	8fc50020 	lw	a1,32(s8)
  401b98:	00002025 	move	a0,zero
  401b9c:	0c100517 	jal	40145c <syscall_mem_unmap>
  401ba0:	00000000 	nop
  401ba4:	afc20010 	sw	v0,16(s8)
  401ba8:	8fc20010 	lw	v0,16(s8)
  401bac:	10400009 	beqz	v0,401bd4 <fd_close+0x54>
  401bb0:	00000000 	nop
  401bb4:	8fc70010 	lw	a3,16(s8)
  401bb8:	3c020040 	lui	v0,0x40
  401bbc:	24466050 	addiu	a2,v0,24656
  401bc0:	24050038 	li	a1,56
  401bc4:	3c020040 	lui	v0,0x40
  401bc8:	24446078 	addiu	a0,v0,24696
  401bcc:	0c100157 	jal	40055c <_user_panic>
  401bd0:	00000000 	nop
}
  401bd4:	00000000 	nop
  401bd8:	03c0e825 	move	sp,s8
  401bdc:	8fbf001c 	lw	ra,28(sp)
  401be0:	8fbe0018 	lw	s8,24(sp)
  401be4:	27bd0020 	addiu	sp,sp,32
  401be8:	03e00008 	jr	ra
  401bec:	00000000 	nop

00401bf0 <fd_lookup>:
//  Find the 'Fd' page for the given fd number.
//
// Post-Condition:
//  Return 0 and set *fd to the pointer to the 'Fd' page on success.
//  Return -E_INVAL if 'fdnum' is invalid or unmapped.
int fd_lookup(int fdnum, struct Fd **fd) {
  401bf0:	27bdfff0 	addiu	sp,sp,-16
  401bf4:	afbe000c 	sw	s8,12(sp)
  401bf8:	03a0f025 	move	s8,sp
  401bfc:	afc40010 	sw	a0,16(s8)
  401c00:	afc50014 	sw	a1,20(s8)
	u_int va;

	if (fdnum >= MAXFD) {
  401c04:	8fc20010 	lw	v0,16(s8)
  401c08:	28420020 	slti	v0,v0,32
  401c0c:	14400004 	bnez	v0,401c20 <fd_lookup+0x30>
  401c10:	00000000 	nop
		return -E_INVAL;
  401c14:	2402fffd 	li	v0,-3
  401c18:	10000017 	b	401c78 <fd_lookup+0x88>
  401c1c:	00000000 	nop
	}

	va = INDEX2FD(fdnum);
  401c20:	8fc30010 	lw	v1,16(s8)
  401c24:	3c020005 	lui	v0,0x5
  401c28:	3442fc00 	ori	v0,v0,0xfc00
  401c2c:	00621021 	addu	v0,v1,v0
  401c30:	00021300 	sll	v0,v0,0xc
  401c34:	afc20000 	sw	v0,0(s8)

	if ((vpt[va / PTMAP] & PTE_V) != 0) { // the fd is used
  401c38:	8fc20000 	lw	v0,0(s8)
  401c3c:	00021302 	srl	v0,v0,0xc
  401c40:	00021880 	sll	v1,v0,0x2
  401c44:	3c027fc0 	lui	v0,0x7fc0
  401c48:	00621021 	addu	v0,v1,v0
  401c4c:	8c420000 	lw	v0,0(v0)
  401c50:	30420080 	andi	v0,v0,0x80
  401c54:	10400007 	beqz	v0,401c74 <fd_lookup+0x84>
  401c58:	00000000 	nop
		*fd = (struct Fd *)va;
  401c5c:	8fc30000 	lw	v1,0(s8)
  401c60:	8fc20014 	lw	v0,20(s8)
  401c64:	ac430000 	sw	v1,0(v0)
		return 0;
  401c68:	00001025 	move	v0,zero
  401c6c:	10000002 	b	401c78 <fd_lookup+0x88>
  401c70:	00000000 	nop
	}

	return -E_INVAL;
  401c74:	2402fffd 	li	v0,-3
}
  401c78:	03c0e825 	move	sp,s8
  401c7c:	8fbe000c 	lw	s8,12(sp)
  401c80:	27bd0010 	addiu	sp,sp,16
  401c84:	03e00008 	jr	ra
  401c88:	00000000 	nop

00401c8c <fd2data>:

void *fd2data(struct Fd *fd) {
  401c8c:	27bdffe8 	addiu	sp,sp,-24
  401c90:	afbf0014 	sw	ra,20(sp)
  401c94:	afbe0010 	sw	s8,16(sp)
  401c98:	03a0f025 	move	s8,sp
  401c9c:	afc40018 	sw	a0,24(s8)
	return (void *)INDEX2DATA(fd2num(fd));
  401ca0:	8fc40018 	lw	a0,24(s8)
  401ca4:	0c100733 	jal	401ccc <fd2num>
  401ca8:	00000000 	nop
  401cac:	24420180 	addiu	v0,v0,384
  401cb0:	00021580 	sll	v0,v0,0x16
}
  401cb4:	03c0e825 	move	sp,s8
  401cb8:	8fbf0014 	lw	ra,20(sp)
  401cbc:	8fbe0010 	lw	s8,16(sp)
  401cc0:	27bd0018 	addiu	sp,sp,24
  401cc4:	03e00008 	jr	ra
  401cc8:	00000000 	nop

00401ccc <fd2num>:

int fd2num(struct Fd *fd) {
  401ccc:	27bdfff8 	addiu	sp,sp,-8
  401cd0:	afbe0004 	sw	s8,4(sp)
  401cd4:	03a0f025 	move	s8,sp
  401cd8:	afc40008 	sw	a0,8(s8)
	return ((u_int)fd - FDTABLE) / PTMAP;
  401cdc:	8fc30008 	lw	v1,8(s8)
  401ce0:	3c02a040 	lui	v0,0xa040
  401ce4:	00621021 	addu	v0,v1,v0
  401ce8:	00021302 	srl	v0,v0,0xc
}
  401cec:	03c0e825 	move	sp,s8
  401cf0:	8fbe0004 	lw	s8,4(sp)
  401cf4:	27bd0008 	addiu	sp,sp,8
  401cf8:	03e00008 	jr	ra
  401cfc:	00000000 	nop

00401d00 <num2fd>:

int num2fd(int fd) {
  401d00:	27bdfff8 	addiu	sp,sp,-8
  401d04:	afbe0004 	sw	s8,4(sp)
  401d08:	03a0f025 	move	s8,sp
  401d0c:	afc40008 	sw	a0,8(s8)
	return fd * PTMAP + FDTABLE;
  401d10:	8fc30008 	lw	v1,8(s8)
  401d14:	3c020005 	lui	v0,0x5
  401d18:	3442fc00 	ori	v0,v0,0xfc00
  401d1c:	00621021 	addu	v0,v1,v0
  401d20:	00021300 	sll	v0,v0,0xc
}
  401d24:	03c0e825 	move	sp,s8
  401d28:	8fbe0004 	lw	s8,4(sp)
  401d2c:	27bd0008 	addiu	sp,sp,8
  401d30:	03e00008 	jr	ra
  401d34:	00000000 	nop

00401d38 <close>:

int close(int fdnum) {
  401d38:	27bdffd8 	addiu	sp,sp,-40
  401d3c:	afbf0024 	sw	ra,36(sp)
  401d40:	afbe0020 	sw	s8,32(sp)
  401d44:	03a0f025 	move	s8,sp
  401d48:	afc40028 	sw	a0,40(s8)
	int r;
	struct Dev *dev = NULL;
  401d4c:	afc00014 	sw	zero,20(s8)
	struct Fd *fd;

	if ((r = fd_lookup(fdnum, &fd)) < 0 || (r = dev_lookup(fd->fd_dev_id, &dev)) < 0) {
  401d50:	27c20018 	addiu	v0,s8,24
  401d54:	00402825 	move	a1,v0
  401d58:	8fc40028 	lw	a0,40(s8)
  401d5c:	0c1006fc 	jal	401bf0 <fd_lookup>
  401d60:	00000000 	nop
  401d64:	afc20010 	sw	v0,16(s8)
  401d68:	8fc20010 	lw	v0,16(s8)
  401d6c:	0440000c 	bltz	v0,401da0 <close+0x68>
  401d70:	00000000 	nop
  401d74:	8fc20018 	lw	v0,24(s8)
  401d78:	8c420000 	lw	v0,0(v0)
  401d7c:	27c30014 	addiu	v1,s8,20
  401d80:	00602825 	move	a1,v1
  401d84:	00402025 	move	a0,v0
  401d88:	0c10066c 	jal	4019b0 <dev_lookup>
  401d8c:	00000000 	nop
  401d90:	afc20010 	sw	v0,16(s8)
  401d94:	8fc20010 	lw	v0,16(s8)
  401d98:	04410004 	bgez	v0,401dac <close+0x74>
  401d9c:	00000000 	nop
		return r;
  401da0:	8fc20010 	lw	v0,16(s8)
  401da4:	1000000d 	b	401ddc <close+0xa4>
  401da8:	00000000 	nop
	}

	r = (*dev->dev_close)(fd);
  401dac:	8fc20014 	lw	v0,20(s8)
  401db0:	8c420010 	lw	v0,16(v0)
  401db4:	8fc30018 	lw	v1,24(s8)
  401db8:	00602025 	move	a0,v1
  401dbc:	0040f809 	jalr	v0
  401dc0:	00000000 	nop
  401dc4:	afc20010 	sw	v0,16(s8)
	fd_close(fd);
  401dc8:	8fc20018 	lw	v0,24(s8)
  401dcc:	00402025 	move	a0,v0
  401dd0:	0c1006e0 	jal	401b80 <fd_close>
  401dd4:	00000000 	nop
	return r;
  401dd8:	8fc20010 	lw	v0,16(s8)
}
  401ddc:	03c0e825 	move	sp,s8
  401de0:	8fbf0024 	lw	ra,36(sp)
  401de4:	8fbe0020 	lw	s8,32(sp)
  401de8:	27bd0028 	addiu	sp,sp,40
  401dec:	03e00008 	jr	ra
  401df0:	00000000 	nop

00401df4 <close_all>:

void close_all(void) {
  401df4:	27bdffe0 	addiu	sp,sp,-32
  401df8:	afbf001c 	sw	ra,28(sp)
  401dfc:	afbe0018 	sw	s8,24(sp)
  401e00:	03a0f025 	move	s8,sp
	int i;

	for (i = 0; i < MAXFD; i++) {
  401e04:	afc00010 	sw	zero,16(s8)
  401e08:	10000007 	b	401e28 <close_all+0x34>
  401e0c:	00000000 	nop
		close(i);
  401e10:	8fc40010 	lw	a0,16(s8)
  401e14:	0c10074e 	jal	401d38 <close>
  401e18:	00000000 	nop
	for (i = 0; i < MAXFD; i++) {
  401e1c:	8fc20010 	lw	v0,16(s8)
  401e20:	24420001 	addiu	v0,v0,1
  401e24:	afc20010 	sw	v0,16(s8)
  401e28:	8fc20010 	lw	v0,16(s8)
  401e2c:	28420020 	slti	v0,v0,32
  401e30:	1440fff7 	bnez	v0,401e10 <close_all+0x1c>
  401e34:	00000000 	nop
	...
	}
}
  401e40:	03c0e825 	move	sp,s8
  401e44:	8fbf001c 	lw	ra,28(sp)
  401e48:	8fbe0018 	lw	s8,24(sp)
  401e4c:	27bd0020 	addiu	sp,sp,32
  401e50:	03e00008 	jr	ra
  401e54:	00000000 	nop

00401e58 <dup>:
 * Hint:
 *   Use 'fd_lookup' or 'INDEX2FD' to get 'fd' to 'fdnum'.
 *   Use 'fd2data' to get the data address to 'fd'.
 *   Use 'syscall_mem_map' to share the data pages.
 */
int dup(int oldfdnum, int newfdnum) {
  401e58:	27bdffb8 	addiu	sp,sp,-72
  401e5c:	afbf0044 	sw	ra,68(sp)
  401e60:	afbe0040 	sw	s8,64(sp)
  401e64:	03a0f025 	move	s8,sp
  401e68:	afc40048 	sw	a0,72(s8)
  401e6c:	afc5004c 	sw	a1,76(s8)
	void *ova, *nva;
	u_int pte;
	struct Fd *oldfd, *newfd;

	/* Step 1: Check if 'oldnum' is valid. if not, return an error code, or get 'fd'. */
	if ((r = fd_lookup(oldfdnum, &oldfd)) < 0) {
  401e70:	27c20038 	addiu	v0,s8,56
  401e74:	00402825 	move	a1,v0
  401e78:	8fc40048 	lw	a0,72(s8)
  401e7c:	0c1006fc 	jal	401bf0 <fd_lookup>
  401e80:	00000000 	nop
  401e84:	afc2001c 	sw	v0,28(s8)
  401e88:	8fc2001c 	lw	v0,28(s8)
  401e8c:	04410004 	bgez	v0,401ea0 <dup+0x48>
  401e90:	00000000 	nop
		return r;
  401e94:	8fc2001c 	lw	v0,28(s8)
  401e98:	10000090 	b	4020dc <dup+0x284>
  401e9c:	00000000 	nop
	}

	/* Step 2: Close 'newfdnum' to reset content. */
	close(newfdnum);
  401ea0:	8fc4004c 	lw	a0,76(s8)
  401ea4:	0c10074e 	jal	401d38 <close>
  401ea8:	00000000 	nop
	/* Step 3: Get 'newfd' reffered by 'newfdnum'. */
	newfd = (struct Fd *)INDEX2FD(newfdnum);
  401eac:	8fc3004c 	lw	v1,76(s8)
  401eb0:	3c020005 	lui	v0,0x5
  401eb4:	3442fc00 	ori	v0,v0,0xfc00
  401eb8:	00621021 	addu	v0,v1,v0
  401ebc:	00021300 	sll	v0,v0,0xc
  401ec0:	afc20020 	sw	v0,32(s8)
	/* Step 4: Get data address. */
	ova = fd2data(oldfd);
  401ec4:	8fc20038 	lw	v0,56(s8)
  401ec8:	00402025 	move	a0,v0
  401ecc:	0c100723 	jal	401c8c <fd2data>
  401ed0:	00000000 	nop
  401ed4:	afc20024 	sw	v0,36(s8)
	nva = fd2data(newfd);
  401ed8:	8fc40020 	lw	a0,32(s8)
  401edc:	0c100723 	jal	401c8c <fd2data>
  401ee0:	00000000 	nop
  401ee4:	afc20028 	sw	v0,40(s8)
	/* Step 5: Dunplicate the data and 'fd' self from old to new. */

	if (vpd[PDX(ova)]) {
  401ee8:	8fc20024 	lw	v0,36(s8)
  401eec:	00021582 	srl	v0,v0,0x16
  401ef0:	00021880 	sll	v1,v0,0x2
  401ef4:	3c027fdf 	lui	v0,0x7fdf
  401ef8:	3442f000 	ori	v0,v0,0xf000
  401efc:	00621021 	addu	v0,v1,v0
  401f00:	8c420000 	lw	v0,0(v0)
  401f04:	1040002c 	beqz	v0,401fb8 <dup+0x160>
  401f08:	00000000 	nop
		for (i = 0; i < PDMAP; i += PTMAP) {
  401f0c:	afc00018 	sw	zero,24(s8)
  401f10:	10000024 	b	401fa4 <dup+0x14c>
  401f14:	00000000 	nop
			pte = vpt[VPN(ova + i)];
  401f18:	8fc20018 	lw	v0,24(s8)
  401f1c:	8fc30024 	lw	v1,36(s8)
  401f20:	00621021 	addu	v0,v1,v0
  401f24:	00021302 	srl	v0,v0,0xc
  401f28:	00021880 	sll	v1,v0,0x2
  401f2c:	3c027fc0 	lui	v0,0x7fc0
  401f30:	00621021 	addu	v0,v1,v0
  401f34:	8c420000 	lw	v0,0(v0)
  401f38:	afc2002c 	sw	v0,44(s8)

			if (pte & PTE_V) {
  401f3c:	8fc2002c 	lw	v0,44(s8)
  401f40:	30420080 	andi	v0,v0,0x80
  401f44:	10400014 	beqz	v0,401f98 <dup+0x140>
  401f48:	00000000 	nop
				// should be no error here -- pd is already allocated
				if ((r = syscall_mem_map(0, (void *)(ova + i), 0, (void *)(nva + i),
  401f4c:	8fc20018 	lw	v0,24(s8)
  401f50:	8fc30024 	lw	v1,36(s8)
  401f54:	00622021 	addu	a0,v1,v0
  401f58:	8fc20018 	lw	v0,24(s8)
  401f5c:	8fc30028 	lw	v1,40(s8)
  401f60:	00621821 	addu	v1,v1,v0
  401f64:	8fc2002c 	lw	v0,44(s8)
  401f68:	30420102 	andi	v0,v0,0x102
  401f6c:	afa20010 	sw	v0,16(sp)
  401f70:	00603825 	move	a3,v1
  401f74:	00003025 	move	a2,zero
  401f78:	00802825 	move	a1,a0
  401f7c:	00002025 	move	a0,zero
  401f80:	0c1004ff 	jal	4013fc <syscall_mem_map>
  401f84:	00000000 	nop
  401f88:	afc2001c 	sw	v0,28(s8)
  401f8c:	8fc2001c 	lw	v0,28(s8)
  401f90:	0440001f 	bltz	v0,402010 <dup+0x1b8>
  401f94:	00000000 	nop
		for (i = 0; i < PDMAP; i += PTMAP) {
  401f98:	8fc20018 	lw	v0,24(s8)
  401f9c:	24421000 	addiu	v0,v0,4096
  401fa0:	afc20018 	sw	v0,24(s8)
  401fa4:	8fc30018 	lw	v1,24(s8)
  401fa8:	3c020040 	lui	v0,0x40
  401fac:	0062102a 	slt	v0,v1,v0
  401fb0:	1440ffd9 	bnez	v0,401f18 <dup+0xc0>
  401fb4:	00000000 	nop
				}
			}
		}
	}

	if ((r = syscall_mem_map(0, oldfd, 0, newfd, vpt[VPN(oldfd)] & (PTE_D | PTE_LIBRARY))) <
  401fb8:	8fc40038 	lw	a0,56(s8)
  401fbc:	8fc20038 	lw	v0,56(s8)
  401fc0:	00021302 	srl	v0,v0,0xc
  401fc4:	00021880 	sll	v1,v0,0x2
  401fc8:	3c027fc0 	lui	v0,0x7fc0
  401fcc:	00621021 	addu	v0,v1,v0
  401fd0:	8c420000 	lw	v0,0(v0)
  401fd4:	30420102 	andi	v0,v0,0x102
  401fd8:	afa20010 	sw	v0,16(sp)
  401fdc:	8fc70020 	lw	a3,32(s8)
  401fe0:	00003025 	move	a2,zero
  401fe4:	00802825 	move	a1,a0
  401fe8:	00002025 	move	a0,zero
  401fec:	0c1004ff 	jal	4013fc <syscall_mem_map>
  401ff0:	00000000 	nop
  401ff4:	afc2001c 	sw	v0,28(s8)
  401ff8:	8fc2001c 	lw	v0,28(s8)
  401ffc:	04400007 	bltz	v0,40201c <dup+0x1c4>
  402000:	00000000 	nop
	    0) {
		goto err;
	}

	return newfdnum;
  402004:	8fc2004c 	lw	v0,76(s8)
  402008:	10000034 	b	4020dc <dup+0x284>
  40200c:	00000000 	nop
					goto err;
  402010:	00000000 	nop
  402014:	10000002 	b	402020 <dup+0x1c8>
  402018:	00000000 	nop
		goto err;
  40201c:	00000000 	nop

err:
	/* If error occurs, cancel all map operations. */
	panic_on(syscall_mem_unmap(0, newfd));
  402020:	8fc50020 	lw	a1,32(s8)
  402024:	00002025 	move	a0,zero
  402028:	0c100517 	jal	40145c <syscall_mem_unmap>
  40202c:	00000000 	nop
  402030:	afc20030 	sw	v0,48(s8)
  402034:	8fc20030 	lw	v0,48(s8)
  402038:	10400009 	beqz	v0,402060 <dup+0x208>
  40203c:	00000000 	nop
  402040:	8fc70030 	lw	a3,48(s8)
  402044:	3c020040 	lui	v0,0x40
  402048:	24466084 	addiu	a2,v0,24708
  40204c:	240500ab 	li	a1,171
  402050:	3c020040 	lui	v0,0x40
  402054:	24446078 	addiu	a0,v0,24696
  402058:	0c100157 	jal	40055c <_user_panic>
  40205c:	00000000 	nop

	for (i = 0; i < PDMAP; i += PTMAP) {
  402060:	afc00018 	sw	zero,24(s8)
  402064:	10000017 	b	4020c4 <dup+0x26c>
  402068:	00000000 	nop
		panic_on(syscall_mem_unmap(0, (void *)(nva + i)));
  40206c:	8fc20018 	lw	v0,24(s8)
  402070:	8fc30028 	lw	v1,40(s8)
  402074:	00621021 	addu	v0,v1,v0
  402078:	00402825 	move	a1,v0
  40207c:	00002025 	move	a0,zero
  402080:	0c100517 	jal	40145c <syscall_mem_unmap>
  402084:	00000000 	nop
  402088:	afc20034 	sw	v0,52(s8)
  40208c:	8fc20034 	lw	v0,52(s8)
  402090:	10400009 	beqz	v0,4020b8 <dup+0x260>
  402094:	00000000 	nop
  402098:	8fc70034 	lw	a3,52(s8)
  40209c:	3c020040 	lui	v0,0x40
  4020a0:	244660b0 	addiu	a2,v0,24752
  4020a4:	240500ae 	li	a1,174
  4020a8:	3c020040 	lui	v0,0x40
  4020ac:	24446078 	addiu	a0,v0,24696
  4020b0:	0c100157 	jal	40055c <_user_panic>
  4020b4:	00000000 	nop
	for (i = 0; i < PDMAP; i += PTMAP) {
  4020b8:	8fc20018 	lw	v0,24(s8)
  4020bc:	24421000 	addiu	v0,v0,4096
  4020c0:	afc20018 	sw	v0,24(s8)
  4020c4:	8fc30018 	lw	v1,24(s8)
  4020c8:	3c020040 	lui	v0,0x40
  4020cc:	0062102a 	slt	v0,v1,v0
  4020d0:	1440ffe6 	bnez	v0,40206c <dup+0x214>
  4020d4:	00000000 	nop
	}

	return r;
  4020d8:	8fc2001c 	lw	v0,28(s8)
}
  4020dc:	03c0e825 	move	sp,s8
  4020e0:	8fbf0044 	lw	ra,68(sp)
  4020e4:	8fbe0040 	lw	s8,64(sp)
  4020e8:	27bd0048 	addiu	sp,sp,72
  4020ec:	03e00008 	jr	ra
  4020f0:	00000000 	nop

004020f4 <read>:
//
// Post-Condition:
//  Update seek position.
//  Return the number of bytes read successfully.
//  Return < 0 on error.
int read(int fdnum, void *buf, u_int n) {
  4020f4:	27bdffd0 	addiu	sp,sp,-48
  4020f8:	afbf002c 	sw	ra,44(sp)
  4020fc:	afbe0028 	sw	s8,40(sp)
  402100:	03a0f025 	move	s8,sp
  402104:	afc40030 	sw	a0,48(s8)
  402108:	afc50034 	sw	a1,52(s8)
  40210c:	afc60038 	sw	a2,56(s8)
	// Similar to the 'write' function below.
	// Step 1: Get 'fd' and 'dev' using 'fd_lookup' and 'dev_lookup'.
	struct Dev *dev;
	struct Fd *fd;
	/* Exercise 5.10: Your code here. (1/4) */
	try(fd_lookup(fdnum, &fd));
  402110:	27c20020 	addiu	v0,s8,32
  402114:	00402825 	move	a1,v0
  402118:	8fc40030 	lw	a0,48(s8)
  40211c:	0c1006fc 	jal	401bf0 <fd_lookup>
  402120:	00000000 	nop
  402124:	afc20010 	sw	v0,16(s8)
  402128:	8fc20010 	lw	v0,16(s8)
  40212c:	10400004 	beqz	v0,402140 <read+0x4c>
  402130:	00000000 	nop
  402134:	8fc20010 	lw	v0,16(s8)
  402138:	1000002d 	b	4021f0 <read+0xfc>
  40213c:	00000000 	nop
	try(dev_lookup(fd->fd_dev_id, &dev));
  402140:	8fc20020 	lw	v0,32(s8)
  402144:	8c420000 	lw	v0,0(v0)
  402148:	27c3001c 	addiu	v1,s8,28
  40214c:	00602825 	move	a1,v1
  402150:	00402025 	move	a0,v0
  402154:	0c10066c 	jal	4019b0 <dev_lookup>
  402158:	00000000 	nop
  40215c:	afc20014 	sw	v0,20(s8)
  402160:	8fc20014 	lw	v0,20(s8)
  402164:	10400004 	beqz	v0,402178 <read+0x84>
  402168:	00000000 	nop
  40216c:	8fc20014 	lw	v0,20(s8)
  402170:	1000001f 	b	4021f0 <read+0xfc>
  402174:	00000000 	nop
	// Step 2: Check the open mode in 'fd'.
	// Return -E_INVAL if the file is opened for writing only (O_WRONLY).
	/* Exercise 5.10: Your code here. (2/4) */
	if ((fd->fd_omode & O_ACCMODE) == O_WRONLY) {
  402178:	8fc20020 	lw	v0,32(s8)
  40217c:	8c420008 	lw	v0,8(v0)
  402180:	30430003 	andi	v1,v0,0x3
  402184:	24020001 	li	v0,1
  402188:	14620004 	bne	v1,v0,40219c <read+0xa8>
  40218c:	00000000 	nop
		return -E_INVAL;
  402190:	2402fffd 	li	v0,-3
  402194:	10000016 	b	4021f0 <read+0xfc>
  402198:	00000000 	nop
	}
	// Step 3: Read from 'dev' into 'buf' at the seek position (offset in 'fd').
	/* Exercise 5.10: Your code here. (3/4) */
	r = dev->dev_read(fd, buf, n, fd->fd_offset);
  40219c:	8fc2001c 	lw	v0,28(s8)
  4021a0:	8c420008 	lw	v0,8(v0)
  4021a4:	8fc40020 	lw	a0,32(s8)
  4021a8:	8fc30020 	lw	v1,32(s8)
  4021ac:	8c630004 	lw	v1,4(v1)
  4021b0:	00603825 	move	a3,v1
  4021b4:	8fc60038 	lw	a2,56(s8)
  4021b8:	8fc50034 	lw	a1,52(s8)
  4021bc:	0040f809 	jalr	v0
  4021c0:	00000000 	nop
  4021c4:	afc20018 	sw	v0,24(s8)
	// Step 4: Update the offset in 'fd' if the read is successful.
	/* Hint: DO NOT add a null terminator to the end of the buffer!
	 *  A character buffer is not a C string. Only the memory within [buf, buf+n) is safe to
	 *  use. */
	/* Exercise 5.10: Your code here. (4/4) */
	if(r > 0){
  4021c8:	8fc20018 	lw	v0,24(s8)
  4021cc:	18400007 	blez	v0,4021ec <read+0xf8>
  4021d0:	00000000 	nop
		fd->fd_offset += r;
  4021d4:	8fc20020 	lw	v0,32(s8)
  4021d8:	8c440004 	lw	a0,4(v0)
  4021dc:	8fc30018 	lw	v1,24(s8)
  4021e0:	8fc20020 	lw	v0,32(s8)
  4021e4:	00831821 	addu	v1,a0,v1
  4021e8:	ac430004 	sw	v1,4(v0)
	}
	return r;
  4021ec:	8fc20018 	lw	v0,24(s8)
}
  4021f0:	03c0e825 	move	sp,s8
  4021f4:	8fbf002c 	lw	ra,44(sp)
  4021f8:	8fbe0028 	lw	s8,40(sp)
  4021fc:	27bd0030 	addiu	sp,sp,48
  402200:	03e00008 	jr	ra
  402204:	00000000 	nop

00402208 <readn>:

int readn(int fdnum, void *buf, u_int n) {
  402208:	27bdffe0 	addiu	sp,sp,-32
  40220c:	afbf001c 	sw	ra,28(sp)
  402210:	afbe0018 	sw	s8,24(sp)
  402214:	03a0f025 	move	s8,sp
  402218:	afc40020 	sw	a0,32(s8)
  40221c:	afc50024 	sw	a1,36(s8)
  402220:	afc60028 	sw	a2,40(s8)
	int m, tot;

	for (tot = 0; tot < n; tot += m) {
  402224:	afc00010 	sw	zero,16(s8)
  402228:	1000001a 	b	402294 <readn+0x8c>
  40222c:	00000000 	nop
		m = read(fdnum, (char *)buf + tot, n - tot);
  402230:	8fc20010 	lw	v0,16(s8)
  402234:	8fc30024 	lw	v1,36(s8)
  402238:	00622021 	addu	a0,v1,v0
  40223c:	8fc20010 	lw	v0,16(s8)
  402240:	8fc30028 	lw	v1,40(s8)
  402244:	00621023 	subu	v0,v1,v0
  402248:	00403025 	move	a2,v0
  40224c:	00802825 	move	a1,a0
  402250:	8fc40020 	lw	a0,32(s8)
  402254:	0c10083d 	jal	4020f4 <read>
  402258:	00000000 	nop
  40225c:	afc20014 	sw	v0,20(s8)

		if (m < 0) {
  402260:	8fc20014 	lw	v0,20(s8)
  402264:	04410004 	bgez	v0,402278 <readn+0x70>
  402268:	00000000 	nop
			return m;
  40226c:	8fc20014 	lw	v0,20(s8)
  402270:	10000011 	b	4022b8 <readn+0xb0>
  402274:	00000000 	nop
		}

		if (m == 0) {
  402278:	8fc20014 	lw	v0,20(s8)
  40227c:	1040000c 	beqz	v0,4022b0 <readn+0xa8>
  402280:	00000000 	nop
	for (tot = 0; tot < n; tot += m) {
  402284:	8fc30010 	lw	v1,16(s8)
  402288:	8fc20014 	lw	v0,20(s8)
  40228c:	00621021 	addu	v0,v1,v0
  402290:	afc20010 	sw	v0,16(s8)
  402294:	8fc20010 	lw	v0,16(s8)
  402298:	8fc30028 	lw	v1,40(s8)
  40229c:	0043102b 	sltu	v0,v0,v1
  4022a0:	1440ffe3 	bnez	v0,402230 <readn+0x28>
  4022a4:	00000000 	nop
  4022a8:	10000002 	b	4022b4 <readn+0xac>
  4022ac:	00000000 	nop
			break;
  4022b0:	00000000 	nop
		}
	}

	return tot;
  4022b4:	8fc20010 	lw	v0,16(s8)
}
  4022b8:	03c0e825 	move	sp,s8
  4022bc:	8fbf001c 	lw	ra,28(sp)
  4022c0:	8fbe0018 	lw	s8,24(sp)
  4022c4:	27bd0020 	addiu	sp,sp,32
  4022c8:	03e00008 	jr	ra
  4022cc:	00000000 	nop

004022d0 <write>:

int write(int fdnum, const void *buf, u_int n) {
  4022d0:	27bdffd8 	addiu	sp,sp,-40
  4022d4:	afbf0024 	sw	ra,36(sp)
  4022d8:	afbe0020 	sw	s8,32(sp)
  4022dc:	03a0f025 	move	s8,sp
  4022e0:	afc40028 	sw	a0,40(s8)
  4022e4:	afc5002c 	sw	a1,44(s8)
  4022e8:	afc60030 	sw	a2,48(s8)
	int r;
	struct Dev *dev;
	struct Fd *fd;

	if ((r = fd_lookup(fdnum, &fd)) < 0 || (r = dev_lookup(fd->fd_dev_id, &dev)) < 0) {
  4022ec:	27c20018 	addiu	v0,s8,24
  4022f0:	00402825 	move	a1,v0
  4022f4:	8fc40028 	lw	a0,40(s8)
  4022f8:	0c1006fc 	jal	401bf0 <fd_lookup>
  4022fc:	00000000 	nop
  402300:	afc20010 	sw	v0,16(s8)
  402304:	8fc20010 	lw	v0,16(s8)
  402308:	0440000c 	bltz	v0,40233c <write+0x6c>
  40230c:	00000000 	nop
  402310:	8fc20018 	lw	v0,24(s8)
  402314:	8c420000 	lw	v0,0(v0)
  402318:	27c30014 	addiu	v1,s8,20
  40231c:	00602825 	move	a1,v1
  402320:	00402025 	move	a0,v0
  402324:	0c10066c 	jal	4019b0 <dev_lookup>
  402328:	00000000 	nop
  40232c:	afc20010 	sw	v0,16(s8)
  402330:	8fc20010 	lw	v0,16(s8)
  402334:	04410004 	bgez	v0,402348 <write+0x78>
  402338:	00000000 	nop
		return r;
  40233c:	8fc20010 	lw	v0,16(s8)
  402340:	1000001e 	b	4023bc <write+0xec>
  402344:	00000000 	nop
	}

	if ((fd->fd_omode & O_ACCMODE) == O_RDONLY) {
  402348:	8fc20018 	lw	v0,24(s8)
  40234c:	8c420008 	lw	v0,8(v0)
  402350:	30420003 	andi	v0,v0,0x3
  402354:	14400004 	bnez	v0,402368 <write+0x98>
  402358:	00000000 	nop
		return -E_INVAL;
  40235c:	2402fffd 	li	v0,-3
  402360:	10000016 	b	4023bc <write+0xec>
  402364:	00000000 	nop
	}

	r = dev->dev_write(fd, buf, n, fd->fd_offset);
  402368:	8fc20014 	lw	v0,20(s8)
  40236c:	8c42000c 	lw	v0,12(v0)
  402370:	8fc40018 	lw	a0,24(s8)
  402374:	8fc30018 	lw	v1,24(s8)
  402378:	8c630004 	lw	v1,4(v1)
  40237c:	00603825 	move	a3,v1
  402380:	8fc60030 	lw	a2,48(s8)
  402384:	8fc5002c 	lw	a1,44(s8)
  402388:	0040f809 	jalr	v0
  40238c:	00000000 	nop
  402390:	afc20010 	sw	v0,16(s8)
	if (r > 0) {
  402394:	8fc20010 	lw	v0,16(s8)
  402398:	18400007 	blez	v0,4023b8 <write+0xe8>
  40239c:	00000000 	nop
		fd->fd_offset += r;
  4023a0:	8fc20018 	lw	v0,24(s8)
  4023a4:	8c440004 	lw	a0,4(v0)
  4023a8:	8fc30010 	lw	v1,16(s8)
  4023ac:	8fc20018 	lw	v0,24(s8)
  4023b0:	00831821 	addu	v1,a0,v1
  4023b4:	ac430004 	sw	v1,4(v0)
	}

	return r;
  4023b8:	8fc20010 	lw	v0,16(s8)
}
  4023bc:	03c0e825 	move	sp,s8
  4023c0:	8fbf0024 	lw	ra,36(sp)
  4023c4:	8fbe0020 	lw	s8,32(sp)
  4023c8:	27bd0028 	addiu	sp,sp,40
  4023cc:	03e00008 	jr	ra
  4023d0:	00000000 	nop

004023d4 <seek>:

int seek(int fdnum, u_int offset) {
  4023d4:	27bdffe0 	addiu	sp,sp,-32
  4023d8:	afbf001c 	sw	ra,28(sp)
  4023dc:	afbe0018 	sw	s8,24(sp)
  4023e0:	03a0f025 	move	s8,sp
  4023e4:	afc40020 	sw	a0,32(s8)
  4023e8:	afc50024 	sw	a1,36(s8)
	int r;
	struct Fd *fd;

	if ((r = fd_lookup(fdnum, &fd)) < 0) {
  4023ec:	27c20014 	addiu	v0,s8,20
  4023f0:	00402825 	move	a1,v0
  4023f4:	8fc40020 	lw	a0,32(s8)
  4023f8:	0c1006fc 	jal	401bf0 <fd_lookup>
  4023fc:	00000000 	nop
  402400:	afc20010 	sw	v0,16(s8)
  402404:	8fc20010 	lw	v0,16(s8)
  402408:	04410004 	bgez	v0,40241c <seek+0x48>
  40240c:	00000000 	nop
		return r;
  402410:	8fc20010 	lw	v0,16(s8)
  402414:	10000005 	b	40242c <seek+0x58>
  402418:	00000000 	nop
	}

	fd->fd_offset = offset;
  40241c:	8fc20014 	lw	v0,20(s8)
  402420:	8fc30024 	lw	v1,36(s8)
  402424:	ac430004 	sw	v1,4(v0)
	return 0;
  402428:	00001025 	move	v0,zero
}
  40242c:	03c0e825 	move	sp,s8
  402430:	8fbf001c 	lw	ra,28(sp)
  402434:	8fbe0018 	lw	s8,24(sp)
  402438:	27bd0020 	addiu	sp,sp,32
  40243c:	03e00008 	jr	ra
  402440:	00000000 	nop

00402444 <fstat>:

int fstat(int fdnum, struct Stat *stat) {
  402444:	27bdffd8 	addiu	sp,sp,-40
  402448:	afbf0024 	sw	ra,36(sp)
  40244c:	afbe0020 	sw	s8,32(sp)
  402450:	03a0f025 	move	s8,sp
  402454:	afc40028 	sw	a0,40(s8)
  402458:	afc5002c 	sw	a1,44(s8)
	int r;
	struct Dev *dev = NULL;
  40245c:	afc00014 	sw	zero,20(s8)
	struct Fd *fd;

	if ((r = fd_lookup(fdnum, &fd)) < 0 || (r = dev_lookup(fd->fd_dev_id, &dev)) < 0) {
  402460:	27c20018 	addiu	v0,s8,24
  402464:	00402825 	move	a1,v0
  402468:	8fc40028 	lw	a0,40(s8)
  40246c:	0c1006fc 	jal	401bf0 <fd_lookup>
  402470:	00000000 	nop
  402474:	afc20010 	sw	v0,16(s8)
  402478:	8fc20010 	lw	v0,16(s8)
  40247c:	0440000c 	bltz	v0,4024b0 <fstat+0x6c>
  402480:	00000000 	nop
  402484:	8fc20018 	lw	v0,24(s8)
  402488:	8c420000 	lw	v0,0(v0)
  40248c:	27c30014 	addiu	v1,s8,20
  402490:	00602825 	move	a1,v1
  402494:	00402025 	move	a0,v0
  402498:	0c10066c 	jal	4019b0 <dev_lookup>
  40249c:	00000000 	nop
  4024a0:	afc20010 	sw	v0,16(s8)
  4024a4:	8fc20010 	lw	v0,16(s8)
  4024a8:	04410004 	bgez	v0,4024bc <fstat+0x78>
  4024ac:	00000000 	nop
		return r;
  4024b0:	8fc20010 	lw	v0,16(s8)
  4024b4:	10000011 	b	4024fc <fstat+0xb8>
  4024b8:	00000000 	nop
	}

	stat->st_name[0] = 0;
  4024bc:	8fc2002c 	lw	v0,44(s8)
  4024c0:	a0400000 	sb	zero,0(v0)
	stat->st_size = 0;
  4024c4:	8fc2002c 	lw	v0,44(s8)
  4024c8:	ac400080 	sw	zero,128(v0)
	stat->st_isdir = 0;
  4024cc:	8fc2002c 	lw	v0,44(s8)
  4024d0:	ac400084 	sw	zero,132(v0)
	stat->st_dev = dev;
  4024d4:	8fc30014 	lw	v1,20(s8)
  4024d8:	8fc2002c 	lw	v0,44(s8)
  4024dc:	ac430088 	sw	v1,136(v0)
	return (*dev->dev_stat)(fd, stat);
  4024e0:	8fc20014 	lw	v0,20(s8)
  4024e4:	8c420014 	lw	v0,20(v0)
  4024e8:	8fc30018 	lw	v1,24(s8)
  4024ec:	8fc5002c 	lw	a1,44(s8)
  4024f0:	00602025 	move	a0,v1
  4024f4:	0040f809 	jalr	v0
  4024f8:	00000000 	nop
}
  4024fc:	03c0e825 	move	sp,s8
  402500:	8fbf0024 	lw	ra,36(sp)
  402504:	8fbe0020 	lw	s8,32(sp)
  402508:	27bd0028 	addiu	sp,sp,40
  40250c:	03e00008 	jr	ra
  402510:	00000000 	nop

00402514 <stat>:

int stat(const char *path, struct Stat *stat) {
  402514:	27bdffe0 	addiu	sp,sp,-32
  402518:	afbf001c 	sw	ra,28(sp)
  40251c:	afbe0018 	sw	s8,24(sp)
  402520:	03a0f025 	move	s8,sp
  402524:	afc40020 	sw	a0,32(s8)
  402528:	afc50024 	sw	a1,36(s8)
	int fd, r;

	if ((fd = open(path, O_RDONLY)) < 0) {
  40252c:	00002825 	move	a1,zero
  402530:	8fc40020 	lw	a0,32(s8)
  402534:	0c100998 	jal	402660 <open>
  402538:	00000000 	nop
  40253c:	afc20010 	sw	v0,16(s8)
  402540:	8fc20010 	lw	v0,16(s8)
  402544:	04410004 	bgez	v0,402558 <stat+0x44>
  402548:	00000000 	nop
		return fd;
  40254c:	8fc20010 	lw	v0,16(s8)
  402550:	1000000a 	b	40257c <stat+0x68>
  402554:	00000000 	nop
	}

	r = fstat(fd, stat);
  402558:	8fc50024 	lw	a1,36(s8)
  40255c:	8fc40010 	lw	a0,16(s8)
  402560:	0c100911 	jal	402444 <fstat>
  402564:	00000000 	nop
  402568:	afc20014 	sw	v0,20(s8)
	close(fd);
  40256c:	8fc40010 	lw	a0,16(s8)
  402570:	0c10074e 	jal	401d38 <close>
  402574:	00000000 	nop
	return r;
  402578:	8fc20014 	lw	v0,20(s8)
}
  40257c:	03c0e825 	move	sp,s8
  402580:	8fbf001c 	lw	ra,28(sp)
  402584:	8fbe0018 	lw	s8,24(sp)
  402588:	27bd0020 	addiu	sp,sp,32
  40258c:	03e00008 	jr	ra
  402590:	00000000 	nop
	...

004025a0 <pageref>:
 *   Otherwise return 0.
 *
 * Hint:
 *   Use 'vpd' and 'vpt'.
 */
int pageref(void *v) {
  4025a0:	27bdfff0 	addiu	sp,sp,-16
  4025a4:	afbe000c 	sw	s8,12(sp)
  4025a8:	03a0f025 	move	s8,sp
  4025ac:	afc40010 	sw	a0,16(s8)
	u_int pte;

	/* Step 1: Check the page directory. */
	if (!(vpd[PDX(v)] & PTE_V)) {
  4025b0:	8fc20010 	lw	v0,16(s8)
  4025b4:	00021582 	srl	v0,v0,0x16
  4025b8:	00021880 	sll	v1,v0,0x2
  4025bc:	3c027fdf 	lui	v0,0x7fdf
  4025c0:	3442f000 	ori	v0,v0,0xf000
  4025c4:	00621021 	addu	v0,v1,v0
  4025c8:	8c420000 	lw	v0,0(v0)
  4025cc:	30420080 	andi	v0,v0,0x80
  4025d0:	14400004 	bnez	v0,4025e4 <pageref+0x44>
  4025d4:	00000000 	nop
		return 0;
  4025d8:	00001025 	move	v0,zero
  4025dc:	1000001a 	b	402648 <pageref+0xa8>
  4025e0:	00000000 	nop
	}

	/* Step 2: Check the page table. */
	pte = vpt[VPN(v)];
  4025e4:	8fc20010 	lw	v0,16(s8)
  4025e8:	00021302 	srl	v0,v0,0xc
  4025ec:	00021880 	sll	v1,v0,0x2
  4025f0:	3c027fc0 	lui	v0,0x7fc0
  4025f4:	00621021 	addu	v0,v1,v0
  4025f8:	8c420000 	lw	v0,0(v0)
  4025fc:	afc20000 	sw	v0,0(s8)

	if (!(pte & PTE_V)) {
  402600:	8fc20000 	lw	v0,0(s8)
  402604:	30420080 	andi	v0,v0,0x80
  402608:	14400004 	bnez	v0,40261c <pageref+0x7c>
  40260c:	00000000 	nop
		return 0;
  402610:	00001025 	move	v0,zero
  402614:	1000000c 	b	402648 <pageref+0xa8>
  402618:	00000000 	nop
	}
	/* Step 3: Return the result. */
	return pages[PPN(pte)].pp_ref;
  40261c:	8fc20000 	lw	v0,0(s8)
  402620:	00021b02 	srl	v1,v0,0xc
  402624:	00601025 	move	v0,v1
  402628:	00021040 	sll	v0,v0,0x1
  40262c:	00431021 	addu	v0,v0,v1
  402630:	00021080 	sll	v0,v0,0x2
  402634:	00401825 	move	v1,v0
  402638:	3c027f80 	lui	v0,0x7f80
  40263c:	00621021 	addu	v0,v1,v0
  402640:	94420008 	lhu	v0,8(v0)
  402644:	3042ffff 	andi	v0,v0,0xffff
}
  402648:	03c0e825 	move	sp,s8
  40264c:	8fbe000c 	lw	s8,12(sp)
  402650:	27bd0010 	addiu	sp,sp,16
  402654:	03e00008 	jr	ra
  402658:	00000000 	nop
  40265c:	00000000 	nop

00402660 <open>:
//  Open a file (or directory).
//
// Returns:	
//  the file descriptor on success,
//  the underlying error on failure.
int open(const char *path, int mode) {
  402660:	27bdffc0 	addiu	sp,sp,-64
  402664:	afbf003c 	sw	ra,60(sp)
  402668:	afbe0038 	sw	s8,56(sp)
  40266c:	03a0f025 	move	s8,sp
  402670:	afc40040 	sw	a0,64(s8)
  402674:	afc50044 	sw	a1,68(s8)
	
	// Step 1: Alloc a new 'Fd' using 'fd_alloc' in fd.c.
	// Hint: return the error code if failed.
	struct Fd *fd;
	/* Exercise 5.9: Your code here. (1/5) */
	try(fd_alloc(&fd));
  402678:	27c20030 	addiu	v0,s8,48
  40267c:	00402025 	move	a0,v0
  402680:	0c1006a7 	jal	401a9c <fd_alloc>
  402684:	00000000 	nop
  402688:	afc20014 	sw	v0,20(s8)
  40268c:	8fc20014 	lw	v0,20(s8)
  402690:	10400004 	beqz	v0,4026a4 <open+0x44>
  402694:	00000000 	nop
  402698:	8fc20014 	lw	v0,20(s8)
  40269c:	1000003b 	b	40278c <open+0x12c>
  4026a0:	00000000 	nop
	// Step 2: Prepare the 'fd' using 'fsipc_open' in fsipc.c.
	/* Exercise 5.9: Your code here. (2/5) */
	try(fsipc_open(path, mode, fd));
  4026a4:	8fc20044 	lw	v0,68(s8)
  4026a8:	8fc30030 	lw	v1,48(s8)
  4026ac:	00603025 	move	a2,v1
  4026b0:	00402825 	move	a1,v0
  4026b4:	8fc40040 	lw	a0,64(s8)
  4026b8:	0c100c01 	jal	403004 <fsipc_open>
  4026bc:	00000000 	nop
  4026c0:	afc20018 	sw	v0,24(s8)
  4026c4:	8fc20018 	lw	v0,24(s8)
  4026c8:	10400004 	beqz	v0,4026dc <open+0x7c>
  4026cc:	00000000 	nop
  4026d0:	8fc20018 	lw	v0,24(s8)
  4026d4:	1000002d 	b	40278c <open+0x12c>
  4026d8:	00000000 	nop
	// 'fd2data'. Set 'size' and 'fileid' correctly with the value in 'fd' as a 'Filefd'.
	char *va;
	struct Filefd *ffd;
	u_int size, fileid;
	/* Exercise 5.9: Your code here. (3/5) */
	va = fd2data(fd);
  4026dc:	8fc20030 	lw	v0,48(s8)
  4026e0:	00402025 	move	a0,v0
  4026e4:	0c100723 	jal	401c8c <fd2data>
  4026e8:	00000000 	nop
  4026ec:	afc2001c 	sw	v0,28(s8)
	ffd = (struct Filefd *)fd;
  4026f0:	8fc20030 	lw	v0,48(s8)
  4026f4:	afc20020 	sw	v0,32(s8)
	size = ffd->f_file.f_size;
  4026f8:	8fc20020 	lw	v0,32(s8)
  4026fc:	8c420090 	lw	v0,144(v0)
  402700:	afc20024 	sw	v0,36(s8)
	fileid = ffd->f_fileid;
  402704:	8fc20020 	lw	v0,32(s8)
  402708:	8c42000c 	lw	v0,12(v0)
  40270c:	afc20028 	sw	v0,40(s8)
	// Step 4: Map the file content using 'fsipc_map'.
	for (int i = 0; i < size; i += PTMAP) {
  402710:	afc00010 	sw	zero,16(s8)
  402714:	10000014 	b	402768 <open+0x108>
  402718:	00000000 	nop
		/* Exercise 5.9: Your code here. (4/5) */
		try(fsipc_map(fileid, i, va + i));
  40271c:	8fc40010 	lw	a0,16(s8)
  402720:	8fc20010 	lw	v0,16(s8)
  402724:	8fc3001c 	lw	v1,28(s8)
  402728:	00621021 	addu	v0,v1,v0
  40272c:	00403025 	move	a2,v0
  402730:	00802825 	move	a1,a0
  402734:	8fc40028 	lw	a0,40(s8)
  402738:	0c100c29 	jal	4030a4 <fsipc_map>
  40273c:	00000000 	nop
  402740:	afc2002c 	sw	v0,44(s8)
  402744:	8fc2002c 	lw	v0,44(s8)
  402748:	10400004 	beqz	v0,40275c <open+0xfc>
  40274c:	00000000 	nop
  402750:	8fc2002c 	lw	v0,44(s8)
  402754:	1000000d 	b	40278c <open+0x12c>
  402758:	00000000 	nop
	for (int i = 0; i < size; i += PTMAP) {
  40275c:	8fc20010 	lw	v0,16(s8)
  402760:	24421000 	addiu	v0,v0,4096
  402764:	afc20010 	sw	v0,16(s8)
  402768:	8fc20010 	lw	v0,16(s8)
  40276c:	8fc30024 	lw	v1,36(s8)
  402770:	0043102b 	sltu	v0,v0,v1
  402774:	1440ffe9 	bnez	v0,40271c <open+0xbc>
  402778:	00000000 	nop
	}

	// Step 5: Return the number of file descriptor using 'fd2num'.
	/* Exercise 5.9: Your code here. (5/5) */
	return fd2num(fd);
  40277c:	8fc20030 	lw	v0,48(s8)
  402780:	00402025 	move	a0,v0
  402784:	0c100733 	jal	401ccc <fd2num>
  402788:	00000000 	nop
}
  40278c:	03c0e825 	move	sp,s8
  402790:	8fbf003c 	lw	ra,60(sp)
  402794:	8fbe0038 	lw	s8,56(sp)
  402798:	27bd0040 	addiu	sp,sp,64
  40279c:	03e00008 	jr	ra
  4027a0:	00000000 	nop

004027a4 <file_close>:

// Overview:
//  Close a file descriptor
int file_close(struct Fd *fd) {
  4027a4:	27bdffd0 	addiu	sp,sp,-48
  4027a8:	afbf002c 	sw	ra,44(sp)
  4027ac:	afbe0028 	sw	s8,40(sp)
  4027b0:	03a0f025 	move	s8,sp
  4027b4:	afc40030 	sw	a0,48(s8)
	struct Filefd *ffd;
	void *va;
	u_int size, fileid;
	u_int i;

	ffd = (struct Filefd *)fd;
  4027b8:	8fc20030 	lw	v0,48(s8)
  4027bc:	afc20014 	sw	v0,20(s8)
	fileid = ffd->f_fileid;
  4027c0:	8fc20014 	lw	v0,20(s8)
  4027c4:	8c42000c 	lw	v0,12(v0)
  4027c8:	afc20018 	sw	v0,24(s8)
	size = ffd->f_file.f_size;
  4027cc:	8fc20014 	lw	v0,20(s8)
  4027d0:	8c420090 	lw	v0,144(v0)
  4027d4:	afc2001c 	sw	v0,28(s8)

	// Set the start address storing the file's content.
	va = fd2data(fd);
  4027d8:	8fc40030 	lw	a0,48(s8)
  4027dc:	0c100723 	jal	401c8c <fd2data>
  4027e0:	00000000 	nop
  4027e4:	afc20020 	sw	v0,32(s8)

	// Tell the file server the dirty page.
	for (i = 0; i < size; i += PTMAP) {
  4027e8:	afc00010 	sw	zero,16(s8)
  4027ec:	10000013 	b	40283c <file_close+0x98>
  4027f0:	00000000 	nop
		if ((r = fsipc_dirty(fileid, i)) < 0) {
  4027f4:	8fc50010 	lw	a1,16(s8)
  4027f8:	8fc40018 	lw	a0,24(s8)
  4027fc:	0c100c91 	jal	403244 <fsipc_dirty>
  402800:	00000000 	nop
  402804:	afc20024 	sw	v0,36(s8)
  402808:	8fc20024 	lw	v0,36(s8)
  40280c:	04410008 	bgez	v0,402830 <file_close+0x8c>
  402810:	00000000 	nop
			debugf("cannot mark pages as dirty\n");
  402814:	3c020040 	lui	v0,0x40
  402818:	244460f8 	addiu	a0,v0,24824
  40281c:	0c100141 	jal	400504 <debugf>
  402820:	00000000 	nop
			return r;
  402824:	8fc20024 	lw	v0,36(s8)
  402828:	1000003b 	b	402918 <file_close+0x174>
  40282c:	00000000 	nop
	for (i = 0; i < size; i += PTMAP) {
  402830:	8fc20010 	lw	v0,16(s8)
  402834:	24421000 	addiu	v0,v0,4096
  402838:	afc20010 	sw	v0,16(s8)
  40283c:	8fc30010 	lw	v1,16(s8)
  402840:	8fc2001c 	lw	v0,28(s8)
  402844:	0062102b 	sltu	v0,v1,v0
  402848:	1440ffea 	bnez	v0,4027f4 <file_close+0x50>
  40284c:	00000000 	nop
		}
	}

	// Request the file server to close the file with fsipc.
	if ((r = fsipc_close(fileid)) < 0) {
  402850:	8fc40018 	lw	a0,24(s8)
  402854:	0c100c7a 	jal	4031e8 <fsipc_close>
  402858:	00000000 	nop
  40285c:	afc20024 	sw	v0,36(s8)
  402860:	8fc20024 	lw	v0,36(s8)
  402864:	04410008 	bgez	v0,402888 <file_close+0xe4>
  402868:	00000000 	nop
		debugf("cannot close the file\n");
  40286c:	3c020040 	lui	v0,0x40
  402870:	24446114 	addiu	a0,v0,24852
  402874:	0c100141 	jal	400504 <debugf>
  402878:	00000000 	nop
		return r;
  40287c:	8fc20024 	lw	v0,36(s8)
  402880:	10000025 	b	402918 <file_close+0x174>
  402884:	00000000 	nop
	}

	// Unmap the content of file, release memory.
	if (size == 0) {
  402888:	8fc2001c 	lw	v0,28(s8)
  40288c:	14400004 	bnez	v0,4028a0 <file_close+0xfc>
  402890:	00000000 	nop
		return 0;
  402894:	00001025 	move	v0,zero
  402898:	1000001f 	b	402918 <file_close+0x174>
  40289c:	00000000 	nop
	}
	for (i = 0; i < size; i += PTMAP) {
  4028a0:	afc00010 	sw	zero,16(s8)
  4028a4:	10000016 	b	402900 <file_close+0x15c>
  4028a8:	00000000 	nop
		if ((r = syscall_mem_unmap(0, (void *)(va + i))) < 0) {
  4028ac:	8fc30020 	lw	v1,32(s8)
  4028b0:	8fc20010 	lw	v0,16(s8)
  4028b4:	00621021 	addu	v0,v1,v0
  4028b8:	00402825 	move	a1,v0
  4028bc:	00002025 	move	a0,zero
  4028c0:	0c100517 	jal	40145c <syscall_mem_unmap>
  4028c4:	00000000 	nop
  4028c8:	afc20024 	sw	v0,36(s8)
  4028cc:	8fc20024 	lw	v0,36(s8)
  4028d0:	04410008 	bgez	v0,4028f4 <file_close+0x150>
  4028d4:	00000000 	nop
			debugf("cannont unmap the file\n");
  4028d8:	3c020040 	lui	v0,0x40
  4028dc:	2444612c 	addiu	a0,v0,24876
  4028e0:	0c100141 	jal	400504 <debugf>
  4028e4:	00000000 	nop
			return r;
  4028e8:	8fc20024 	lw	v0,36(s8)
  4028ec:	1000000a 	b	402918 <file_close+0x174>
  4028f0:	00000000 	nop
	for (i = 0; i < size; i += PTMAP) {
  4028f4:	8fc20010 	lw	v0,16(s8)
  4028f8:	24421000 	addiu	v0,v0,4096
  4028fc:	afc20010 	sw	v0,16(s8)
  402900:	8fc30010 	lw	v1,16(s8)
  402904:	8fc2001c 	lw	v0,28(s8)
  402908:	0062102b 	sltu	v0,v1,v0
  40290c:	1440ffe7 	bnez	v0,4028ac <file_close+0x108>
  402910:	00000000 	nop
		}
	}
	return 0;
  402914:	00001025 	move	v0,zero
}
  402918:	03c0e825 	move	sp,s8
  40291c:	8fbf002c 	lw	ra,44(sp)
  402920:	8fbe0028 	lw	s8,40(sp)
  402924:	27bd0030 	addiu	sp,sp,48
  402928:	03e00008 	jr	ra
  40292c:	00000000 	nop

00402930 <file_read>:

// Overview:
//  Read 'n' bytes from 'fd' at the current seek position into 'buf'. Since files
//  are memory-mapped, this amounts to a memcpy() surrounded by a little red
//  tape to handle the file size and seek pointer.
static int file_read(struct Fd *fd, void *buf, u_int n, u_int offset) {
  402930:	27bdffe0 	addiu	sp,sp,-32
  402934:	afbf001c 	sw	ra,28(sp)
  402938:	afbe0018 	sw	s8,24(sp)
  40293c:	03a0f025 	move	s8,sp
  402940:	afc40020 	sw	a0,32(s8)
  402944:	afc50024 	sw	a1,36(s8)
  402948:	afc60028 	sw	a2,40(s8)
  40294c:	afc7002c 	sw	a3,44(s8)
	u_int size;
	struct Filefd *f;
	f = (struct Filefd *)fd;
  402950:	8fc20020 	lw	v0,32(s8)
  402954:	afc20010 	sw	v0,16(s8)

	// Avoid reading past the end of file.
	size = f->f_file.f_size;
  402958:	8fc20010 	lw	v0,16(s8)
  40295c:	8c420090 	lw	v0,144(v0)
  402960:	afc20014 	sw	v0,20(s8)

	if (offset > size) {
  402964:	8fc3002c 	lw	v1,44(s8)
  402968:	8fc20014 	lw	v0,20(s8)
  40296c:	0043102b 	sltu	v0,v0,v1
  402970:	10400004 	beqz	v0,402984 <file_read+0x54>
  402974:	00000000 	nop
		return 0;
  402978:	00001025 	move	v0,zero
  40297c:	10000018 	b	4029e0 <file_read+0xb0>
  402980:	00000000 	nop
	}

	if (offset + n > size) {
  402984:	8fc3002c 	lw	v1,44(s8)
  402988:	8fc20028 	lw	v0,40(s8)
  40298c:	00621021 	addu	v0,v1,v0
  402990:	8fc30014 	lw	v1,20(s8)
  402994:	0062102b 	sltu	v0,v1,v0
  402998:	10400005 	beqz	v0,4029b0 <file_read+0x80>
  40299c:	00000000 	nop
		n = size - offset;
  4029a0:	8fc30014 	lw	v1,20(s8)
  4029a4:	8fc2002c 	lw	v0,44(s8)
  4029a8:	00621023 	subu	v0,v1,v0
  4029ac:	afc20028 	sw	v0,40(s8)
	}

	memcpy(buf, (char *)fd2data(fd) + offset, n);
  4029b0:	8fc40020 	lw	a0,32(s8)
  4029b4:	0c100723 	jal	401c8c <fd2data>
  4029b8:	00000000 	nop
  4029bc:	00401825 	move	v1,v0
  4029c0:	8fc2002c 	lw	v0,44(s8)
  4029c4:	00621021 	addu	v0,v1,v0
  4029c8:	8fc60028 	lw	a2,40(s8)
  4029cc:	00402825 	move	a1,v0
  4029d0:	8fc40024 	lw	a0,36(s8)
  4029d4:	0c101650 	jal	405940 <memcpy>
  4029d8:	00000000 	nop
	return n;
  4029dc:	8fc20028 	lw	v0,40(s8)
}
  4029e0:	03c0e825 	move	sp,s8
  4029e4:	8fbf001c 	lw	ra,28(sp)
  4029e8:	8fbe0018 	lw	s8,24(sp)
  4029ec:	27bd0020 	addiu	sp,sp,32
  4029f0:	03e00008 	jr	ra
  4029f4:	00000000 	nop

004029f8 <read_map>:

// Overview:
//  Find the virtual address of the page that maps the file block
//  starting at 'offset'.
int read_map(int fdnum, u_int offset, void **blk) {
  4029f8:	27bdffd8 	addiu	sp,sp,-40
  4029fc:	afbf0024 	sw	ra,36(sp)
  402a00:	afbe0020 	sw	s8,32(sp)
  402a04:	03a0f025 	move	s8,sp
  402a08:	afc40028 	sw	a0,40(s8)
  402a0c:	afc5002c 	sw	a1,44(s8)
  402a10:	afc60030 	sw	a2,48(s8)
	int r;
	void *va;
	struct Fd *fd;

	if ((r = fd_lookup(fdnum, &fd)) < 0) {
  402a14:	27c20018 	addiu	v0,s8,24
  402a18:	00402825 	move	a1,v0
  402a1c:	8fc40028 	lw	a0,40(s8)
  402a20:	0c1006fc 	jal	401bf0 <fd_lookup>
  402a24:	00000000 	nop
  402a28:	afc20010 	sw	v0,16(s8)
  402a2c:	8fc20010 	lw	v0,16(s8)
  402a30:	04410004 	bgez	v0,402a44 <read_map+0x4c>
  402a34:	00000000 	nop
		return r;
  402a38:	8fc20010 	lw	v0,16(s8)
  402a3c:	10000034 	b	402b10 <read_map+0x118>
  402a40:	00000000 	nop
	}

	if (fd->fd_dev_id != devfile.dev_id) {
  402a44:	8fc20018 	lw	v0,24(s8)
  402a48:	8c420000 	lw	v0,0(v0)
  402a4c:	3c030040 	lui	v1,0x40
  402a50:	8c637010 	lw	v1,28688(v1)
  402a54:	10430004 	beq	v0,v1,402a68 <read_map+0x70>
  402a58:	00000000 	nop
		return -E_INVAL;
  402a5c:	2402fffd 	li	v0,-3
  402a60:	1000002b 	b	402b10 <read_map+0x118>
  402a64:	00000000 	nop
	}

	va = fd2data(fd) + offset;
  402a68:	8fc20018 	lw	v0,24(s8)
  402a6c:	00402025 	move	a0,v0
  402a70:	0c100723 	jal	401c8c <fd2data>
  402a74:	00000000 	nop
  402a78:	00401825 	move	v1,v0
  402a7c:	8fc2002c 	lw	v0,44(s8)
  402a80:	00621021 	addu	v0,v1,v0
  402a84:	afc20014 	sw	v0,20(s8)

	if (offset >= MAXFILESIZE) {
  402a88:	8fc3002c 	lw	v1,44(s8)
  402a8c:	3c020040 	lui	v0,0x40
  402a90:	0062102b 	sltu	v0,v1,v0
  402a94:	14400004 	bnez	v0,402aa8 <read_map+0xb0>
  402a98:	00000000 	nop
		return -E_NO_DISK;
  402a9c:	2402fff8 	li	v0,-8
  402aa0:	1000001b 	b	402b10 <read_map+0x118>
  402aa4:	00000000 	nop
	}

	if (!(vpd[PDX(va)] & PTE_V) || !(vpt[VPN(va)] & PTE_V)) {
  402aa8:	8fc20014 	lw	v0,20(s8)
  402aac:	00021582 	srl	v0,v0,0x16
  402ab0:	00021880 	sll	v1,v0,0x2
  402ab4:	3c027fdf 	lui	v0,0x7fdf
  402ab8:	3442f000 	ori	v0,v0,0xf000
  402abc:	00621021 	addu	v0,v1,v0
  402ac0:	8c420000 	lw	v0,0(v0)
  402ac4:	30420080 	andi	v0,v0,0x80
  402ac8:	1040000a 	beqz	v0,402af4 <read_map+0xfc>
  402acc:	00000000 	nop
  402ad0:	8fc20014 	lw	v0,20(s8)
  402ad4:	00021302 	srl	v0,v0,0xc
  402ad8:	00021880 	sll	v1,v0,0x2
  402adc:	3c027fc0 	lui	v0,0x7fc0
  402ae0:	00621021 	addu	v0,v1,v0
  402ae4:	8c420000 	lw	v0,0(v0)
  402ae8:	30420080 	andi	v0,v0,0x80
  402aec:	14400004 	bnez	v0,402b00 <read_map+0x108>
  402af0:	00000000 	nop
		return -E_NO_DISK;
  402af4:	2402fff8 	li	v0,-8
  402af8:	10000005 	b	402b10 <read_map+0x118>
  402afc:	00000000 	nop
	}

	*blk = (void *)va;
  402b00:	8fc20030 	lw	v0,48(s8)
  402b04:	8fc30014 	lw	v1,20(s8)
  402b08:	ac430000 	sw	v1,0(v0)
	return 0;
  402b0c:	00001025 	move	v0,zero
}
  402b10:	03c0e825 	move	sp,s8
  402b14:	8fbf0024 	lw	ra,36(sp)
  402b18:	8fbe0020 	lw	s8,32(sp)
  402b1c:	27bd0028 	addiu	sp,sp,40
  402b20:	03e00008 	jr	ra
  402b24:	00000000 	nop

00402b28 <file_write>:

// Overview:
//  Write 'n' bytes from 'buf' to 'fd' at the current seek position.
static int file_write(struct Fd *fd, const void *buf, u_int n, u_int offset) {
  402b28:	27bdffd8 	addiu	sp,sp,-40
  402b2c:	afbf0024 	sw	ra,36(sp)
  402b30:	afbe0020 	sw	s8,32(sp)
  402b34:	03a0f025 	move	s8,sp
  402b38:	afc40028 	sw	a0,40(s8)
  402b3c:	afc5002c 	sw	a1,44(s8)
  402b40:	afc60030 	sw	a2,48(s8)
  402b44:	afc70034 	sw	a3,52(s8)
	int r;
	u_int tot;
	struct Filefd *f;

	f = (struct Filefd *)fd;
  402b48:	8fc20028 	lw	v0,40(s8)
  402b4c:	afc20010 	sw	v0,16(s8)

	// Don't write more than the maximum file size.
	tot = offset + n;
  402b50:	8fc30034 	lw	v1,52(s8)
  402b54:	8fc20030 	lw	v0,48(s8)
  402b58:	00621021 	addu	v0,v1,v0
  402b5c:	afc20014 	sw	v0,20(s8)

	if (tot > MAXFILESIZE) {
  402b60:	8fc30014 	lw	v1,20(s8)
  402b64:	3c020040 	lui	v0,0x40
  402b68:	34420001 	ori	v0,v0,0x1
  402b6c:	0062102b 	sltu	v0,v1,v0
  402b70:	14400004 	bnez	v0,402b84 <file_write+0x5c>
  402b74:	00000000 	nop
		return -E_NO_DISK;
  402b78:	2402fff8 	li	v0,-8
  402b7c:	10000021 	b	402c04 <file_write+0xdc>
  402b80:	00000000 	nop
	}
	// Increase the file's size if necessary
	if (tot > f->f_file.f_size) {
  402b84:	8fc20010 	lw	v0,16(s8)
  402b88:	8c420090 	lw	v0,144(v0)
  402b8c:	8fc30014 	lw	v1,20(s8)
  402b90:	0043102b 	sltu	v0,v0,v1
  402b94:	1040000f 	beqz	v0,402bd4 <file_write+0xac>
  402b98:	00000000 	nop
		if ((r = ftruncate(fd2num(fd), tot)) < 0) {
  402b9c:	8fc40028 	lw	a0,40(s8)
  402ba0:	0c100733 	jal	401ccc <fd2num>
  402ba4:	00000000 	nop
  402ba8:	8fc50014 	lw	a1,20(s8)
  402bac:	00402025 	move	a0,v0
  402bb0:	0c100b29 	jal	402ca4 <ftruncate>
  402bb4:	00000000 	nop
  402bb8:	afc20018 	sw	v0,24(s8)
  402bbc:	8fc20018 	lw	v0,24(s8)
  402bc0:	04410004 	bgez	v0,402bd4 <file_write+0xac>
  402bc4:	00000000 	nop
			return r;
  402bc8:	8fc20018 	lw	v0,24(s8)
  402bcc:	1000000d 	b	402c04 <file_write+0xdc>
  402bd0:	00000000 	nop
		}
	}

	// Write the data
	memcpy((char *)fd2data(fd) + offset, buf, n);
  402bd4:	8fc40028 	lw	a0,40(s8)
  402bd8:	0c100723 	jal	401c8c <fd2data>
  402bdc:	00000000 	nop
  402be0:	00401825 	move	v1,v0
  402be4:	8fc20034 	lw	v0,52(s8)
  402be8:	00621021 	addu	v0,v1,v0
  402bec:	8fc60030 	lw	a2,48(s8)
  402bf0:	8fc5002c 	lw	a1,44(s8)
  402bf4:	00402025 	move	a0,v0
  402bf8:	0c101650 	jal	405940 <memcpy>
  402bfc:	00000000 	nop
	return n;
  402c00:	8fc20030 	lw	v0,48(s8)
}
  402c04:	03c0e825 	move	sp,s8
  402c08:	8fbf0024 	lw	ra,36(sp)
  402c0c:	8fbe0020 	lw	s8,32(sp)
  402c10:	27bd0028 	addiu	sp,sp,40
  402c14:	03e00008 	jr	ra
  402c18:	00000000 	nop

00402c1c <file_stat>:

static int file_stat(struct Fd *fd, struct Stat *st) {
  402c1c:	27bdffe0 	addiu	sp,sp,-32
  402c20:	afbf001c 	sw	ra,28(sp)
  402c24:	afbe0018 	sw	s8,24(sp)
  402c28:	03a0f025 	move	s8,sp
  402c2c:	afc40020 	sw	a0,32(s8)
  402c30:	afc50024 	sw	a1,36(s8)
	struct Filefd *f;

	f = (struct Filefd *)fd;
  402c34:	8fc20020 	lw	v0,32(s8)
  402c38:	afc20010 	sw	v0,16(s8)

	strcpy(st->st_name, f->f_file.f_name);
  402c3c:	8fc30024 	lw	v1,36(s8)
  402c40:	8fc20010 	lw	v0,16(s8)
  402c44:	24420010 	addiu	v0,v0,16
  402c48:	00402825 	move	a1,v0
  402c4c:	00602025 	move	a0,v1
  402c50:	0c10170c 	jal	405c30 <strcpy>
  402c54:	00000000 	nop
	st->st_size = f->f_file.f_size;
  402c58:	8fc20010 	lw	v0,16(s8)
  402c5c:	8c430090 	lw	v1,144(v0)
  402c60:	8fc20024 	lw	v0,36(s8)
  402c64:	ac430080 	sw	v1,128(v0)
	st->st_isdir = f->f_file.f_type == FTYPE_DIR;
  402c68:	8fc20010 	lw	v0,16(s8)
  402c6c:	8c420094 	lw	v0,148(v0)
  402c70:	38420001 	xori	v0,v0,0x1
  402c74:	2c420001 	sltiu	v0,v0,1
  402c78:	304200ff 	andi	v0,v0,0xff
  402c7c:	00401825 	move	v1,v0
  402c80:	8fc20024 	lw	v0,36(s8)
  402c84:	ac430084 	sw	v1,132(v0)
	return 0;
  402c88:	00001025 	move	v0,zero
}
  402c8c:	03c0e825 	move	sp,s8
  402c90:	8fbf001c 	lw	ra,28(sp)
  402c94:	8fbe0018 	lw	s8,24(sp)
  402c98:	27bd0020 	addiu	sp,sp,32
  402c9c:	03e00008 	jr	ra
  402ca0:	00000000 	nop

00402ca4 <ftruncate>:

// Overview:
//  Truncate or extend an open file to 'size' bytes
int ftruncate(int fdnum, u_int size) {
  402ca4:	27bdffc0 	addiu	sp,sp,-64
  402ca8:	afbf003c 	sw	ra,60(sp)
  402cac:	afbe0038 	sw	s8,56(sp)
  402cb0:	03a0f025 	move	s8,sp
  402cb4:	afc40040 	sw	a0,64(s8)
  402cb8:	afc50044 	sw	a1,68(s8)
	int i, r;
	struct Fd *fd;
	struct Filefd *f;
	u_int oldsize, fileid;

	if (size > MAXFILESIZE) {
  402cbc:	8fc30044 	lw	v1,68(s8)
  402cc0:	3c020040 	lui	v0,0x40
  402cc4:	34420001 	ori	v0,v0,0x1
  402cc8:	0062102b 	sltu	v0,v1,v0
  402ccc:	14400004 	bnez	v0,402ce0 <ftruncate+0x3c>
  402cd0:	00000000 	nop
		return -E_NO_DISK;
  402cd4:	2402fff8 	li	v0,-8
  402cd8:	1000008b 	b	402f08 <ftruncate+0x264>
  402cdc:	00000000 	nop
	}

	if ((r = fd_lookup(fdnum, &fd)) < 0) {
  402ce0:	27c20034 	addiu	v0,s8,52
  402ce4:	00402825 	move	a1,v0
  402ce8:	8fc40040 	lw	a0,64(s8)
  402cec:	0c1006fc 	jal	401bf0 <fd_lookup>
  402cf0:	00000000 	nop
  402cf4:	afc2001c 	sw	v0,28(s8)
  402cf8:	8fc2001c 	lw	v0,28(s8)
  402cfc:	04410004 	bgez	v0,402d10 <ftruncate+0x6c>
  402d00:	00000000 	nop
		return r;
  402d04:	8fc2001c 	lw	v0,28(s8)
  402d08:	1000007f 	b	402f08 <ftruncate+0x264>
  402d0c:	00000000 	nop
	}

	if (fd->fd_dev_id != devfile.dev_id) {
  402d10:	8fc20034 	lw	v0,52(s8)
  402d14:	8c420000 	lw	v0,0(v0)
  402d18:	3c030040 	lui	v1,0x40
  402d1c:	8c637010 	lw	v1,28688(v1)
  402d20:	10430004 	beq	v0,v1,402d34 <ftruncate+0x90>
  402d24:	00000000 	nop
		return -E_INVAL;
  402d28:	2402fffd 	li	v0,-3
  402d2c:	10000076 	b	402f08 <ftruncate+0x264>
  402d30:	00000000 	nop
	}

	f = (struct Filefd *)fd;
  402d34:	8fc20034 	lw	v0,52(s8)
  402d38:	afc20020 	sw	v0,32(s8)
	fileid = f->f_fileid;
  402d3c:	8fc20020 	lw	v0,32(s8)
  402d40:	8c42000c 	lw	v0,12(v0)
  402d44:	afc20024 	sw	v0,36(s8)
	oldsize = f->f_file.f_size;
  402d48:	8fc20020 	lw	v0,32(s8)
  402d4c:	8c420090 	lw	v0,144(v0)
  402d50:	afc20028 	sw	v0,40(s8)
	f->f_file.f_size = size;
  402d54:	8fc20020 	lw	v0,32(s8)
  402d58:	8fc30044 	lw	v1,68(s8)
  402d5c:	ac430090 	sw	v1,144(v0)

	if ((r = fsipc_set_size(fileid, size)) < 0) {
  402d60:	8fc50044 	lw	a1,68(s8)
  402d64:	8fc40024 	lw	a0,36(s8)
  402d68:	0c100c5f 	jal	40317c <fsipc_set_size>
  402d6c:	00000000 	nop
  402d70:	afc2001c 	sw	v0,28(s8)
  402d74:	8fc2001c 	lw	v0,28(s8)
  402d78:	04410004 	bgez	v0,402d8c <ftruncate+0xe8>
  402d7c:	00000000 	nop
		return r;
  402d80:	8fc2001c 	lw	v0,28(s8)
  402d84:	10000060 	b	402f08 <ftruncate+0x264>
  402d88:	00000000 	nop
	}

	void *va = fd2data(fd);
  402d8c:	8fc20034 	lw	v0,52(s8)
  402d90:	00402025 	move	a0,v0
  402d94:	0c100723 	jal	401c8c <fd2data>
  402d98:	00000000 	nop
  402d9c:	afc2002c 	sw	v0,44(s8)

	// Map any new pages needed if extending the file
	for (i = ROUND(oldsize, PTMAP); i < ROUND(size, PTMAP); i += PTMAP) {
  402da0:	8fc20028 	lw	v0,40(s8)
  402da4:	24420fff 	addiu	v0,v0,4095
  402da8:	00401825 	move	v1,v0
  402dac:	2402f000 	li	v0,-4096
  402db0:	00621024 	and	v0,v1,v0
  402db4:	afc20018 	sw	v0,24(s8)
  402db8:	1000001f 	b	402e38 <ftruncate+0x194>
  402dbc:	00000000 	nop
		if ((r = fsipc_map(fileid, i, va + i)) < 0) {
  402dc0:	8fc40018 	lw	a0,24(s8)
  402dc4:	8fc20018 	lw	v0,24(s8)
  402dc8:	8fc3002c 	lw	v1,44(s8)
  402dcc:	00621021 	addu	v0,v1,v0
  402dd0:	00403025 	move	a2,v0
  402dd4:	00802825 	move	a1,a0
  402dd8:	8fc40024 	lw	a0,36(s8)
  402ddc:	0c100c29 	jal	4030a4 <fsipc_map>
  402de0:	00000000 	nop
  402de4:	afc2001c 	sw	v0,28(s8)
  402de8:	8fc2001c 	lw	v0,28(s8)
  402dec:	0441000f 	bgez	v0,402e2c <ftruncate+0x188>
  402df0:	00000000 	nop
			int _r = fsipc_set_size(fileid, oldsize);
  402df4:	8fc50028 	lw	a1,40(s8)
  402df8:	8fc40024 	lw	a0,36(s8)
  402dfc:	0c100c5f 	jal	40317c <fsipc_set_size>
  402e00:	00000000 	nop
  402e04:	afc20030 	sw	v0,48(s8)
			if (_r < 0) {
  402e08:	8fc20030 	lw	v0,48(s8)
  402e0c:	04410004 	bgez	v0,402e20 <ftruncate+0x17c>
  402e10:	00000000 	nop
				return _r;
  402e14:	8fc20030 	lw	v0,48(s8)
  402e18:	1000003b 	b	402f08 <ftruncate+0x264>
  402e1c:	00000000 	nop
			}
			return r;
  402e20:	8fc2001c 	lw	v0,28(s8)
  402e24:	10000038 	b	402f08 <ftruncate+0x264>
  402e28:	00000000 	nop
	for (i = ROUND(oldsize, PTMAP); i < ROUND(size, PTMAP); i += PTMAP) {
  402e2c:	8fc20018 	lw	v0,24(s8)
  402e30:	24421000 	addiu	v0,v0,4096
  402e34:	afc20018 	sw	v0,24(s8)
  402e38:	8fc20044 	lw	v0,68(s8)
  402e3c:	24430fff 	addiu	v1,v0,4095
  402e40:	2402f000 	li	v0,-4096
  402e44:	00621824 	and	v1,v1,v0
  402e48:	8fc20018 	lw	v0,24(s8)
  402e4c:	0043102b 	sltu	v0,v0,v1
  402e50:	1440ffdb 	bnez	v0,402dc0 <ftruncate+0x11c>
  402e54:	00000000 	nop
		}
	}

	// Unmap pages if truncating the file
	for (i = ROUND(size, PTMAP); i < ROUND(oldsize, PTMAP); i += PTMAP) {
  402e58:	8fc20044 	lw	v0,68(s8)
  402e5c:	24420fff 	addiu	v0,v0,4095
  402e60:	00401825 	move	v1,v0
  402e64:	2402f000 	li	v0,-4096
  402e68:	00621024 	and	v0,v1,v0
  402e6c:	afc20018 	sw	v0,24(s8)
  402e70:	1000001c 	b	402ee4 <ftruncate+0x240>
  402e74:	00000000 	nop
		if ((r = syscall_mem_unmap(0, (void *)(va + i))) < 0) {
  402e78:	8fc20018 	lw	v0,24(s8)
  402e7c:	8fc3002c 	lw	v1,44(s8)
  402e80:	00621021 	addu	v0,v1,v0
  402e84:	00402825 	move	a1,v0
  402e88:	00002025 	move	a0,zero
  402e8c:	0c100517 	jal	40145c <syscall_mem_unmap>
  402e90:	00000000 	nop
  402e94:	afc2001c 	sw	v0,28(s8)
  402e98:	8fc2001c 	lw	v0,28(s8)
  402e9c:	0441000e 	bgez	v0,402ed8 <ftruncate+0x234>
  402ea0:	00000000 	nop
			user_panic("ftruncate: syscall_mem_unmap %08x: %d\n", va + i, r);
  402ea4:	8fc20018 	lw	v0,24(s8)
  402ea8:	8fc3002c 	lw	v1,44(s8)
  402eac:	00621821 	addu	v1,v1,v0
  402eb0:	8fc2001c 	lw	v0,28(s8)
  402eb4:	afa20010 	sw	v0,16(sp)
  402eb8:	00603825 	move	a3,v1
  402ebc:	3c020040 	lui	v0,0x40
  402ec0:	24466144 	addiu	a2,v0,24900
  402ec4:	240500f1 	li	a1,241
  402ec8:	3c020040 	lui	v0,0x40
  402ecc:	2444616c 	addiu	a0,v0,24940
  402ed0:	0c100157 	jal	40055c <_user_panic>
  402ed4:	00000000 	nop
	for (i = ROUND(size, PTMAP); i < ROUND(oldsize, PTMAP); i += PTMAP) {
  402ed8:	8fc20018 	lw	v0,24(s8)
  402edc:	24421000 	addiu	v0,v0,4096
  402ee0:	afc20018 	sw	v0,24(s8)
  402ee4:	8fc20028 	lw	v0,40(s8)
  402ee8:	24430fff 	addiu	v1,v0,4095
  402eec:	2402f000 	li	v0,-4096
  402ef0:	00621824 	and	v1,v1,v0
  402ef4:	8fc20018 	lw	v0,24(s8)
  402ef8:	0043102b 	sltu	v0,v0,v1
  402efc:	1440ffde 	bnez	v0,402e78 <ftruncate+0x1d4>
  402f00:	00000000 	nop
		}
	}

	return 0;
  402f04:	00001025 	move	v0,zero
}
  402f08:	03c0e825 	move	sp,s8
  402f0c:	8fbf003c 	lw	ra,60(sp)
  402f10:	8fbe0038 	lw	s8,56(sp)
  402f14:	27bd0040 	addiu	sp,sp,64
  402f18:	03e00008 	jr	ra
  402f1c:	00000000 	nop

00402f20 <remove>:

// Overview:
//  Delete a file or directory.
int remove(const char *path) {
  402f20:	27bdffe8 	addiu	sp,sp,-24
  402f24:	afbf0014 	sw	ra,20(sp)
  402f28:	afbe0010 	sw	s8,16(sp)
  402f2c:	03a0f025 	move	s8,sp
  402f30:	afc40018 	sw	a0,24(s8)
	// Call fsipc_remove.

	/* Exercise 5.13: Your code here. */
	return fsipc_remove(path);
  402f34:	8fc40018 	lw	a0,24(s8)
  402f38:	0c100cac 	jal	4032b0 <fsipc_remove>
  402f3c:	00000000 	nop
}
  402f40:	03c0e825 	move	sp,s8
  402f44:	8fbf0014 	lw	ra,20(sp)
  402f48:	8fbe0010 	lw	s8,16(sp)
  402f4c:	27bd0018 	addiu	sp,sp,24
  402f50:	03e00008 	jr	ra
  402f54:	00000000 	nop

00402f58 <sync>:

// Overview:
//  Synchronize disk with buffer cache
int sync(void) {
  402f58:	27bdffe8 	addiu	sp,sp,-24
  402f5c:	afbf0014 	sw	ra,20(sp)
  402f60:	afbe0010 	sw	s8,16(sp)
  402f64:	03a0f025 	move	s8,sp
	return fsipc_sync();
  402f68:	0c100cd3 	jal	40334c <fsipc_sync>
  402f6c:	00000000 	nop
}
  402f70:	03c0e825 	move	sp,s8
  402f74:	8fbf0014 	lw	ra,20(sp)
  402f78:	8fbe0010 	lw	s8,16(sp)
  402f7c:	27bd0018 	addiu	sp,sp,24
  402f80:	03e00008 	jr	ra
  402f84:	00000000 	nop
	...

00402f90 <fsipc>:
//  @*perm: permissions of received page.
//
// Returns:
//  0 if successful,
//  < 0 on failure.
static int fsipc(u_int type, void *fsreq, void *dstva, u_int *perm) {
  402f90:	27bdffe0 	addiu	sp,sp,-32
  402f94:	afbf001c 	sw	ra,28(sp)
  402f98:	afbe0018 	sw	s8,24(sp)
  402f9c:	03a0f025 	move	s8,sp
  402fa0:	afc40020 	sw	a0,32(s8)
  402fa4:	afc50024 	sw	a1,36(s8)
  402fa8:	afc60028 	sw	a2,40(s8)
  402fac:	afc7002c 	sw	a3,44(s8)
	u_int whom;
	// Our file system server must be the 2nd env.
	ipc_send(envs[1].env_id, type, fsreq, PTE_D);
  402fb0:	3c027f40 	lui	v0,0x7f40
  402fb4:	344201f8 	ori	v0,v0,0x1f8
  402fb8:	8c4200a0 	lw	v0,160(v0)
  402fbc:	24070100 	li	a3,256
  402fc0:	8fc60024 	lw	a2,36(s8)
  402fc4:	8fc50020 	lw	a1,32(s8)
  402fc8:	00402025 	move	a0,v0
  402fcc:	0c100610 	jal	401840 <ipc_send>
  402fd0:	00000000 	nop
	return ipc_recv(&whom, dstva, perm);
  402fd4:	8fc6002c 	lw	a2,44(s8)
  402fd8:	8fc50028 	lw	a1,40(s8)
  402fdc:	27c20010 	addiu	v0,s8,16
  402fe0:	00402025 	move	a0,v0
  402fe4:	0c10063a 	jal	4018e8 <ipc_recv>
  402fe8:	00000000 	nop
}
  402fec:	03c0e825 	move	sp,s8
  402ff0:	8fbf001c 	lw	ra,28(sp)
  402ff4:	8fbe0018 	lw	s8,24(sp)
  402ff8:	27bd0020 	addiu	sp,sp,32
  402ffc:	03e00008 	jr	ra
  403000:	00000000 	nop

00403004 <fsipc_open>:
//  omode in request, sets *fileid and *size from reply.
//
// Returns:
//  0 on success,
//  < 0 on failure.
int fsipc_open(const char *path, u_int omode, struct Fd *fd) {
  403004:	27bdffe0 	addiu	sp,sp,-32
  403008:	afbf001c 	sw	ra,28(sp)
  40300c:	afbe0018 	sw	s8,24(sp)
  403010:	03a0f025 	move	s8,sp
  403014:	afc40020 	sw	a0,32(s8)
  403018:	afc50024 	sw	a1,36(s8)
  40301c:	afc60028 	sw	a2,40(s8)
	u_int perm;
	struct Fsreq_open *req;

	req = (struct Fsreq_open *)fsipcbuf;
  403020:	3c020041 	lui	v0,0x41
  403024:	24429000 	addiu	v0,v0,-28672
  403028:	afc20010 	sw	v0,16(s8)

	// The path is too long.
	if (strlen(path) >= MAXPATHLEN) {
  40302c:	8fc40020 	lw	a0,32(s8)
  403030:	0c1016f5 	jal	405bd4 <strlen>
  403034:	00000000 	nop
  403038:	2c420400 	sltiu	v0,v0,1024
  40303c:	14400004 	bnez	v0,403050 <fsipc_open+0x4c>
  403040:	00000000 	nop
		return -E_BAD_PATH;
  403044:	2402fff5 	li	v0,-11
  403048:	10000010 	b	40308c <fsipc_open+0x88>
  40304c:	00000000 	nop
	}

	strcpy((char *)req->req_path, path);
  403050:	8fc20010 	lw	v0,16(s8)
  403054:	8fc50020 	lw	a1,32(s8)
  403058:	00402025 	move	a0,v0
  40305c:	0c10170c 	jal	405c30 <strcpy>
  403060:	00000000 	nop
	req->req_omode = omode;
  403064:	8fc20010 	lw	v0,16(s8)
  403068:	8fc30024 	lw	v1,36(s8)
  40306c:	ac430400 	sw	v1,1024(v0)
	return fsipc(FSREQ_OPEN, req, fd, &perm);
  403070:	27c20014 	addiu	v0,s8,20
  403074:	00403825 	move	a3,v0
  403078:	8fc60028 	lw	a2,40(s8)
  40307c:	8fc50010 	lw	a1,16(s8)
  403080:	00002025 	move	a0,zero
  403084:	0c100be4 	jal	402f90 <fsipc>
  403088:	00000000 	nop
}
  40308c:	03c0e825 	move	sp,s8
  403090:	8fbf001c 	lw	ra,28(sp)
  403094:	8fbe0018 	lw	s8,24(sp)
  403098:	27bd0020 	addiu	sp,sp,32
  40309c:	03e00008 	jr	ra
  4030a0:	00000000 	nop

004030a4 <fsipc_map>:
//  us back a mapping for a page containing that block.
//
// Returns:
//  0 on success,
//  < 0 on failure.
int fsipc_map(u_int fileid, u_int offset, void *dstva) {
  4030a4:	27bdffd0 	addiu	sp,sp,-48
  4030a8:	afbf002c 	sw	ra,44(sp)
  4030ac:	afbe0028 	sw	s8,40(sp)
  4030b0:	03a0f025 	move	s8,sp
  4030b4:	afc40030 	sw	a0,48(s8)
  4030b8:	afc50034 	sw	a1,52(s8)
  4030bc:	afc60038 	sw	a2,56(s8)
	int r;
	u_int perm;
	struct Fsreq_map *req;

	req = (struct Fsreq_map *)fsipcbuf;
  4030c0:	3c020041 	lui	v0,0x41
  4030c4:	24429000 	addiu	v0,v0,-28672
  4030c8:	afc20018 	sw	v0,24(s8)
	req->req_fileid = fileid;
  4030cc:	8fc30030 	lw	v1,48(s8)
  4030d0:	8fc20018 	lw	v0,24(s8)
  4030d4:	ac430000 	sw	v1,0(v0)
	req->req_offset = offset;
  4030d8:	8fc20018 	lw	v0,24(s8)
  4030dc:	8fc30034 	lw	v1,52(s8)
  4030e0:	ac430004 	sw	v1,4(v0)

	if ((r = fsipc(FSREQ_MAP, req, dstva, &perm)) < 0) {
  4030e4:	27c20020 	addiu	v0,s8,32
  4030e8:	00403825 	move	a3,v0
  4030ec:	8fc60038 	lw	a2,56(s8)
  4030f0:	8fc50018 	lw	a1,24(s8)
  4030f4:	24040001 	li	a0,1
  4030f8:	0c100be4 	jal	402f90 <fsipc>
  4030fc:	00000000 	nop
  403100:	afc2001c 	sw	v0,28(s8)
  403104:	8fc2001c 	lw	v0,28(s8)
  403108:	04410004 	bgez	v0,40311c <fsipc_map+0x78>
  40310c:	00000000 	nop
		return r;
  403110:	8fc2001c 	lw	v0,28(s8)
  403114:	10000013 	b	403164 <fsipc_map+0xc0>
  403118:	00000000 	nop
	}

	if ((perm & ~(PTE_D | PTE_LIBRARY)) != (PTE_V)) {
  40311c:	8fc30020 	lw	v1,32(s8)
  403120:	2402fefd 	li	v0,-259
  403124:	00621824 	and	v1,v1,v0
  403128:	24020080 	li	v0,128
  40312c:	1062000c 	beq	v1,v0,403160 <fsipc_map+0xbc>
  403130:	00000000 	nop
		user_panic("fsipc_map: unexpected permissions %08x for dstva %08x", perm, dstva);
  403134:	8fc30020 	lw	v1,32(s8)
  403138:	8fc20038 	lw	v0,56(s8)
  40313c:	afa20010 	sw	v0,16(sp)
  403140:	00603825 	move	a3,v1
  403144:	3c020040 	lui	v0,0x40
  403148:	24466180 	addiu	a2,v0,24960
  40314c:	2405004a 	li	a1,74
  403150:	3c020040 	lui	v0,0x40
  403154:	244461b8 	addiu	a0,v0,25016
  403158:	0c100157 	jal	40055c <_user_panic>
  40315c:	00000000 	nop
	}

	return 0;
  403160:	00001025 	move	v0,zero
}
  403164:	03c0e825 	move	sp,s8
  403168:	8fbf002c 	lw	ra,44(sp)
  40316c:	8fbe0028 	lw	s8,40(sp)
  403170:	27bd0030 	addiu	sp,sp,48
  403174:	03e00008 	jr	ra
  403178:	00000000 	nop

0040317c <fsipc_set_size>:

// Overview:
//  Make a set-file-size request to the file server.
int fsipc_set_size(u_int fileid, u_int size) {
  40317c:	27bdffe0 	addiu	sp,sp,-32
  403180:	afbf001c 	sw	ra,28(sp)
  403184:	afbe0018 	sw	s8,24(sp)
  403188:	03a0f025 	move	s8,sp
  40318c:	afc40020 	sw	a0,32(s8)
  403190:	afc50024 	sw	a1,36(s8)
	struct Fsreq_set_size *req;

	req = (struct Fsreq_set_size *)fsipcbuf;
  403194:	3c020041 	lui	v0,0x41
  403198:	24429000 	addiu	v0,v0,-28672
  40319c:	afc20010 	sw	v0,16(s8)
	req->req_fileid = fileid;
  4031a0:	8fc30020 	lw	v1,32(s8)
  4031a4:	8fc20010 	lw	v0,16(s8)
  4031a8:	ac430000 	sw	v1,0(v0)
	req->req_size = size;
  4031ac:	8fc20010 	lw	v0,16(s8)
  4031b0:	8fc30024 	lw	v1,36(s8)
  4031b4:	ac430004 	sw	v1,4(v0)
	return fsipc(FSREQ_SET_SIZE, req, 0, 0);
  4031b8:	00003825 	move	a3,zero
  4031bc:	00003025 	move	a2,zero
  4031c0:	8fc50010 	lw	a1,16(s8)
  4031c4:	24040002 	li	a0,2
  4031c8:	0c100be4 	jal	402f90 <fsipc>
  4031cc:	00000000 	nop
}
  4031d0:	03c0e825 	move	sp,s8
  4031d4:	8fbf001c 	lw	ra,28(sp)
  4031d8:	8fbe0018 	lw	s8,24(sp)
  4031dc:	27bd0020 	addiu	sp,sp,32
  4031e0:	03e00008 	jr	ra
  4031e4:	00000000 	nop

004031e8 <fsipc_close>:

// Overview:
//  Make a file-close request to the file server. After this the fileid is invalid.
int fsipc_close(u_int fileid) {
  4031e8:	27bdffe0 	addiu	sp,sp,-32
  4031ec:	afbf001c 	sw	ra,28(sp)
  4031f0:	afbe0018 	sw	s8,24(sp)
  4031f4:	03a0f025 	move	s8,sp
  4031f8:	afc40020 	sw	a0,32(s8)
	struct Fsreq_close *req;

	req = (struct Fsreq_close *)fsipcbuf;
  4031fc:	3c020041 	lui	v0,0x41
  403200:	24429000 	addiu	v0,v0,-28672
  403204:	afc20010 	sw	v0,16(s8)
	req->req_fileid = fileid;
  403208:	8fc30020 	lw	v1,32(s8)
  40320c:	8fc20010 	lw	v0,16(s8)
  403210:	ac430000 	sw	v1,0(v0)
	return fsipc(FSREQ_CLOSE, req, 0, 0);
  403214:	00003825 	move	a3,zero
  403218:	00003025 	move	a2,zero
  40321c:	8fc50010 	lw	a1,16(s8)
  403220:	24040003 	li	a0,3
  403224:	0c100be4 	jal	402f90 <fsipc>
  403228:	00000000 	nop
}
  40322c:	03c0e825 	move	sp,s8
  403230:	8fbf001c 	lw	ra,28(sp)
  403234:	8fbe0018 	lw	s8,24(sp)
  403238:	27bd0020 	addiu	sp,sp,32
  40323c:	03e00008 	jr	ra
  403240:	00000000 	nop

00403244 <fsipc_dirty>:

// Overview:
//  Ask the file server to mark a particular file block dirty.
int fsipc_dirty(u_int fileid, u_int offset) {
  403244:	27bdffe0 	addiu	sp,sp,-32
  403248:	afbf001c 	sw	ra,28(sp)
  40324c:	afbe0018 	sw	s8,24(sp)
  403250:	03a0f025 	move	s8,sp
  403254:	afc40020 	sw	a0,32(s8)
  403258:	afc50024 	sw	a1,36(s8)
	struct Fsreq_dirty *req;

	req = (struct Fsreq_dirty *)fsipcbuf;
  40325c:	3c020041 	lui	v0,0x41
  403260:	24429000 	addiu	v0,v0,-28672
  403264:	afc20010 	sw	v0,16(s8)
	req->req_fileid = fileid;
  403268:	8fc30020 	lw	v1,32(s8)
  40326c:	8fc20010 	lw	v0,16(s8)
  403270:	ac430000 	sw	v1,0(v0)
	req->req_offset = offset;
  403274:	8fc20010 	lw	v0,16(s8)
  403278:	8fc30024 	lw	v1,36(s8)
  40327c:	ac430004 	sw	v1,4(v0)
	return fsipc(FSREQ_DIRTY, req, 0, 0);
  403280:	00003825 	move	a3,zero
  403284:	00003025 	move	a2,zero
  403288:	8fc50010 	lw	a1,16(s8)
  40328c:	24040004 	li	a0,4
  403290:	0c100be4 	jal	402f90 <fsipc>
  403294:	00000000 	nop
}
  403298:	03c0e825 	move	sp,s8
  40329c:	8fbf001c 	lw	ra,28(sp)
  4032a0:	8fbe0018 	lw	s8,24(sp)
  4032a4:	27bd0020 	addiu	sp,sp,32
  4032a8:	03e00008 	jr	ra
  4032ac:	00000000 	nop

004032b0 <fsipc_remove>:

// Overview:
//  Ask the file server to delete a file, given its path.
int fsipc_remove(const char *path) {
  4032b0:	27bdffe0 	addiu	sp,sp,-32
  4032b4:	afbf001c 	sw	ra,28(sp)
  4032b8:	afbe0018 	sw	s8,24(sp)
  4032bc:	03a0f025 	move	s8,sp
  4032c0:	afc40020 	sw	a0,32(s8)
	// Step 1: Check the length of 'path' using 'strlen'.
	// If the length of path is 0 or larger than 'MAXPATHLEN', return -E_BAD_PATH.
	/* Exercise 5.12: Your code here. (1/3) */
	int len = strlen(path);
  4032c4:	8fc40020 	lw	a0,32(s8)
  4032c8:	0c1016f5 	jal	405bd4 <strlen>
  4032cc:	00000000 	nop
  4032d0:	afc20010 	sw	v0,16(s8)
	if(len == 0 || len > MAXPATHLEN){
  4032d4:	8fc20010 	lw	v0,16(s8)
  4032d8:	10400005 	beqz	v0,4032f0 <fsipc_remove+0x40>
  4032dc:	00000000 	nop
  4032e0:	8fc20010 	lw	v0,16(s8)
  4032e4:	28420401 	slti	v0,v0,1025
  4032e8:	14400004 	bnez	v0,4032fc <fsipc_remove+0x4c>
  4032ec:	00000000 	nop
		return -E_BAD_PATH;
  4032f0:	2402fff5 	li	v0,-11
  4032f4:	1000000f 	b	403334 <fsipc_remove+0x84>
  4032f8:	00000000 	nop
	}
	// Step 2: Use 'fsipcbuf' as a 'struct Fsreq_remove'.
	struct Fsreq_remove *req = (struct Fsreq_remove *)fsipcbuf;
  4032fc:	3c020041 	lui	v0,0x41
  403300:	24429000 	addiu	v0,v0,-28672
  403304:	afc20014 	sw	v0,20(s8)

	// Step 3: Copy 'path' into the path in 'req' using 'strcpy'.
	/* Exercise 5.12: Your code here. (2/3) */
	strcpy((char *)req->req_path, path);
  403308:	8fc20014 	lw	v0,20(s8)
  40330c:	8fc50020 	lw	a1,32(s8)
  403310:	00402025 	move	a0,v0
  403314:	0c10170c 	jal	405c30 <strcpy>
  403318:	00000000 	nop
	// Step 4: Send request to the server using 'fsipc'.
	/* Exercise 5.12: Your code here. (3/3) */
	return fsipc(FSREQ_REMOVE, req, 0, 0);
  40331c:	00003825 	move	a3,zero
  403320:	00003025 	move	a2,zero
  403324:	8fc50014 	lw	a1,20(s8)
  403328:	24040005 	li	a0,5
  40332c:	0c100be4 	jal	402f90 <fsipc>
  403330:	00000000 	nop
}
  403334:	03c0e825 	move	sp,s8
  403338:	8fbf001c 	lw	ra,28(sp)
  40333c:	8fbe0018 	lw	s8,24(sp)
  403340:	27bd0020 	addiu	sp,sp,32
  403344:	03e00008 	jr	ra
  403348:	00000000 	nop

0040334c <fsipc_sync>:

// Overview:
//  Ask the file server to update the disk by writing any dirty
//  blocks in the buffer cache.
int fsipc_sync(void) {
  40334c:	27bdffe8 	addiu	sp,sp,-24
  403350:	afbf0014 	sw	ra,20(sp)
  403354:	afbe0010 	sw	s8,16(sp)
  403358:	03a0f025 	move	s8,sp
	return fsipc(FSREQ_SYNC, fsipcbuf, 0, 0);
  40335c:	00003825 	move	a3,zero
  403360:	00003025 	move	a2,zero
  403364:	3c020041 	lui	v0,0x41
  403368:	24459000 	addiu	a1,v0,-28672
  40336c:	24040006 	li	a0,6
  403370:	0c100be4 	jal	402f90 <fsipc>
  403374:	00000000 	nop
}
  403378:	03c0e825 	move	sp,s8
  40337c:	8fbf0014 	lw	ra,20(sp)
  403380:	8fbe0010 	lw	s8,16(sp)
  403384:	27bd0018 	addiu	sp,sp,24
  403388:	03e00008 	jr	ra
  40338c:	00000000 	nop

00403390 <iscons>:
    .dev_write = cons_write,
    .dev_close = cons_close,
    .dev_stat = cons_stat,
};

int iscons(int fdnum) {
  403390:	27bdffe0 	addiu	sp,sp,-32
  403394:	afbf001c 	sw	ra,28(sp)
  403398:	afbe0018 	sw	s8,24(sp)
  40339c:	03a0f025 	move	s8,sp
  4033a0:	afc40020 	sw	a0,32(s8)
	int r;
	struct Fd *fd;

	if ((r = fd_lookup(fdnum, &fd)) < 0) {
  4033a4:	27c20014 	addiu	v0,s8,20
  4033a8:	00402825 	move	a1,v0
  4033ac:	8fc40020 	lw	a0,32(s8)
  4033b0:	0c1006fc 	jal	401bf0 <fd_lookup>
  4033b4:	00000000 	nop
  4033b8:	afc20010 	sw	v0,16(s8)
  4033bc:	8fc20010 	lw	v0,16(s8)
  4033c0:	04410004 	bgez	v0,4033d4 <iscons+0x44>
  4033c4:	00000000 	nop
		return r;
  4033c8:	8fc20010 	lw	v0,16(s8)
  4033cc:	10000008 	b	4033f0 <iscons+0x60>
  4033d0:	00000000 	nop
	}
	return fd->fd_dev_id == devcons.dev_id;
  4033d4:	8fc20014 	lw	v0,20(s8)
  4033d8:	8c420000 	lw	v0,0(v0)
  4033dc:	3c030040 	lui	v1,0x40
  4033e0:	8c637030 	lw	v1,28720(v1)
  4033e4:	00431026 	xor	v0,v0,v1
  4033e8:	2c420001 	sltiu	v0,v0,1
  4033ec:	304200ff 	andi	v0,v0,0xff
}
  4033f0:	03c0e825 	move	sp,s8
  4033f4:	8fbf001c 	lw	ra,28(sp)
  4033f8:	8fbe0018 	lw	s8,24(sp)
  4033fc:	27bd0020 	addiu	sp,sp,32
  403400:	03e00008 	jr	ra
  403404:	00000000 	nop

00403408 <opencons>:

int opencons(void) {
  403408:	27bdffe0 	addiu	sp,sp,-32
  40340c:	afbf001c 	sw	ra,28(sp)
  403410:	afbe0018 	sw	s8,24(sp)
  403414:	03a0f025 	move	s8,sp
	int r;
	struct Fd *fd;

	if ((r = fd_alloc(&fd)) < 0) {
  403418:	27c20014 	addiu	v0,s8,20
  40341c:	00402025 	move	a0,v0
  403420:	0c1006a7 	jal	401a9c <fd_alloc>
  403424:	00000000 	nop
  403428:	afc20010 	sw	v0,16(s8)
  40342c:	8fc20010 	lw	v0,16(s8)
  403430:	04410004 	bgez	v0,403444 <opencons+0x3c>
  403434:	00000000 	nop
		return r;
  403438:	8fc20010 	lw	v0,16(s8)
  40343c:	10000019 	b	4034a4 <opencons+0x9c>
  403440:	00000000 	nop
	}
	if ((r = syscall_mem_alloc(0, fd, PTE_D | PTE_LIBRARY)) < 0) {
  403444:	8fc20014 	lw	v0,20(s8)
  403448:	24060102 	li	a2,258
  40344c:	00402825 	move	a1,v0
  403450:	00002025 	move	a0,zero
  403454:	0c1004ec 	jal	4013b0 <syscall_mem_alloc>
  403458:	00000000 	nop
  40345c:	afc20010 	sw	v0,16(s8)
  403460:	8fc20010 	lw	v0,16(s8)
  403464:	04410004 	bgez	v0,403478 <opencons+0x70>
  403468:	00000000 	nop
		return r;
  40346c:	8fc20010 	lw	v0,16(s8)
  403470:	1000000c 	b	4034a4 <opencons+0x9c>
  403474:	00000000 	nop
	}
	fd->fd_dev_id = devcons.dev_id;
  403478:	3c020040 	lui	v0,0x40
  40347c:	8c437030 	lw	v1,28720(v0)
  403480:	8fc20014 	lw	v0,20(s8)
  403484:	ac430000 	sw	v1,0(v0)
	fd->fd_omode = O_RDWR;
  403488:	8fc20014 	lw	v0,20(s8)
  40348c:	24030002 	li	v1,2
  403490:	ac430008 	sw	v1,8(v0)
	return fd2num(fd);
  403494:	8fc20014 	lw	v0,20(s8)
  403498:	00402025 	move	a0,v0
  40349c:	0c100733 	jal	401ccc <fd2num>
  4034a0:	00000000 	nop
}
  4034a4:	03c0e825 	move	sp,s8
  4034a8:	8fbf001c 	lw	ra,28(sp)
  4034ac:	8fbe0018 	lw	s8,24(sp)
  4034b0:	27bd0020 	addiu	sp,sp,32
  4034b4:	03e00008 	jr	ra
  4034b8:	00000000 	nop

004034bc <cons_read>:

int cons_read(struct Fd *fd, void *vbuf, u_int n, u_int offset) {
  4034bc:	27bdffe0 	addiu	sp,sp,-32
  4034c0:	afbf001c 	sw	ra,28(sp)
  4034c4:	afbe0018 	sw	s8,24(sp)
  4034c8:	03a0f025 	move	s8,sp
  4034cc:	afc40020 	sw	a0,32(s8)
  4034d0:	afc50024 	sw	a1,36(s8)
  4034d4:	afc60028 	sw	a2,40(s8)
  4034d8:	afc7002c 	sw	a3,44(s8)
	int c;

	if (n == 0) {
  4034dc:	8fc20028 	lw	v0,40(s8)
  4034e0:	14400006 	bnez	v0,4034fc <cons_read+0x40>
  4034e4:	00000000 	nop
		return 0;
  4034e8:	00001025 	move	v0,zero
  4034ec:	1000002b 	b	40359c <cons_read+0xe0>
  4034f0:	00000000 	nop
	}

	while ((c = syscall_cgetc()) == 0) {
		syscall_yield();
  4034f4:	0c1004be 	jal	4012f8 <syscall_yield>
  4034f8:	00000000 	nop
	while ((c = syscall_cgetc()) == 0) {
  4034fc:	0c100581 	jal	401604 <syscall_cgetc>
  403500:	00000000 	nop
  403504:	afc20010 	sw	v0,16(s8)
  403508:	8fc20010 	lw	v0,16(s8)
  40350c:	1040fff9 	beqz	v0,4034f4 <cons_read+0x38>
  403510:	00000000 	nop
	}

	if (c != '\r') {
  403514:	8fc30010 	lw	v1,16(s8)
  403518:	2402000d 	li	v0,13
  40351c:	10620008 	beq	v1,v0,403540 <cons_read+0x84>
  403520:	00000000 	nop
		debugf("%c", c);
  403524:	8fc50010 	lw	a1,16(s8)
  403528:	3c020040 	lui	v0,0x40
  40352c:	244461d8 	addiu	a0,v0,25048
  403530:	0c100141 	jal	400504 <debugf>
  403534:	00000000 	nop
  403538:	10000005 	b	403550 <cons_read+0x94>
  40353c:	00000000 	nop
	} else {
		debugf("\n");
  403540:	3c020040 	lui	v0,0x40
  403544:	244461dc 	addiu	a0,v0,25052
  403548:	0c100141 	jal	400504 <debugf>
  40354c:	00000000 	nop
	}
	if (c < 0) {
  403550:	8fc20010 	lw	v0,16(s8)
  403554:	04410004 	bgez	v0,403568 <cons_read+0xac>
  403558:	00000000 	nop
		return c;
  40355c:	8fc20010 	lw	v0,16(s8)
  403560:	1000000e 	b	40359c <cons_read+0xe0>
  403564:	00000000 	nop
	}
	if (c == 0x04) { // ctl-d is eof
  403568:	8fc30010 	lw	v1,16(s8)
  40356c:	24020004 	li	v0,4
  403570:	14620004 	bne	v1,v0,403584 <cons_read+0xc8>
  403574:	00000000 	nop
		return 0;
  403578:	00001025 	move	v0,zero
  40357c:	10000007 	b	40359c <cons_read+0xe0>
  403580:	00000000 	nop
	}
	*(char *)vbuf = c;
  403584:	8fc20010 	lw	v0,16(s8)
  403588:	00021e00 	sll	v1,v0,0x18
  40358c:	00031e03 	sra	v1,v1,0x18
  403590:	8fc20024 	lw	v0,36(s8)
  403594:	a0430000 	sb	v1,0(v0)
	return 1;
  403598:	24020001 	li	v0,1
}
  40359c:	03c0e825 	move	sp,s8
  4035a0:	8fbf001c 	lw	ra,28(sp)
  4035a4:	8fbe0018 	lw	s8,24(sp)
  4035a8:	27bd0020 	addiu	sp,sp,32
  4035ac:	03e00008 	jr	ra
  4035b0:	00000000 	nop

004035b4 <cons_write>:

int cons_write(struct Fd *fd, const void *buf, u_int n, u_int offset) {
  4035b4:	27bdffe0 	addiu	sp,sp,-32
  4035b8:	afbf001c 	sw	ra,28(sp)
  4035bc:	afbe0018 	sw	s8,24(sp)
  4035c0:	03a0f025 	move	s8,sp
  4035c4:	afc40020 	sw	a0,32(s8)
  4035c8:	afc50024 	sw	a1,36(s8)
  4035cc:	afc60028 	sw	a2,40(s8)
  4035d0:	afc7002c 	sw	a3,44(s8)
	int r = syscall_print_cons(buf, n);
  4035d4:	8fc50028 	lw	a1,40(s8)
  4035d8:	8fc40024 	lw	a0,36(s8)
  4035dc:	0c1004a0 	jal	401280 <syscall_print_cons>
  4035e0:	00000000 	nop
  4035e4:	afc20010 	sw	v0,16(s8)
	if (r < 0) {
  4035e8:	8fc20010 	lw	v0,16(s8)
  4035ec:	04410004 	bgez	v0,403600 <cons_write+0x4c>
  4035f0:	00000000 	nop
		return r;
  4035f4:	8fc20010 	lw	v0,16(s8)
  4035f8:	10000002 	b	403604 <cons_write+0x50>
  4035fc:	00000000 	nop
	}
	return n;
  403600:	8fc20028 	lw	v0,40(s8)
}
  403604:	03c0e825 	move	sp,s8
  403608:	8fbf001c 	lw	ra,28(sp)
  40360c:	8fbe0018 	lw	s8,24(sp)
  403610:	27bd0020 	addiu	sp,sp,32
  403614:	03e00008 	jr	ra
  403618:	00000000 	nop

0040361c <cons_close>:

int cons_close(struct Fd *fd) {
  40361c:	27bdfff8 	addiu	sp,sp,-8
  403620:	afbe0004 	sw	s8,4(sp)
  403624:	03a0f025 	move	s8,sp
  403628:	afc40008 	sw	a0,8(s8)
	return 0;
  40362c:	00001025 	move	v0,zero
}
  403630:	03c0e825 	move	sp,s8
  403634:	8fbe0004 	lw	s8,4(sp)
  403638:	27bd0008 	addiu	sp,sp,8
  40363c:	03e00008 	jr	ra
  403640:	00000000 	nop

00403644 <cons_stat>:

int cons_stat(struct Fd *fd, struct Stat *stat) {
  403644:	27bdffe8 	addiu	sp,sp,-24
  403648:	afbf0014 	sw	ra,20(sp)
  40364c:	afbe0010 	sw	s8,16(sp)
  403650:	03a0f025 	move	s8,sp
  403654:	afc40018 	sw	a0,24(s8)
  403658:	afc5001c 	sw	a1,28(s8)
	strcpy(stat->st_name, "<cons>");
  40365c:	8fc3001c 	lw	v1,28(s8)
  403660:	3c020040 	lui	v0,0x40
  403664:	244561e0 	addiu	a1,v0,25056
  403668:	00602025 	move	a0,v1
  40366c:	0c10170c 	jal	405c30 <strcpy>
  403670:	00000000 	nop
	return 0;
  403674:	00001025 	move	v0,zero
}
  403678:	03c0e825 	move	sp,s8
  40367c:	8fbf0014 	lw	ra,20(sp)
  403680:	8fbe0010 	lw	s8,16(sp)
  403684:	27bd0018 	addiu	sp,sp,24
  403688:	03e00008 	jr	ra
  40368c:	00000000 	nop

00403690 <print_output>:
struct print_ctx {
	int fd;
	int ret;
};

static void print_output(void *data, const char *s, size_t l) {
  403690:	27bdffe0 	addiu	sp,sp,-32
  403694:	afbf001c 	sw	ra,28(sp)
  403698:	afbe0018 	sw	s8,24(sp)
  40369c:	03a0f025 	move	s8,sp
  4036a0:	afc40020 	sw	a0,32(s8)
  4036a4:	afc50024 	sw	a1,36(s8)
  4036a8:	afc60028 	sw	a2,40(s8)
	struct print_ctx *ctx = (struct print_ctx *)data;
  4036ac:	8fc20020 	lw	v0,32(s8)
  4036b0:	afc20010 	sw	v0,16(s8)
	if (ctx->ret < 0) {
  4036b4:	8fc20010 	lw	v0,16(s8)
  4036b8:	8c420004 	lw	v0,4(v0)
  4036bc:	04400019 	bltz	v0,403724 <print_output+0x94>
  4036c0:	00000000 	nop
		return;
	}
	int r = write(ctx->fd, s, l);
  4036c4:	8fc20010 	lw	v0,16(s8)
  4036c8:	8c420000 	lw	v0,0(v0)
  4036cc:	8fc60028 	lw	a2,40(s8)
  4036d0:	8fc50024 	lw	a1,36(s8)
  4036d4:	00402025 	move	a0,v0
  4036d8:	0c1008b4 	jal	4022d0 <write>
  4036dc:	00000000 	nop
  4036e0:	afc20014 	sw	v0,20(s8)
	if (r < 0) {
  4036e4:	8fc20014 	lw	v0,20(s8)
  4036e8:	04410006 	bgez	v0,403704 <print_output+0x74>
  4036ec:	00000000 	nop
		ctx->ret = r;
  4036f0:	8fc20010 	lw	v0,16(s8)
  4036f4:	8fc30014 	lw	v1,20(s8)
  4036f8:	ac430004 	sw	v1,4(v0)
  4036fc:	1000000a 	b	403728 <print_output+0x98>
  403700:	00000000 	nop
	} else {
		ctx->ret += r;
  403704:	8fc20010 	lw	v0,16(s8)
  403708:	8c430004 	lw	v1,4(v0)
  40370c:	8fc20014 	lw	v0,20(s8)
  403710:	00621821 	addu	v1,v1,v0
  403714:	8fc20010 	lw	v0,16(s8)
  403718:	ac430004 	sw	v1,4(v0)
  40371c:	10000002 	b	403728 <print_output+0x98>
  403720:	00000000 	nop
		return;
  403724:	00000000 	nop
	}
}
  403728:	03c0e825 	move	sp,s8
  40372c:	8fbf001c 	lw	ra,28(sp)
  403730:	8fbe0018 	lw	s8,24(sp)
  403734:	27bd0020 	addiu	sp,sp,32
  403738:	03e00008 	jr	ra
  40373c:	00000000 	nop

00403740 <vfprintf>:

static int vfprintf(int fd, const char *fmt, va_list ap) {
  403740:	27bdffe0 	addiu	sp,sp,-32
  403744:	afbf001c 	sw	ra,28(sp)
  403748:	afbe0018 	sw	s8,24(sp)
  40374c:	03a0f025 	move	s8,sp
  403750:	afc40020 	sw	a0,32(s8)
  403754:	afc50024 	sw	a1,36(s8)
  403758:	afc60028 	sw	a2,40(s8)
	struct print_ctx ctx;
	ctx.fd = fd;
  40375c:	8fc20020 	lw	v0,32(s8)
  403760:	afc20010 	sw	v0,16(s8)
	ctx.ret = 0;
  403764:	afc00014 	sw	zero,20(s8)
	vprintfmt(print_output, &ctx, fmt, ap);
  403768:	8fc70028 	lw	a3,40(s8)
  40376c:	8fc60024 	lw	a2,36(s8)
  403770:	27c20010 	addiu	v0,s8,16
  403774:	00402825 	move	a1,v0
  403778:	3c020040 	lui	v0,0x40
  40377c:	24443690 	addiu	a0,v0,13968
  403780:	0c101334 	jal	404cd0 <vprintfmt>
  403784:	00000000 	nop
	return ctx.ret;
  403788:	8fc20014 	lw	v0,20(s8)
}
  40378c:	03c0e825 	move	sp,s8
  403790:	8fbf001c 	lw	ra,28(sp)
  403794:	8fbe0018 	lw	s8,24(sp)
  403798:	27bd0020 	addiu	sp,sp,32
  40379c:	03e00008 	jr	ra
  4037a0:	00000000 	nop

004037a4 <fprintf>:

int fprintf(int fd, const char *fmt, ...) {
  4037a4:	27bdffe0 	addiu	sp,sp,-32
  4037a8:	afbf001c 	sw	ra,28(sp)
  4037ac:	afbe0018 	sw	s8,24(sp)
  4037b0:	03a0f025 	move	s8,sp
  4037b4:	afc40020 	sw	a0,32(s8)
  4037b8:	afc50024 	sw	a1,36(s8)
  4037bc:	afc60028 	sw	a2,40(s8)
  4037c0:	afc7002c 	sw	a3,44(s8)
	va_list ap;
	va_start(ap, fmt);
  4037c4:	27c20028 	addiu	v0,s8,40
  4037c8:	afc20014 	sw	v0,20(s8)
	int r = vfprintf(fd, fmt, ap);
  4037cc:	8fc20014 	lw	v0,20(s8)
  4037d0:	00403025 	move	a2,v0
  4037d4:	8fc50024 	lw	a1,36(s8)
  4037d8:	8fc40020 	lw	a0,32(s8)
  4037dc:	0c100dd0 	jal	403740 <vfprintf>
  4037e0:	00000000 	nop
  4037e4:	afc20010 	sw	v0,16(s8)
	va_end(ap);
	return r;
  4037e8:	8fc20010 	lw	v0,16(s8)
}
  4037ec:	03c0e825 	move	sp,s8
  4037f0:	8fbf001c 	lw	ra,28(sp)
  4037f4:	8fbe0018 	lw	s8,24(sp)
  4037f8:	27bd0020 	addiu	sp,sp,32
  4037fc:	03e00008 	jr	ra
  403800:	00000000 	nop

00403804 <printf>:

int printf(const char *fmt, ...) {
  403804:	27bdffe0 	addiu	sp,sp,-32
  403808:	afbf001c 	sw	ra,28(sp)
  40380c:	afbe0018 	sw	s8,24(sp)
  403810:	03a0f025 	move	s8,sp
  403814:	afc40020 	sw	a0,32(s8)
  403818:	afc50024 	sw	a1,36(s8)
  40381c:	afc60028 	sw	a2,40(s8)
  403820:	afc7002c 	sw	a3,44(s8)
	va_list ap;
	va_start(ap, fmt);
  403824:	27c20024 	addiu	v0,s8,36
  403828:	afc20014 	sw	v0,20(s8)
	int r = vfprintf(1, fmt, ap);
  40382c:	8fc20014 	lw	v0,20(s8)
  403830:	00403025 	move	a2,v0
  403834:	8fc50020 	lw	a1,32(s8)
  403838:	24040001 	li	a0,1
  40383c:	0c100dd0 	jal	403740 <vfprintf>
  403840:	00000000 	nop
  403844:	afc20010 	sw	v0,16(s8)
	va_end(ap);
	return r;
  403848:	8fc20010 	lw	v0,16(s8)
}
  40384c:	03c0e825 	move	sp,s8
  403850:	8fbf001c 	lw	ra,28(sp)
  403854:	8fbe0018 	lw	s8,24(sp)
  403858:	27bd0020 	addiu	sp,sp,32
  40385c:	03e00008 	jr	ra
  403860:	00000000 	nop
	...

00403870 <wait>:
#include <env.h>
#include <lib.h>
void wait(u_int envid) {
  403870:	27bdffe0 	addiu	sp,sp,-32
  403874:	afbf001c 	sw	ra,28(sp)
  403878:	afbe0018 	sw	s8,24(sp)
  40387c:	03a0f025 	move	s8,sp
  403880:	afc40020 	sw	a0,32(s8)
	const volatile struct Env *e;

	e = &envs[ENVX(envid)];
  403884:	8fc20020 	lw	v0,32(s8)
  403888:	304303ff 	andi	v1,v0,0x3ff
  40388c:	00601025 	move	v0,v1
  403890:	00021180 	sll	v0,v0,0x6
  403894:	00431023 	subu	v0,v0,v1
  403898:	000210c0 	sll	v0,v0,0x3
  40389c:	00401825 	move	v1,v0
  4038a0:	3c027f40 	lui	v0,0x7f40
  4038a4:	00621021 	addu	v0,v1,v0
  4038a8:	afc20010 	sw	v0,16(s8)
	while (e->env_id == envid && e->env_status != ENV_FREE) {
  4038ac:	10000003 	b	4038bc <wait+0x4c>
  4038b0:	00000000 	nop
		syscall_yield();
  4038b4:	0c1004be 	jal	4012f8 <syscall_yield>
  4038b8:	00000000 	nop
	while (e->env_id == envid && e->env_status != ENV_FREE) {
  4038bc:	8fc20010 	lw	v0,16(s8)
  4038c0:	8c4200a0 	lw	v0,160(v0)
  4038c4:	8fc30020 	lw	v1,32(s8)
  4038c8:	14620005 	bne	v1,v0,4038e0 <wait+0x70>
  4038cc:	00000000 	nop
  4038d0:	8fc20010 	lw	v0,16(s8)
  4038d4:	8c4200ac 	lw	v0,172(v0)
  4038d8:	1440fff6 	bnez	v0,4038b4 <wait+0x44>
  4038dc:	00000000 	nop
	}
}
  4038e0:	00000000 	nop
  4038e4:	03c0e825 	move	sp,s8
  4038e8:	8fbf001c 	lw	ra,28(sp)
  4038ec:	8fbe0018 	lw	s8,24(sp)
  4038f0:	27bd0020 	addiu	sp,sp,32
  4038f4:	03e00008 	jr	ra
  4038f8:	00000000 	nop
  4038fc:	00000000 	nop

00403900 <init_stack>:
#include <lib.h>
#include <mmu.h>

#define debug 0

int init_stack(u_int child, char **argv, u_int *init_sp) {
  403900:	27bdffb8 	addiu	sp,sp,-72
  403904:	afbf0044 	sw	ra,68(sp)
  403908:	afbe0040 	sw	s8,64(sp)
  40390c:	03a0f025 	move	s8,sp
  403910:	afc40048 	sw	a0,72(s8)
  403914:	afc5004c 	sw	a1,76(s8)
  403918:	afc60050 	sw	a2,80(s8)
	char *strings;
	u_int *args;

	// Count the number of arguments (argc)
	// and the total amount of space needed for strings (tot)
	tot = 0;
  40391c:	afc00024 	sw	zero,36(s8)
	for (argc = 0; argv[argc]; argc++) {
  403920:	afc00018 	sw	zero,24(s8)
  403924:	10000010 	b	403968 <init_stack+0x68>
  403928:	00000000 	nop
		tot += strlen(argv[argc]) + 1;
  40392c:	8fc20018 	lw	v0,24(s8)
  403930:	00021080 	sll	v0,v0,0x2
  403934:	8fc3004c 	lw	v1,76(s8)
  403938:	00621021 	addu	v0,v1,v0
  40393c:	8c420000 	lw	v0,0(v0)
  403940:	00402025 	move	a0,v0
  403944:	0c1016f5 	jal	405bd4 <strlen>
  403948:	00000000 	nop
  40394c:	24430001 	addiu	v1,v0,1
  403950:	8fc20024 	lw	v0,36(s8)
  403954:	00621021 	addu	v0,v1,v0
  403958:	afc20024 	sw	v0,36(s8)
	for (argc = 0; argv[argc]; argc++) {
  40395c:	8fc20018 	lw	v0,24(s8)
  403960:	24420001 	addiu	v0,v0,1
  403964:	afc20018 	sw	v0,24(s8)
  403968:	8fc20018 	lw	v0,24(s8)
  40396c:	00021080 	sll	v0,v0,0x2
  403970:	8fc3004c 	lw	v1,76(s8)
  403974:	00621021 	addu	v0,v1,v0
  403978:	8c420000 	lw	v0,0(v0)
  40397c:	1440ffeb 	bnez	v0,40392c <init_stack+0x2c>
  403980:	00000000 	nop
	}

	// Make sure everything will fit in the initial stack page
	if (ROUND(tot, 4) + 4 * (argc + 3) > PAGE_SIZE) {
  403984:	8fc20024 	lw	v0,36(s8)
  403988:	24430003 	addiu	v1,v0,3
  40398c:	2402fffc 	li	v0,-4
  403990:	00621024 	and	v0,v1,v0
  403994:	8fc30018 	lw	v1,24(s8)
  403998:	24630003 	addiu	v1,v1,3
  40399c:	00031880 	sll	v1,v1,0x2
  4039a0:	00431021 	addu	v0,v0,v1
  4039a4:	2c421001 	sltiu	v0,v0,4097
  4039a8:	14400004 	bnez	v0,4039bc <init_stack+0xbc>
  4039ac:	00000000 	nop
		return -E_NO_MEM;
  4039b0:	2402fffc 	li	v0,-4
  4039b4:	100000b9 	b	403c9c <init_stack+0x39c>
  4039b8:	00000000 	nop
	}

	// Determine where to place the strings and the args array
	strings = (char *)(UTEMP + PAGE_SIZE) - tot;
  4039bc:	8fc20024 	lw	v0,36(s8)
  4039c0:	00021823 	negu	v1,v0
  4039c4:	3c02003f 	lui	v0,0x3f
  4039c8:	3442f000 	ori	v0,v0,0xf000
  4039cc:	00621021 	addu	v0,v1,v0
  4039d0:	afc20034 	sw	v0,52(s8)
	args = (u_int *)(UTEMP + PAGE_SIZE - ROUND(tot, 4) - 4 * (argc + 1));
  4039d4:	8fc20024 	lw	v0,36(s8)
  4039d8:	24430003 	addiu	v1,v0,3
  4039dc:	2402fffc 	li	v0,-4
  4039e0:	00621024 	and	v0,v1,v0
  4039e4:	8fc30018 	lw	v1,24(s8)
  4039e8:	24630001 	addiu	v1,v1,1
  4039ec:	00031880 	sll	v1,v1,0x2
  4039f0:	00431021 	addu	v0,v0,v1
  4039f4:	3c03003f 	lui	v1,0x3f
  4039f8:	3463f000 	ori	v1,v1,0xf000
  4039fc:	00621023 	subu	v0,v1,v0
  403a00:	afc20038 	sw	v0,56(s8)

	if ((r = syscall_mem_alloc(0, (void *)UTEMP, PTE_D)) < 0) {
  403a04:	24060100 	li	a2,256
  403a08:	3c02003f 	lui	v0,0x3f
  403a0c:	3445e000 	ori	a1,v0,0xe000
  403a10:	00002025 	move	a0,zero
  403a14:	0c1004ec 	jal	4013b0 <syscall_mem_alloc>
  403a18:	00000000 	nop
  403a1c:	afc20020 	sw	v0,32(s8)
  403a20:	8fc20020 	lw	v0,32(s8)
  403a24:	04410004 	bgez	v0,403a38 <init_stack+0x138>
  403a28:	00000000 	nop
		return r;
  403a2c:	8fc20020 	lw	v0,32(s8)
  403a30:	1000009a 	b	403c9c <init_stack+0x39c>
  403a34:	00000000 	nop
	}

	// Copy the argument strings into the stack page at 'strings'
	char *ctemp, *argv_temp;
	u_int j;
	ctemp = strings;
  403a38:	8fc20034 	lw	v0,52(s8)
  403a3c:	afc20028 	sw	v0,40(s8)
	for (i = 0; i < argc; i++) {
  403a40:	afc0001c 	sw	zero,28(s8)
  403a44:	1000002c 	b	403af8 <init_stack+0x1f8>
  403a48:	00000000 	nop
		argv_temp = argv[i];
  403a4c:	8fc2001c 	lw	v0,28(s8)
  403a50:	00021080 	sll	v0,v0,0x2
  403a54:	8fc3004c 	lw	v1,76(s8)
  403a58:	00621021 	addu	v0,v1,v0
  403a5c:	8c420000 	lw	v0,0(v0)
  403a60:	afc2002c 	sw	v0,44(s8)
		for (j = 0; j < strlen(argv[i]); j++) {
  403a64:	afc00030 	sw	zero,48(s8)
  403a68:	1000000e 	b	403aa4 <init_stack+0x1a4>
  403a6c:	00000000 	nop
			*ctemp = *argv_temp;
  403a70:	8fc2002c 	lw	v0,44(s8)
  403a74:	80430000 	lb	v1,0(v0)
  403a78:	8fc20028 	lw	v0,40(s8)
  403a7c:	a0430000 	sb	v1,0(v0)
			ctemp++;
  403a80:	8fc20028 	lw	v0,40(s8)
  403a84:	24420001 	addiu	v0,v0,1
  403a88:	afc20028 	sw	v0,40(s8)
			argv_temp++;
  403a8c:	8fc2002c 	lw	v0,44(s8)
  403a90:	24420001 	addiu	v0,v0,1
  403a94:	afc2002c 	sw	v0,44(s8)
		for (j = 0; j < strlen(argv[i]); j++) {
  403a98:	8fc20030 	lw	v0,48(s8)
  403a9c:	24420001 	addiu	v0,v0,1
  403aa0:	afc20030 	sw	v0,48(s8)
  403aa4:	8fc2001c 	lw	v0,28(s8)
  403aa8:	00021080 	sll	v0,v0,0x2
  403aac:	8fc3004c 	lw	v1,76(s8)
  403ab0:	00621021 	addu	v0,v1,v0
  403ab4:	8c420000 	lw	v0,0(v0)
  403ab8:	00402025 	move	a0,v0
  403abc:	0c1016f5 	jal	405bd4 <strlen>
  403ac0:	00000000 	nop
  403ac4:	00401825 	move	v1,v0
  403ac8:	8fc20030 	lw	v0,48(s8)
  403acc:	0043102b 	sltu	v0,v0,v1
  403ad0:	1440ffe7 	bnez	v0,403a70 <init_stack+0x170>
  403ad4:	00000000 	nop
		}
		*ctemp = 0;
  403ad8:	8fc20028 	lw	v0,40(s8)
  403adc:	a0400000 	sb	zero,0(v0)
		ctemp++;
  403ae0:	8fc20028 	lw	v0,40(s8)
  403ae4:	24420001 	addiu	v0,v0,1
  403ae8:	afc20028 	sw	v0,40(s8)
	for (i = 0; i < argc; i++) {
  403aec:	8fc2001c 	lw	v0,28(s8)
  403af0:	24420001 	addiu	v0,v0,1
  403af4:	afc2001c 	sw	v0,28(s8)
  403af8:	8fc3001c 	lw	v1,28(s8)
  403afc:	8fc20018 	lw	v0,24(s8)
  403b00:	0062102a 	slt	v0,v1,v0
  403b04:	1440ffd1 	bnez	v0,403a4c <init_stack+0x14c>
  403b08:	00000000 	nop
	}

	// Initialize args[0..argc-1] to be pointers to these strings
	// that will be valid addresses for the child environment
	// (for whom this page will be at USTACKTOP-PAGE_SIZE!).
	ctemp = (char *)(USTACKTOP - UTEMP - PAGE_SIZE + (u_int)strings);
  403b0c:	8fc30034 	lw	v1,52(s8)
  403b10:	3c027eff 	lui	v0,0x7eff
  403b14:	3442f000 	ori	v0,v0,0xf000
  403b18:	00621021 	addu	v0,v1,v0
  403b1c:	afc20028 	sw	v0,40(s8)
	for (i = 0; i < argc; i++) {
  403b20:	afc0001c 	sw	zero,28(s8)
  403b24:	10000016 	b	403b80 <init_stack+0x280>
  403b28:	00000000 	nop
		args[i] = (u_int)ctemp;
  403b2c:	8fc2001c 	lw	v0,28(s8)
  403b30:	00021080 	sll	v0,v0,0x2
  403b34:	8fc30038 	lw	v1,56(s8)
  403b38:	00621021 	addu	v0,v1,v0
  403b3c:	8fc30028 	lw	v1,40(s8)
  403b40:	ac430000 	sw	v1,0(v0)
		ctemp += strlen(argv[i]) + 1;
  403b44:	8fc2001c 	lw	v0,28(s8)
  403b48:	00021080 	sll	v0,v0,0x2
  403b4c:	8fc3004c 	lw	v1,76(s8)
  403b50:	00621021 	addu	v0,v1,v0
  403b54:	8c420000 	lw	v0,0(v0)
  403b58:	00402025 	move	a0,v0
  403b5c:	0c1016f5 	jal	405bd4 <strlen>
  403b60:	00000000 	nop
  403b64:	24420001 	addiu	v0,v0,1
  403b68:	8fc30028 	lw	v1,40(s8)
  403b6c:	00621021 	addu	v0,v1,v0
  403b70:	afc20028 	sw	v0,40(s8)
	for (i = 0; i < argc; i++) {
  403b74:	8fc2001c 	lw	v0,28(s8)
  403b78:	24420001 	addiu	v0,v0,1
  403b7c:	afc2001c 	sw	v0,28(s8)
  403b80:	8fc3001c 	lw	v1,28(s8)
  403b84:	8fc20018 	lw	v0,24(s8)
  403b88:	0062102a 	slt	v0,v1,v0
  403b8c:	1440ffe7 	bnez	v0,403b2c <init_stack+0x22c>
  403b90:	00000000 	nop
	}

	// Set args[argc] to 0 to null-terminate the args array.
	ctemp--;
  403b94:	8fc20028 	lw	v0,40(s8)
  403b98:	2442ffff 	addiu	v0,v0,-1
  403b9c:	afc20028 	sw	v0,40(s8)
	args[argc] = (u_int)ctemp;
  403ba0:	8fc20018 	lw	v0,24(s8)
  403ba4:	00021080 	sll	v0,v0,0x2
  403ba8:	8fc30038 	lw	v1,56(s8)
  403bac:	00621021 	addu	v0,v1,v0
  403bb0:	8fc30028 	lw	v1,40(s8)
  403bb4:	ac430000 	sw	v1,0(v0)

	// Push two more words onto the child's stack below 'args',
	// containing the argc and argv parameters to be passed
	// to the child's main() function.
	u_int *pargv_ptr;
	pargv_ptr = args - 1;
  403bb8:	8fc20038 	lw	v0,56(s8)
  403bbc:	2442fffc 	addiu	v0,v0,-4
  403bc0:	afc2003c 	sw	v0,60(s8)
	*pargv_ptr = USTACKTOP - UTEMP - PAGE_SIZE + (u_int)args;
  403bc4:	8fc30038 	lw	v1,56(s8)
  403bc8:	3c027eff 	lui	v0,0x7eff
  403bcc:	3442f000 	ori	v0,v0,0xf000
  403bd0:	00621821 	addu	v1,v1,v0
  403bd4:	8fc2003c 	lw	v0,60(s8)
  403bd8:	ac430000 	sw	v1,0(v0)
	pargv_ptr--;
  403bdc:	8fc2003c 	lw	v0,60(s8)
  403be0:	2442fffc 	addiu	v0,v0,-4
  403be4:	afc2003c 	sw	v0,60(s8)
	*pargv_ptr = argc;
  403be8:	8fc30018 	lw	v1,24(s8)
  403bec:	8fc2003c 	lw	v0,60(s8)
  403bf0:	ac430000 	sw	v1,0(v0)

	// Set *init_sp to the initial stack pointer for the child
	*init_sp = USTACKTOP - UTEMP - PAGE_SIZE + (u_int)pargv_ptr;
  403bf4:	8fc3003c 	lw	v1,60(s8)
  403bf8:	3c027eff 	lui	v0,0x7eff
  403bfc:	3442f000 	ori	v0,v0,0xf000
  403c00:	00621821 	addu	v1,v1,v0
  403c04:	8fc20050 	lw	v0,80(s8)
  403c08:	ac430000 	sw	v1,0(v0)

	if ((r = syscall_mem_map(0, (void *)UTEMP, child, (void *)(USTACKTOP - PAGE_SIZE), PTE_D)) <
  403c0c:	24020100 	li	v0,256
  403c10:	afa20010 	sw	v0,16(sp)
  403c14:	3c027f3f 	lui	v0,0x7f3f
  403c18:	3447d000 	ori	a3,v0,0xd000
  403c1c:	8fc60048 	lw	a2,72(s8)
  403c20:	3c02003f 	lui	v0,0x3f
  403c24:	3445e000 	ori	a1,v0,0xe000
  403c28:	00002025 	move	a0,zero
  403c2c:	0c1004ff 	jal	4013fc <syscall_mem_map>
  403c30:	00000000 	nop
  403c34:	afc20020 	sw	v0,32(s8)
  403c38:	8fc20020 	lw	v0,32(s8)
  403c3c:	0440000d 	bltz	v0,403c74 <init_stack+0x374>
  403c40:	00000000 	nop
	    0) {
		goto error;
	}
	if ((r = syscall_mem_unmap(0, (void *)UTEMP)) < 0) {
  403c44:	3c02003f 	lui	v0,0x3f
  403c48:	3445e000 	ori	a1,v0,0xe000
  403c4c:	00002025 	move	a0,zero
  403c50:	0c100517 	jal	40145c <syscall_mem_unmap>
  403c54:	00000000 	nop
  403c58:	afc20020 	sw	v0,32(s8)
  403c5c:	8fc20020 	lw	v0,32(s8)
  403c60:	04400007 	bltz	v0,403c80 <init_stack+0x380>
  403c64:	00000000 	nop
		goto error;
	}

	return 0;
  403c68:	00001025 	move	v0,zero
  403c6c:	1000000b 	b	403c9c <init_stack+0x39c>
  403c70:	00000000 	nop
		goto error;
  403c74:	00000000 	nop
  403c78:	10000002 	b	403c84 <init_stack+0x384>
  403c7c:	00000000 	nop
		goto error;
  403c80:	00000000 	nop

error:
	syscall_mem_unmap(0, (void *)UTEMP);
  403c84:	3c02003f 	lui	v0,0x3f
  403c88:	3445e000 	ori	a1,v0,0xe000
  403c8c:	00002025 	move	a0,zero
  403c90:	0c100517 	jal	40145c <syscall_mem_unmap>
  403c94:	00000000 	nop
	return r;
  403c98:	8fc20020 	lw	v0,32(s8)
}
  403c9c:	03c0e825 	move	sp,s8
  403ca0:	8fbf0044 	lw	ra,68(sp)
  403ca4:	8fbe0040 	lw	s8,64(sp)
  403ca8:	27bd0048 	addiu	sp,sp,72
  403cac:	03e00008 	jr	ra
  403cb0:	00000000 	nop

00403cb4 <spawn_mapper>:

static int spawn_mapper(void *data, u_long va, size_t offset, u_int perm, const void *src,
			size_t len) {
  403cb4:	27bdffd0 	addiu	sp,sp,-48
  403cb8:	afbf002c 	sw	ra,44(sp)
  403cbc:	afbe0028 	sw	s8,40(sp)
  403cc0:	03a0f025 	move	s8,sp
  403cc4:	afc40030 	sw	a0,48(s8)
  403cc8:	afc50034 	sw	a1,52(s8)
  403ccc:	afc60038 	sw	a2,56(s8)
  403cd0:	afc7003c 	sw	a3,60(s8)
	u_int child_id = *(u_int *)data;
  403cd4:	8fc20030 	lw	v0,48(s8)
  403cd8:	8c420000 	lw	v0,0(v0)
  403cdc:	afc20018 	sw	v0,24(s8)
	try(syscall_mem_alloc(child_id, (void *)va, perm));
  403ce0:	8fc20034 	lw	v0,52(s8)
  403ce4:	8fc6003c 	lw	a2,60(s8)
  403ce8:	00402825 	move	a1,v0
  403cec:	8fc40018 	lw	a0,24(s8)
  403cf0:	0c1004ec 	jal	4013b0 <syscall_mem_alloc>
  403cf4:	00000000 	nop
  403cf8:	afc2001c 	sw	v0,28(s8)
  403cfc:	8fc2001c 	lw	v0,28(s8)
  403d00:	10400004 	beqz	v0,403d14 <spawn_mapper+0x60>
  403d04:	00000000 	nop
  403d08:	8fc2001c 	lw	v0,28(s8)
  403d0c:	1000002c 	b	403dc0 <spawn_mapper+0x10c>
  403d10:	00000000 	nop
	if (src != NULL) {
  403d14:	8fc20040 	lw	v0,64(s8)
  403d18:	10400028 	beqz	v0,403dbc <spawn_mapper+0x108>
  403d1c:	00000000 	nop
		int r = syscall_mem_map(child_id, (void *)va, 0, (void *)UTEMP, perm | PTE_D);
  403d20:	8fc30034 	lw	v1,52(s8)
  403d24:	8fc2003c 	lw	v0,60(s8)
  403d28:	34420100 	ori	v0,v0,0x100
  403d2c:	afa20010 	sw	v0,16(sp)
  403d30:	3c02003f 	lui	v0,0x3f
  403d34:	3447e000 	ori	a3,v0,0xe000
  403d38:	00003025 	move	a2,zero
  403d3c:	00602825 	move	a1,v1
  403d40:	8fc40018 	lw	a0,24(s8)
  403d44:	0c1004ff 	jal	4013fc <syscall_mem_map>
  403d48:	00000000 	nop
  403d4c:	afc20020 	sw	v0,32(s8)
		if (r) {
  403d50:	8fc20020 	lw	v0,32(s8)
  403d54:	10400009 	beqz	v0,403d7c <spawn_mapper+0xc8>
  403d58:	00000000 	nop
			syscall_mem_unmap(child_id, (void *)va);
  403d5c:	8fc20034 	lw	v0,52(s8)
  403d60:	00402825 	move	a1,v0
  403d64:	8fc40018 	lw	a0,24(s8)
  403d68:	0c100517 	jal	40145c <syscall_mem_unmap>
  403d6c:	00000000 	nop
			return r;
  403d70:	8fc20020 	lw	v0,32(s8)
  403d74:	10000012 	b	403dc0 <spawn_mapper+0x10c>
  403d78:	00000000 	nop
		}
		memcpy((void *)(UTEMP + offset), src, len);
  403d7c:	8fc30038 	lw	v1,56(s8)
  403d80:	3c02003f 	lui	v0,0x3f
  403d84:	3442e000 	ori	v0,v0,0xe000
  403d88:	00621021 	addu	v0,v1,v0
  403d8c:	8fc60044 	lw	a2,68(s8)
  403d90:	8fc50040 	lw	a1,64(s8)
  403d94:	00402025 	move	a0,v0
  403d98:	0c101650 	jal	405940 <memcpy>
  403d9c:	00000000 	nop
		return syscall_mem_unmap(0, (void *)UTEMP);
  403da0:	3c02003f 	lui	v0,0x3f
  403da4:	3445e000 	ori	a1,v0,0xe000
  403da8:	00002025 	move	a0,zero
  403dac:	0c100517 	jal	40145c <syscall_mem_unmap>
  403db0:	00000000 	nop
  403db4:	10000002 	b	403dc0 <spawn_mapper+0x10c>
  403db8:	00000000 	nop
	}
	return 0;
  403dbc:	00001025 	move	v0,zero
}
  403dc0:	03c0e825 	move	sp,s8
  403dc4:	8fbf002c 	lw	ra,44(sp)
  403dc8:	8fbe0028 	lw	s8,40(sp)
  403dcc:	27bd0030 	addiu	sp,sp,48
  403dd0:	03e00008 	jr	ra
  403dd4:	00000000 	nop

00403dd8 <spawn>:
 *   This function involves loading executable code to memory. After the completion of load
 *   procedures, D-cache and I-cache writeback/invalidation MUST be performed to maintain cache
 *   coherence, which MOS has NOT implemented. This may result in unexpected behaviours on real
 *   CPUs! QEMU doesn't simulate caching, allowing the OS to function correctly.
 */
int spawn(char *prog, char **argv) {
  403dd8:	27bdfd08 	addiu	sp,sp,-760
  403ddc:	afbf02f4 	sw	ra,756(sp)
  403de0:	afbe02f0 	sw	s8,752(sp)
  403de4:	03a0f025 	move	s8,sp
  403de8:	afc402f8 	sw	a0,760(s8)
  403dec:	afc502fc 	sw	a1,764(s8)
	// Step 1: Open the file 'prog' (the path of the program).
	// Return the error if 'open' fails.
	int fd;
	if ((fd = open(prog, O_RDONLY)) < 0) {
  403df0:	00002825 	move	a1,zero
  403df4:	8fc402f8 	lw	a0,760(s8)
  403df8:	0c100998 	jal	402660 <open>
  403dfc:	00000000 	nop
  403e00:	afc2002c 	sw	v0,44(s8)
  403e04:	8fc2002c 	lw	v0,44(s8)
  403e08:	04410004 	bgez	v0,403e1c <spawn+0x44>
  403e0c:	00000000 	nop
		return fd;
  403e10:	8fc2002c 	lw	v0,44(s8)
  403e14:	1000011f 	b	404294 <spawn+0x4bc>
  403e18:	00000000 	nop
	// If that fails (where 'readn' returns a different size than expected),
	// set 'r' and 'goto err' to close the file and return the error.
	int r;
	u_char elfbuf[512];
	/* Exercise 6.4: Your code here. (1/6) */
	if (readn(fd, elfbuf, sizeof(Elf32_Ehdr)) < sizeof(Elf32_Ehdr)){
  403e1c:	27c20048 	addiu	v0,s8,72
  403e20:	24060034 	li	a2,52
  403e24:	00402825 	move	a1,v0
  403e28:	8fc4002c 	lw	a0,44(s8)
  403e2c:	0c100882 	jal	402208 <readn>
  403e30:	00000000 	nop
  403e34:	2c420034 	sltiu	v0,v0,52
  403e38:	10400005 	beqz	v0,403e50 <spawn+0x78>
  403e3c:	00000000 	nop
		r = -E_NOT_EXEC;
  403e40:	2402fff3 	li	v0,-13
  403e44:	afc20018 	sw	v0,24(s8)
		goto err;
  403e48:	1000010e 	b	404284 <spawn+0x4ac>
  403e4c:	00000000 	nop
	}
	
	const Elf32_Ehdr *ehdr = elf_from(elfbuf, sizeof(Elf32_Ehdr));
  403e50:	27c20048 	addiu	v0,s8,72
  403e54:	24050034 	li	a1,52
  403e58:	00402025 	move	a0,v0
  403e5c:	0c10125c 	jal	404970 <elf_from>
  403e60:	00000000 	nop
  403e64:	afc20030 	sw	v0,48(s8)
	if (!ehdr) {
  403e68:	8fc20030 	lw	v0,48(s8)
  403e6c:	14400005 	bnez	v0,403e84 <spawn+0xac>
  403e70:	00000000 	nop
		r = -E_NOT_EXEC;
  403e74:	2402fff3 	li	v0,-13
  403e78:	afc20018 	sw	v0,24(s8)
		goto err;
  403e7c:	10000101 	b	404284 <spawn+0x4ac>
  403e80:	00000000 	nop
	}
	u_long entrypoint = ehdr->e_entry;
  403e84:	8fc20030 	lw	v0,48(s8)
  403e88:	8c420018 	lw	v0,24(v0)
  403e8c:	afc20034 	sw	v0,52(s8)
  403e90:	afa00014 	sw	zero,20(sp)
  403e94:	afa00010 	sw	zero,16(sp)
  403e98:	00003825 	move	a3,zero
  403e9c:	00003025 	move	a2,zero
  403ea0:	00002825 	move	a1,zero
  403ea4:	24040009 	li	a0,9
  403ea8:	0c1000b8 	jal	4002e0 <msyscall>
  403eac:	00000000 	nop

	// Step 3: Create a child using 'syscall_exofork()' and store its envid in 'child'.
	// If the syscall fails, set 'r' and 'goto err'.
	u_int child;
	/* Exercise 6.4: Your code here. (2/6) */
	child = syscall_exofork();
  403eb0:	afc20248 	sw	v0,584(s8)
	}
	// Step 4: Use 'init_stack(child, argv, &sp)' to initialize the stack of the child.
	// 'goto err1' if that fails.
	u_int sp;
	/* Exercise 6.4: Your code here. (3/6) */
	if ((r = init_stack(child, argv, &sp)) < 0){
  403eb4:	8fc20248 	lw	v0,584(s8)
  403eb8:	27c3024c 	addiu	v1,s8,588
  403ebc:	00603025 	move	a2,v1
  403ec0:	8fc502fc 	lw	a1,764(s8)
  403ec4:	00402025 	move	a0,v0
  403ec8:	0c100e40 	jal	403900 <init_stack>
  403ecc:	00000000 	nop
  403ed0:	afc20018 	sw	v0,24(s8)
  403ed4:	8fc20018 	lw	v0,24(s8)
  403ed8:	044000d9 	bltz	v0,404240 <spawn+0x468>
  403edc:	00000000 	nop
		goto err1;
	}
	// Step 5: Load the ELF segments in the file into the child's memory.
	// This is similar to 'load_icode()' in the kernel.
	size_t ph_off;
	ELF_FOREACH_PHDR_OFF (ph_off, ehdr) {
  403ee0:	8fc20030 	lw	v0,48(s8)
  403ee4:	8c42001c 	lw	v0,28(v0)
  403ee8:	afc2001c 	sw	v0,28(s8)
  403eec:	afc00020 	sw	zero,32(s8)
  403ef0:	10000040 	b	403ff4 <spawn+0x21c>
  403ef4:	00000000 	nop
		// Read the program header in the file with offset 'ph_off' and length
		// 'ehdr->e_phentsize' into 'elfbuf'.
		// 'goto err1' on failure.
		// You may want to use 'seek' and 'readn'.
		/* Exercise 6.4: Your code here. (4/6) */
		if ((r = seek(fd, ph_off)) < 0){
  403ef8:	8fc5001c 	lw	a1,28(s8)
  403efc:	8fc4002c 	lw	a0,44(s8)
  403f00:	0c1008f5 	jal	4023d4 <seek>
  403f04:	00000000 	nop
  403f08:	afc20018 	sw	v0,24(s8)
  403f0c:	8fc20018 	lw	v0,24(s8)
  403f10:	044000ce 	bltz	v0,40424c <spawn+0x474>
  403f14:	00000000 	nop
			goto err1;
		}
		if (readn(fd, elfbuf, ehdr->e_phentsize) < ehdr->e_phentsize){
  403f18:	8fc20030 	lw	v0,48(s8)
  403f1c:	9442002a 	lhu	v0,42(v0)
  403f20:	27c30048 	addiu	v1,s8,72
  403f24:	00403025 	move	a2,v0
  403f28:	00602825 	move	a1,v1
  403f2c:	8fc4002c 	lw	a0,44(s8)
  403f30:	0c100882 	jal	402208 <readn>
  403f34:	00000000 	nop
  403f38:	00401825 	move	v1,v0
  403f3c:	8fc20030 	lw	v0,48(s8)
  403f40:	9442002a 	lhu	v0,42(v0)
  403f44:	0062102a 	slt	v0,v1,v0
  403f48:	144000c3 	bnez	v0,404258 <spawn+0x480>
  403f4c:	00000000 	nop
			goto err1;
		}
		Elf32_Phdr *ph = (Elf32_Phdr *)elfbuf;
  403f50:	27c20048 	addiu	v0,s8,72
  403f54:	afc20044 	sw	v0,68(s8)
		if (ph->p_type == PT_LOAD) {
  403f58:	8fc20044 	lw	v0,68(s8)
  403f5c:	8c430000 	lw	v1,0(v0)
  403f60:	24020001 	li	v0,1
  403f64:	1462001a 	bne	v1,v0,403fd0 <spawn+0x1f8>
  403f68:	00000000 	nop
			void *bin;
			// Read and map the ELF data in the file at 'ph->p_offset' into our memory
			// using 'read_map()'.
			// 'goto err1' if that fails.
			/* Exercise 6.4: Your code here. (5/6) */
			if((r = read_map(fd, ph->p_offset, &bin)) < 0){
  403f6c:	8fc20044 	lw	v0,68(s8)
  403f70:	8c420004 	lw	v0,4(v0)
  403f74:	27c302e8 	addiu	v1,s8,744
  403f78:	00603025 	move	a2,v1
  403f7c:	00402825 	move	a1,v0
  403f80:	8fc4002c 	lw	a0,44(s8)
  403f84:	0c100a7e 	jal	4029f8 <read_map>
  403f88:	00000000 	nop
  403f8c:	afc20018 	sw	v0,24(s8)
  403f90:	8fc20018 	lw	v0,24(s8)
  403f94:	044000b3 	bltz	v0,404264 <spawn+0x48c>
  403f98:	00000000 	nop
			}
			// Load the segment 'ph' into the child's memory using 'elf_load_seg()'.
			// Use 'spawn_mapper' as the callback, and '&child' as its data.
			// 'goto err1' if that fails.
			/* Exercise 6.4: Your code here. (6/6) */
			if((r = elf_load_seg(ph, bin, spawn_mapper, &child)) < 0){
  403f9c:	8fc302e8 	lw	v1,744(s8)
  403fa0:	27c20248 	addiu	v0,s8,584
  403fa4:	00403825 	move	a3,v0
  403fa8:	3c020040 	lui	v0,0x40
  403fac:	24463cb4 	addiu	a2,v0,15540
  403fb0:	00602825 	move	a1,v1
  403fb4:	8fc40044 	lw	a0,68(s8)
  403fb8:	0c101289 	jal	404a24 <elf_load_seg>
  403fbc:	00000000 	nop
  403fc0:	afc20018 	sw	v0,24(s8)
  403fc4:	8fc20018 	lw	v0,24(s8)
  403fc8:	044000a9 	bltz	v0,404270 <spawn+0x498>
  403fcc:	00000000 	nop
	ELF_FOREACH_PHDR_OFF (ph_off, ehdr) {
  403fd0:	8fc20020 	lw	v0,32(s8)
  403fd4:	24420001 	addiu	v0,v0,1
  403fd8:	afc20020 	sw	v0,32(s8)
  403fdc:	8fc20030 	lw	v0,48(s8)
  403fe0:	9442002a 	lhu	v0,42(v0)
  403fe4:	00401825 	move	v1,v0
  403fe8:	8fc2001c 	lw	v0,28(s8)
  403fec:	00431021 	addu	v0,v0,v1
  403ff0:	afc2001c 	sw	v0,28(s8)
  403ff4:	8fc20030 	lw	v0,48(s8)
  403ff8:	9442002c 	lhu	v0,44(v0)
  403ffc:	00401825 	move	v1,v0
  404000:	8fc20020 	lw	v0,32(s8)
  404004:	0043102a 	slt	v0,v0,v1
  404008:	1440ffbb 	bnez	v0,403ef8 <spawn+0x120>
  40400c:	00000000 	nop
				goto err1;
			}
		}
	}
	close(fd);
  404010:	8fc4002c 	lw	a0,44(s8)
  404014:	0c10074e 	jal	401d38 <close>
  404018:	00000000 	nop

	struct Trapframe tf = envs[ENVX(child)].env_tf;
  40401c:	8fc20248 	lw	v0,584(s8)
  404020:	304303ff 	andi	v1,v0,0x3ff
  404024:	00601025 	move	v0,v1
  404028:	00021180 	sll	v0,v0,0x6
  40402c:	00431023 	subu	v0,v0,v1
  404030:	000210c0 	sll	v0,v0,0x3
  404034:	00401825 	move	v1,v0
  404038:	3c027f40 	lui	v0,0x7f40
  40403c:	00621021 	addu	v0,v1,v0
  404040:	27c40250 	addiu	a0,s8,592
  404044:	00401825 	move	v1,v0
  404048:	24020098 	li	v0,152
  40404c:	00403025 	move	a2,v0
  404050:	00602825 	move	a1,v1
  404054:	0c101650 	jal	405940 <memcpy>
  404058:	00000000 	nop
	tf.cp0_epc = entrypoint;
  40405c:	8fc20034 	lw	v0,52(s8)
  404060:	afc202e4 	sw	v0,740(s8)
	tf.regs[29] = sp;
  404064:	8fc2024c 	lw	v0,588(s8)
  404068:	afc202c4 	sw	v0,708(s8)
	if ((r = syscall_set_trapframe(child, &tf)) != 0) {
  40406c:	8fc20248 	lw	v0,584(s8)
  404070:	27c30250 	addiu	v1,s8,592
  404074:	00602825 	move	a1,v1
  404078:	00402025 	move	a0,v0
  40407c:	0c100539 	jal	4014e4 <syscall_set_trapframe>
  404080:	00000000 	nop
  404084:	afc20018 	sw	v0,24(s8)
  404088:	8fc20018 	lw	v0,24(s8)
  40408c:	14400064 	bnez	v0,404220 <spawn+0x448>
  404090:	00000000 	nop
		goto err2;
	}

	// Pages with 'PTE_LIBRARY' set are shared between the parent and the child.
	for (u_int pdeno = 0; pdeno <= PDX(USTACKTOP); pdeno++) {
  404094:	afc00024 	sw	zero,36(s8)
  404098:	10000048 	b	4041bc <spawn+0x3e4>
  40409c:	00000000 	nop
		if (!(vpd[pdeno] & PTE_V)) {
  4040a0:	8fc20024 	lw	v0,36(s8)
  4040a4:	00021880 	sll	v1,v0,0x2
  4040a8:	3c027fdf 	lui	v0,0x7fdf
  4040ac:	3442f000 	ori	v0,v0,0xf000
  4040b0:	00621021 	addu	v0,v1,v0
  4040b4:	8c420000 	lw	v0,0(v0)
  4040b8:	30420080 	andi	v0,v0,0x80
  4040bc:	1040003b 	beqz	v0,4041ac <spawn+0x3d4>
  4040c0:	00000000 	nop
			continue;
		}
		for (u_int pteno = 0; pteno <= PTX(~0); pteno++) {
  4040c4:	afc00028 	sw	zero,40(s8)
  4040c8:	10000032 	b	404194 <spawn+0x3bc>
  4040cc:	00000000 	nop
			u_int pn = (pdeno << 10) + pteno;
  4040d0:	8fc20024 	lw	v0,36(s8)
  4040d4:	00021280 	sll	v0,v0,0xa
  4040d8:	8fc30028 	lw	v1,40(s8)
  4040dc:	00621021 	addu	v0,v1,v0
  4040e0:	afc20038 	sw	v0,56(s8)
			u_int perm = vpt[pn] & ((1 << PGSHIFT) - 1);
  4040e4:	8fc20038 	lw	v0,56(s8)
  4040e8:	00021880 	sll	v1,v0,0x2
  4040ec:	3c027fc0 	lui	v0,0x7fc0
  4040f0:	00621021 	addu	v0,v1,v0
  4040f4:	8c420000 	lw	v0,0(v0)
  4040f8:	30420fff 	andi	v0,v0,0xfff
  4040fc:	afc2003c 	sw	v0,60(s8)
			if ((perm & PTE_V) && (perm & PTE_LIBRARY)) {
  404100:	8fc2003c 	lw	v0,60(s8)
  404104:	30420080 	andi	v0,v0,0x80
  404108:	1040001f 	beqz	v0,404188 <spawn+0x3b0>
  40410c:	00000000 	nop
  404110:	8fc2003c 	lw	v0,60(s8)
  404114:	30420002 	andi	v0,v0,0x2
  404118:	1040001b 	beqz	v0,404188 <spawn+0x3b0>
  40411c:	00000000 	nop
				void *va = (void *)(pn << PGSHIFT);
  404120:	8fc20038 	lw	v0,56(s8)
  404124:	00021300 	sll	v0,v0,0xc
  404128:	afc20040 	sw	v0,64(s8)

				if ((r = syscall_mem_map(0, va, child, va, perm)) < 0) {
  40412c:	8fc30248 	lw	v1,584(s8)
  404130:	8fc2003c 	lw	v0,60(s8)
  404134:	afa20010 	sw	v0,16(sp)
  404138:	8fc70040 	lw	a3,64(s8)
  40413c:	00603025 	move	a2,v1
  404140:	8fc50040 	lw	a1,64(s8)
  404144:	00002025 	move	a0,zero
  404148:	0c1004ff 	jal	4013fc <syscall_mem_map>
  40414c:	00000000 	nop
  404150:	afc20018 	sw	v0,24(s8)
  404154:	8fc20018 	lw	v0,24(s8)
  404158:	0441000b 	bgez	v0,404188 <spawn+0x3b0>
  40415c:	00000000 	nop
					debugf("spawn: syscall_mem_map %x %x: %d\n", va, child, r);
  404160:	8fc20248 	lw	v0,584(s8)
  404164:	8fc70018 	lw	a3,24(s8)
  404168:	00403025 	move	a2,v0
  40416c:	8fc50040 	lw	a1,64(s8)
  404170:	3c020040 	lui	v0,0x40
  404174:	244461f0 	addiu	a0,v0,25072
  404178:	0c100141 	jal	400504 <debugf>
  40417c:	00000000 	nop
					goto err2;
  404180:	10000028 	b	404224 <spawn+0x44c>
  404184:	00000000 	nop
		for (u_int pteno = 0; pteno <= PTX(~0); pteno++) {
  404188:	8fc20028 	lw	v0,40(s8)
  40418c:	24420001 	addiu	v0,v0,1
  404190:	afc20028 	sw	v0,40(s8)
  404194:	8fc20028 	lw	v0,40(s8)
  404198:	2c420400 	sltiu	v0,v0,1024
  40419c:	1440ffcc 	bnez	v0,4040d0 <spawn+0x2f8>
  4041a0:	00000000 	nop
  4041a4:	10000002 	b	4041b0 <spawn+0x3d8>
  4041a8:	00000000 	nop
			continue;
  4041ac:	00000000 	nop
	for (u_int pdeno = 0; pdeno <= PDX(USTACKTOP); pdeno++) {
  4041b0:	8fc20024 	lw	v0,36(s8)
  4041b4:	24420001 	addiu	v0,v0,1
  4041b8:	afc20024 	sw	v0,36(s8)
  4041bc:	8fc20024 	lw	v0,36(s8)
  4041c0:	2c4201fd 	sltiu	v0,v0,509
  4041c4:	1440ffb6 	bnez	v0,4040a0 <spawn+0x2c8>
  4041c8:	00000000 	nop
				}
			}
		}
	}

	if ((r = syscall_set_env_status(child, ENV_RUNNABLE)) < 0) {
  4041cc:	8fc20248 	lw	v0,584(s8)
  4041d0:	24050001 	li	a1,1
  4041d4:	00402025 	move	a0,v0
  4041d8:	0c100528 	jal	4014a0 <syscall_set_env_status>
  4041dc:	00000000 	nop
  4041e0:	afc20018 	sw	v0,24(s8)
  4041e4:	8fc20018 	lw	v0,24(s8)
  4041e8:	0441000a 	bgez	v0,404214 <spawn+0x43c>
  4041ec:	00000000 	nop
		debugf("spawn: syscall_set_env_status %x: %d\n", child, r);
  4041f0:	8fc20248 	lw	v0,584(s8)
  4041f4:	8fc60018 	lw	a2,24(s8)
  4041f8:	00402825 	move	a1,v0
  4041fc:	3c020040 	lui	v0,0x40
  404200:	24446214 	addiu	a0,v0,25108
  404204:	0c100141 	jal	400504 <debugf>
  404208:	00000000 	nop
		goto err2;
  40420c:	10000005 	b	404224 <spawn+0x44c>
  404210:	00000000 	nop
	}
	return child;
  404214:	8fc20248 	lw	v0,584(s8)
  404218:	1000001e 	b	404294 <spawn+0x4bc>
  40421c:	00000000 	nop
		goto err2;
  404220:	00000000 	nop

err2:
	syscall_env_destroy(child);
  404224:	8fc20248 	lw	v0,584(s8)
  404228:	00402025 	move	a0,v0
  40422c:	0c1004cc 	jal	401330 <syscall_env_destroy>
  404230:	00000000 	nop
	return r;
  404234:	8fc20018 	lw	v0,24(s8)
  404238:	10000016 	b	404294 <spawn+0x4bc>
  40423c:	00000000 	nop
		goto err1;
  404240:	00000000 	nop
  404244:	1000000b 	b	404274 <spawn+0x49c>
  404248:	00000000 	nop
			goto err1;
  40424c:	00000000 	nop
  404250:	10000008 	b	404274 <spawn+0x49c>
  404254:	00000000 	nop
			goto err1;
  404258:	00000000 	nop
  40425c:	10000005 	b	404274 <spawn+0x49c>
  404260:	00000000 	nop
				goto err1;
  404264:	00000000 	nop
  404268:	10000002 	b	404274 <spawn+0x49c>
  40426c:	00000000 	nop
				goto err1;
  404270:	00000000 	nop
err1:
	syscall_env_destroy(child);
  404274:	8fc20248 	lw	v0,584(s8)
  404278:	00402025 	move	a0,v0
  40427c:	0c1004cc 	jal	401330 <syscall_env_destroy>
  404280:	00000000 	nop
err:
	close(fd);
  404284:	8fc4002c 	lw	a0,44(s8)
  404288:	0c10074e 	jal	401d38 <close>
  40428c:	00000000 	nop
	return r;
  404290:	8fc20018 	lw	v0,24(s8)
}
  404294:	03c0e825 	move	sp,s8
  404298:	8fbf02f4 	lw	ra,756(sp)
  40429c:	8fbe02f0 	lw	s8,752(sp)
  4042a0:	27bd02f8 	addiu	sp,sp,760
  4042a4:	03e00008 	jr	ra
  4042a8:	00000000 	nop

004042ac <spawnl>:

int spawnl(char *prog, char *args, ...) {
  4042ac:	27bdffe8 	addiu	sp,sp,-24
  4042b0:	afbf0014 	sw	ra,20(sp)
  4042b4:	afbe0010 	sw	s8,16(sp)
  4042b8:	03a0f025 	move	s8,sp
  4042bc:	afc40018 	sw	a0,24(s8)
  4042c0:	afc5001c 	sw	a1,28(s8)
  4042c4:	afc60020 	sw	a2,32(s8)
  4042c8:	afc70024 	sw	a3,36(s8)
	// Thanks to MIPS calling convention, the layout of arguments on the stack
	// are straightforward.
	return spawn(prog, &args);
  4042cc:	27c2001c 	addiu	v0,s8,28
  4042d0:	00402825 	move	a1,v0
  4042d4:	8fc40018 	lw	a0,24(s8)
  4042d8:	0c100f76 	jal	403dd8 <spawn>
  4042dc:	00000000 	nop
}
  4042e0:	03c0e825 	move	sp,s8
  4042e4:	8fbf0014 	lw	ra,20(sp)
  4042e8:	8fbe0010 	lw	s8,16(sp)
  4042ec:	27bd0018 	addiu	sp,sp,24
  4042f0:	03e00008 	jr	ra
  4042f4:	00000000 	nop
	...

00404300 <pipe>:
 * Post-Condition:
 *   Return 0 and set 'pfd[0]' to the read end and 'pfd[1]' to the
 *   write end of the pipe on success.
 *   Return an corresponding error code on error.
 */
int pipe(int pfd[2]) {
  404300:	27bdffc8 	addiu	sp,sp,-56
  404304:	afbf0034 	sw	ra,52(sp)
  404308:	afbe0030 	sw	s8,48(sp)
  40430c:	afb0002c 	sw	s0,44(sp)
  404310:	03a0f025 	move	s8,sp
  404314:	afc40038 	sw	a0,56(s8)
	int r;
	void *va;
	struct Fd *fd0, *fd1;

	/* Step 1: Allocate the file descriptors. */
	if ((r = fd_alloc(&fd0)) < 0 || (r = syscall_mem_alloc(0, fd0, PTE_D | PTE_LIBRARY)) < 0) {
  404318:	27c20020 	addiu	v0,s8,32
  40431c:	00402025 	move	a0,v0
  404320:	0c1006a7 	jal	401a9c <fd_alloc>
  404324:	00000000 	nop
  404328:	afc20018 	sw	v0,24(s8)
  40432c:	8fc20018 	lw	v0,24(s8)
  404330:	04400080 	bltz	v0,404534 <pipe+0x234>
  404334:	00000000 	nop
  404338:	8fc20020 	lw	v0,32(s8)
  40433c:	24060102 	li	a2,258
  404340:	00402825 	move	a1,v0
  404344:	00002025 	move	a0,zero
  404348:	0c1004ec 	jal	4013b0 <syscall_mem_alloc>
  40434c:	00000000 	nop
  404350:	afc20018 	sw	v0,24(s8)
  404354:	8fc20018 	lw	v0,24(s8)
  404358:	04400076 	bltz	v0,404534 <pipe+0x234>
  40435c:	00000000 	nop
		goto err;
	}

	if ((r = fd_alloc(&fd1)) < 0 || (r = syscall_mem_alloc(0, fd1, PTE_D | PTE_LIBRARY)) < 0) {
  404360:	27c20024 	addiu	v0,s8,36
  404364:	00402025 	move	a0,v0
  404368:	0c1006a7 	jal	401a9c <fd_alloc>
  40436c:	00000000 	nop
  404370:	afc20018 	sw	v0,24(s8)
  404374:	8fc20018 	lw	v0,24(s8)
  404378:	04400066 	bltz	v0,404514 <pipe+0x214>
  40437c:	00000000 	nop
  404380:	8fc20024 	lw	v0,36(s8)
  404384:	24060102 	li	a2,258
  404388:	00402825 	move	a1,v0
  40438c:	00002025 	move	a0,zero
  404390:	0c1004ec 	jal	4013b0 <syscall_mem_alloc>
  404394:	00000000 	nop
  404398:	afc20018 	sw	v0,24(s8)
  40439c:	8fc20018 	lw	v0,24(s8)
  4043a0:	0440005c 	bltz	v0,404514 <pipe+0x214>
  4043a4:	00000000 	nop
		goto err1;
	}

	/* Step 2: Allocate and map the page for the 'Pipe' structure. */
	va = fd2data(fd0);
  4043a8:	8fc20020 	lw	v0,32(s8)
  4043ac:	00402025 	move	a0,v0
  4043b0:	0c100723 	jal	401c8c <fd2data>
  4043b4:	00000000 	nop
  4043b8:	afc2001c 	sw	v0,28(s8)
	if ((r = syscall_mem_alloc(0, (void *)va, PTE_D | PTE_LIBRARY)) < 0) {
  4043bc:	24060102 	li	a2,258
  4043c0:	8fc5001c 	lw	a1,28(s8)
  4043c4:	00002025 	move	a0,zero
  4043c8:	0c1004ec 	jal	4013b0 <syscall_mem_alloc>
  4043cc:	00000000 	nop
  4043d0:	afc20018 	sw	v0,24(s8)
  4043d4:	8fc20018 	lw	v0,24(s8)
  4043d8:	04400046 	bltz	v0,4044f4 <pipe+0x1f4>
  4043dc:	00000000 	nop
		goto err2;
	}
	if ((r = syscall_mem_map(0, (void *)va, 0, (void *)fd2data(fd1), PTE_D | PTE_LIBRARY)) <
  4043e0:	8fc20024 	lw	v0,36(s8)
  4043e4:	00402025 	move	a0,v0
  4043e8:	0c100723 	jal	401c8c <fd2data>
  4043ec:	00000000 	nop
  4043f0:	00401825 	move	v1,v0
  4043f4:	24020102 	li	v0,258
  4043f8:	afa20010 	sw	v0,16(sp)
  4043fc:	00603825 	move	a3,v1
  404400:	00003025 	move	a2,zero
  404404:	8fc5001c 	lw	a1,28(s8)
  404408:	00002025 	move	a0,zero
  40440c:	0c1004ff 	jal	4013fc <syscall_mem_map>
  404410:	00000000 	nop
  404414:	afc20018 	sw	v0,24(s8)
  404418:	8fc20018 	lw	v0,24(s8)
  40441c:	0440002e 	bltz	v0,4044d8 <pipe+0x1d8>
  404420:	00000000 	nop
	    0) {
		goto err3;
	}

	/* Step 3: Set up 'Fd' structures. */
	fd0->fd_dev_id = devpipe.dev_id;
  404424:	3c020040 	lui	v0,0x40
  404428:	8c437050 	lw	v1,28752(v0)
  40442c:	8fc20020 	lw	v0,32(s8)
  404430:	ac430000 	sw	v1,0(v0)
	fd0->fd_omode = O_RDONLY;
  404434:	8fc20020 	lw	v0,32(s8)
  404438:	ac400008 	sw	zero,8(v0)

	fd1->fd_dev_id = devpipe.dev_id;
  40443c:	3c020040 	lui	v0,0x40
  404440:	8c437050 	lw	v1,28752(v0)
  404444:	8fc20024 	lw	v0,36(s8)
  404448:	ac430000 	sw	v1,0(v0)
	fd1->fd_omode = O_WRONLY;
  40444c:	8fc20024 	lw	v0,36(s8)
  404450:	24030001 	li	v1,1
  404454:	ac430008 	sw	v1,8(v0)

	debugf("[%08x] pipecreate \n", env->env_id, vpt[VPN(va)]);
  404458:	3c020041 	lui	v0,0x41
  40445c:	8c428010 	lw	v0,-32752(v0)
  404460:	8c4400a0 	lw	a0,160(v0)
  404464:	8fc2001c 	lw	v0,28(s8)
  404468:	00021302 	srl	v0,v0,0xc
  40446c:	00021880 	sll	v1,v0,0x2
  404470:	3c027fc0 	lui	v0,0x7fc0
  404474:	00621021 	addu	v0,v1,v0
  404478:	8c420000 	lw	v0,0(v0)
  40447c:	00403025 	move	a2,v0
  404480:	00802825 	move	a1,a0
  404484:	3c020040 	lui	v0,0x40
  404488:	24446248 	addiu	a0,v0,25160
  40448c:	0c100141 	jal	400504 <debugf>
  404490:	00000000 	nop

	/* Step 4: Save the result. */
	pfd[0] = fd2num(fd0);
  404494:	8fc20020 	lw	v0,32(s8)
  404498:	00402025 	move	a0,v0
  40449c:	0c100733 	jal	401ccc <fd2num>
  4044a0:	00000000 	nop
  4044a4:	00401825 	move	v1,v0
  4044a8:	8fc20038 	lw	v0,56(s8)
  4044ac:	ac430000 	sw	v1,0(v0)
	pfd[1] = fd2num(fd1);
  4044b0:	8fc30024 	lw	v1,36(s8)
  4044b4:	8fc20038 	lw	v0,56(s8)
  4044b8:	24500004 	addiu	s0,v0,4
  4044bc:	00602025 	move	a0,v1
  4044c0:	0c100733 	jal	401ccc <fd2num>
  4044c4:	00000000 	nop
  4044c8:	ae020000 	sw	v0,0(s0)
	return 0;
  4044cc:	00001025 	move	v0,zero
  4044d0:	1000001a 	b	40453c <pipe+0x23c>
  4044d4:	00000000 	nop
		goto err3;
  4044d8:	00000000 	nop

err3:
	syscall_mem_unmap(0, (void *)va);
  4044dc:	8fc5001c 	lw	a1,28(s8)
  4044e0:	00002025 	move	a0,zero
  4044e4:	0c100517 	jal	40145c <syscall_mem_unmap>
  4044e8:	00000000 	nop
  4044ec:	10000002 	b	4044f8 <pipe+0x1f8>
  4044f0:	00000000 	nop
		goto err2;
  4044f4:	00000000 	nop
err2:
	syscall_mem_unmap(0, fd1);
  4044f8:	8fc20024 	lw	v0,36(s8)
  4044fc:	00402825 	move	a1,v0
  404500:	00002025 	move	a0,zero
  404504:	0c100517 	jal	40145c <syscall_mem_unmap>
  404508:	00000000 	nop
  40450c:	10000002 	b	404518 <pipe+0x218>
  404510:	00000000 	nop
		goto err1;
  404514:	00000000 	nop
err1:
	syscall_mem_unmap(0, fd0);
  404518:	8fc20020 	lw	v0,32(s8)
  40451c:	00402825 	move	a1,v0
  404520:	00002025 	move	a0,zero
  404524:	0c100517 	jal	40145c <syscall_mem_unmap>
  404528:	00000000 	nop
  40452c:	10000002 	b	404538 <pipe+0x238>
  404530:	00000000 	nop
		goto err;
  404534:	00000000 	nop
err:
	return r;
  404538:	8fc20018 	lw	v0,24(s8)
}
  40453c:	03c0e825 	move	sp,s8
  404540:	8fbf0034 	lw	ra,52(sp)
  404544:	8fbe0030 	lw	s8,48(sp)
  404548:	8fb0002c 	lw	s0,44(sp)
  40454c:	27bd0038 	addiu	sp,sp,56
  404550:	03e00008 	jr	ra
  404554:	00000000 	nop

00404558 <_pipe_is_closed>:
 *
 * Hint:
 *   Use 'pageref' to get the reference count for
 *   the physical page mapped by the virtual page.
 */
static int _pipe_is_closed(struct Fd *fd, struct Pipe *p) {
  404558:	27bdffd8 	addiu	sp,sp,-40
  40455c:	afbf0024 	sw	ra,36(sp)
  404560:	afbe0020 	sw	s8,32(sp)
  404564:	03a0f025 	move	s8,sp
  404568:	afc40028 	sw	a0,40(s8)
  40456c:	afc5002c 	sw	a1,44(s8)
	// save them to 'fd_ref' and 'pipe_ref'.
	// Keep retrying until 'env->env_runs' is unchanged before and after
	// reading the reference counts.
	/* Exercise 6.1: Your code here. (1/3) */
	do{
		runs = env->env_runs;
  404570:	3c020041 	lui	v0,0x41
  404574:	8c428010 	lw	v0,-32752(v0)
  404578:	8c4200d8 	lw	v0,216(v0)
  40457c:	afc20010 	sw	v0,16(s8)
		fd_ref = pageref(fd);
  404580:	8fc40028 	lw	a0,40(s8)
  404584:	0c100968 	jal	4025a0 <pageref>
  404588:	00000000 	nop
  40458c:	afc20014 	sw	v0,20(s8)
		pipe_ref = pageref(p);
  404590:	8fc4002c 	lw	a0,44(s8)
  404594:	0c100968 	jal	4025a0 <pageref>
  404598:	00000000 	nop
  40459c:	afc20018 	sw	v0,24(s8)
	}
	while(runs != env->env_runs);	
  4045a0:	3c020041 	lui	v0,0x41
  4045a4:	8c428010 	lw	v0,-32752(v0)
  4045a8:	8c4300d8 	lw	v1,216(v0)
  4045ac:	8fc20010 	lw	v0,16(s8)
  4045b0:	1462ffef 	bne	v1,v0,404570 <_pipe_is_closed+0x18>
  4045b4:	00000000 	nop

	return fd_ref == pipe_ref;
  4045b8:	8fc30014 	lw	v1,20(s8)
  4045bc:	8fc20018 	lw	v0,24(s8)
  4045c0:	00621026 	xor	v0,v1,v0
  4045c4:	2c420001 	sltiu	v0,v0,1
  4045c8:	304200ff 	andi	v0,v0,0xff
}
  4045cc:	03c0e825 	move	sp,s8
  4045d0:	8fbf0024 	lw	ra,36(sp)
  4045d4:	8fbe0020 	lw	s8,32(sp)
  4045d8:	27bd0028 	addiu	sp,sp,40
  4045dc:	03e00008 	jr	ra
  4045e0:	00000000 	nop

004045e4 <pipe_read>:
 * Hint:
 *   Use 'fd2data' to get the 'Pipe' referred by 'fd'.
 *   Use '_pipe_is_closed' to check if the pipe is closed.
 *   The parameter 'offset' isn't used here.
 */
static int pipe_read(struct Fd *fd, void *vbuf, u_int n, u_int offset) {
  4045e4:	27bdffd8 	addiu	sp,sp,-40
  4045e8:	afbf0024 	sw	ra,36(sp)
  4045ec:	afbe0020 	sw	s8,32(sp)
  4045f0:	03a0f025 	move	s8,sp
  4045f4:	afc40028 	sw	a0,40(s8)
  4045f8:	afc5002c 	sw	a1,44(s8)
  4045fc:	afc60030 	sw	a2,48(s8)
  404600:	afc70034 	sw	a3,52(s8)
	// When the pipe buffer is empty:
	//  - If at least 1 byte is read, or the pipe is closed, just return the number
	//    of bytes read so far.
	//  - Otherwise, keep yielding until the buffer isn't empty or the pipe is closed.
	/* Exercise 6.1: Your code here. (2/3) */
	p = (struct Pipe *)fd2data(fd);
  404604:	8fc40028 	lw	a0,40(s8)
  404608:	0c100723 	jal	401c8c <fd2data>
  40460c:	00000000 	nop
  404610:	afc20014 	sw	v0,20(s8)
	for(i = 0; i < n && !_pipe_is_closed(fd, p); i++){
  404614:	afc00010 	sw	zero,16(s8)
  404618:	1000002e 	b	4046d4 <pipe_read+0xf0>
  40461c:	00000000 	nop
		rbuf = p->p_buf;
  404620:	8fc20014 	lw	v0,20(s8)
  404624:	24420008 	addiu	v0,v0,8
  404628:	afc20018 	sw	v0,24(s8)
		while(p->p_rpos >= p->p_wpos && !_pipe_is_closed(fd, p)){
  40462c:	10000003 	b	40463c <pipe_read+0x58>
  404630:	00000000 	nop
			syscall_yield();
  404634:	0c1004be 	jal	4012f8 <syscall_yield>
  404638:	00000000 	nop
		while(p->p_rpos >= p->p_wpos && !_pipe_is_closed(fd, p)){
  40463c:	8fc20014 	lw	v0,20(s8)
  404640:	8c430000 	lw	v1,0(v0)
  404644:	8fc20014 	lw	v0,20(s8)
  404648:	8c420004 	lw	v0,4(v0)
  40464c:	0062102b 	sltu	v0,v1,v0
  404650:	14400007 	bnez	v0,404670 <pipe_read+0x8c>
  404654:	00000000 	nop
  404658:	8fc50014 	lw	a1,20(s8)
  40465c:	8fc40028 	lw	a0,40(s8)
  404660:	0c101156 	jal	404558 <_pipe_is_closed>
  404664:	00000000 	nop
  404668:	1040fff2 	beqz	v0,404634 <pipe_read+0x50>
  40466c:	00000000 	nop
		}
		if(p->p_rpos < p->p_wpos){
  404670:	8fc20014 	lw	v0,20(s8)
  404674:	8c430000 	lw	v1,0(v0)
  404678:	8fc20014 	lw	v0,20(s8)
  40467c:	8c420004 	lw	v0,4(v0)
  404680:	0062102b 	sltu	v0,v1,v0
  404684:	10400010 	beqz	v0,4046c8 <pipe_read+0xe4>
  404688:	00000000 	nop
			((char *) vbuf)[i] = rbuf[p->p_rpos % PIPE_SIZE];
  40468c:	8fc20014 	lw	v0,20(s8)
  404690:	8c420000 	lw	v0,0(v0)
  404694:	3042001f 	andi	v0,v0,0x1f
  404698:	8fc30018 	lw	v1,24(s8)
  40469c:	00621821 	addu	v1,v1,v0
  4046a0:	8fc20010 	lw	v0,16(s8)
  4046a4:	8fc4002c 	lw	a0,44(s8)
  4046a8:	00821021 	addu	v0,a0,v0
  4046ac:	80630000 	lb	v1,0(v1)
  4046b0:	a0430000 	sb	v1,0(v0)
			p->p_rpos++;
  4046b4:	8fc20014 	lw	v0,20(s8)
  4046b8:	8c420000 	lw	v0,0(v0)
  4046bc:	24430001 	addiu	v1,v0,1
  4046c0:	8fc20014 	lw	v0,20(s8)
  4046c4:	ac430000 	sw	v1,0(v0)
	for(i = 0; i < n && !_pipe_is_closed(fd, p); i++){
  4046c8:	8fc20010 	lw	v0,16(s8)
  4046cc:	24420001 	addiu	v0,v0,1
  4046d0:	afc20010 	sw	v0,16(s8)
  4046d4:	8fc20010 	lw	v0,16(s8)
  4046d8:	8fc30030 	lw	v1,48(s8)
  4046dc:	0043102b 	sltu	v0,v0,v1
  4046e0:	10400007 	beqz	v0,404700 <pipe_read+0x11c>
  4046e4:	00000000 	nop
  4046e8:	8fc50014 	lw	a1,20(s8)
  4046ec:	8fc40028 	lw	a0,40(s8)
  4046f0:	0c101156 	jal	404558 <_pipe_is_closed>
  4046f4:	00000000 	nop
  4046f8:	1040ffc9 	beqz	v0,404620 <pipe_read+0x3c>
  4046fc:	00000000 	nop
		}
	}
	return i;
  404700:	8fc20010 	lw	v0,16(s8)

	user_panic("pipe_read not implemented");
}
  404704:	03c0e825 	move	sp,s8
  404708:	8fbf0024 	lw	ra,36(sp)
  40470c:	8fbe0020 	lw	s8,32(sp)
  404710:	27bd0028 	addiu	sp,sp,40
  404714:	03e00008 	jr	ra
  404718:	00000000 	nop

0040471c <pipe_write>:
 * Hint:
 *   Use 'fd2data' to get the 'Pipe' referred by 'fd'.
 *   Use '_pipe_is_closed' to judge if the pipe is closed.
 *   The parameter 'offset' isn't used here.
 */
static int pipe_write(struct Fd *fd, const void *vbuf, u_int n, u_int offset) {
  40471c:	27bdffd8 	addiu	sp,sp,-40
  404720:	afbf0024 	sw	ra,36(sp)
  404724:	afbe0020 	sw	s8,32(sp)
  404728:	03a0f025 	move	s8,sp
  40472c:	afc40028 	sw	a0,40(s8)
  404730:	afc5002c 	sw	a1,44(s8)
  404734:	afc60030 	sw	a2,48(s8)
  404738:	afc70034 	sw	a3,52(s8)
	// When the pipe buffer is full:
	//  - If the pipe is closed, just return the number of bytes written so far.
	//  - If the pipe isn't closed, keep yielding until the buffer isn't full or the
	//    pipe is closed.
	/* Exercise 6.1: Your code here. (3/3) */
	p = (struct Pipe *)fd2data(fd);
  40473c:	8fc40028 	lw	a0,40(s8)
  404740:	0c100723 	jal	401c8c <fd2data>
  404744:	00000000 	nop
  404748:	afc20014 	sw	v0,20(s8)
	for(i = 0; i < n && !_pipe_is_closed(fd, p); i++){
  40474c:	afc00010 	sw	zero,16(s8)
  404750:	10000030 	b	404814 <pipe_write+0xf8>
  404754:	00000000 	nop
		wbuf = p->p_buf;
  404758:	8fc20014 	lw	v0,20(s8)
  40475c:	24420008 	addiu	v0,v0,8
  404760:	afc20018 	sw	v0,24(s8)
		while(p->p_wpos - p->p_rpos >= PIPE_SIZE && !_pipe_is_closed(fd, p)){
  404764:	10000003 	b	404774 <pipe_write+0x58>
  404768:	00000000 	nop
			syscall_yield();
  40476c:	0c1004be 	jal	4012f8 <syscall_yield>
  404770:	00000000 	nop
		while(p->p_wpos - p->p_rpos >= PIPE_SIZE && !_pipe_is_closed(fd, p)){
  404774:	8fc20014 	lw	v0,20(s8)
  404778:	8c430004 	lw	v1,4(v0)
  40477c:	8fc20014 	lw	v0,20(s8)
  404780:	8c420000 	lw	v0,0(v0)
  404784:	00621023 	subu	v0,v1,v0
  404788:	2c420020 	sltiu	v0,v0,32
  40478c:	14400007 	bnez	v0,4047ac <pipe_write+0x90>
  404790:	00000000 	nop
  404794:	8fc50014 	lw	a1,20(s8)
  404798:	8fc40028 	lw	a0,40(s8)
  40479c:	0c101156 	jal	404558 <_pipe_is_closed>
  4047a0:	00000000 	nop
  4047a4:	1040fff1 	beqz	v0,40476c <pipe_write+0x50>
  4047a8:	00000000 	nop
		}
		if(p->p_wpos - p->p_rpos < PIPE_SIZE){
  4047ac:	8fc20014 	lw	v0,20(s8)
  4047b0:	8c430004 	lw	v1,4(v0)
  4047b4:	8fc20014 	lw	v0,20(s8)
  4047b8:	8c420000 	lw	v0,0(v0)
  4047bc:	00621023 	subu	v0,v1,v0
  4047c0:	2c420020 	sltiu	v0,v0,32
  4047c4:	10400010 	beqz	v0,404808 <pipe_write+0xec>
  4047c8:	00000000 	nop
			wbuf[p->p_wpos % PIPE_SIZE] = ((char *) vbuf)[i];
  4047cc:	8fc20010 	lw	v0,16(s8)
  4047d0:	8fc3002c 	lw	v1,44(s8)
  4047d4:	00621821 	addu	v1,v1,v0
  4047d8:	8fc20014 	lw	v0,20(s8)
  4047dc:	8c420004 	lw	v0,4(v0)
  4047e0:	3042001f 	andi	v0,v0,0x1f
  4047e4:	8fc40018 	lw	a0,24(s8)
  4047e8:	00821021 	addu	v0,a0,v0
  4047ec:	80630000 	lb	v1,0(v1)
  4047f0:	a0430000 	sb	v1,0(v0)
			p->p_wpos++;
  4047f4:	8fc20014 	lw	v0,20(s8)
  4047f8:	8c420004 	lw	v0,4(v0)
  4047fc:	24430001 	addiu	v1,v0,1
  404800:	8fc20014 	lw	v0,20(s8)
  404804:	ac430004 	sw	v1,4(v0)
	for(i = 0; i < n && !_pipe_is_closed(fd, p); i++){
  404808:	8fc20010 	lw	v0,16(s8)
  40480c:	24420001 	addiu	v0,v0,1
  404810:	afc20010 	sw	v0,16(s8)
  404814:	8fc20010 	lw	v0,16(s8)
  404818:	8fc30030 	lw	v1,48(s8)
  40481c:	0043102b 	sltu	v0,v0,v1
  404820:	10400007 	beqz	v0,404840 <pipe_write+0x124>
  404824:	00000000 	nop
  404828:	8fc50014 	lw	a1,20(s8)
  40482c:	8fc40028 	lw	a0,40(s8)
  404830:	0c101156 	jal	404558 <_pipe_is_closed>
  404834:	00000000 	nop
  404838:	1040ffc7 	beqz	v0,404758 <pipe_write+0x3c>
  40483c:	00000000 	nop
		}
	}
	return i;
  404840:	8fc20010 	lw	v0,16(s8)

	user_panic("pipe_write not implemented");

	return n;
}
  404844:	03c0e825 	move	sp,s8
  404848:	8fbf0024 	lw	ra,36(sp)
  40484c:	8fbe0020 	lw	s8,32(sp)
  404850:	27bd0028 	addiu	sp,sp,40
  404854:	03e00008 	jr	ra
  404858:	00000000 	nop

0040485c <pipe_is_closed>:
 *   Return -E_INVAL if 'fdnum' is invalid or unmapped.
 *
 * Hint:
 *   Use '_pipe_is_closed'.
 */
int pipe_is_closed(int fdnum) {
  40485c:	27bdffd8 	addiu	sp,sp,-40
  404860:	afbf0024 	sw	ra,36(sp)
  404864:	afbe0020 	sw	s8,32(sp)
  404868:	03a0f025 	move	s8,sp
  40486c:	afc40028 	sw	a0,40(s8)
	struct Fd *fd;
	struct Pipe *p;
	int r;

	// Step 1: Get the 'fd' referred by 'fdnum'.
	if ((r = fd_lookup(fdnum, &fd)) < 0) {
  404870:	27c20018 	addiu	v0,s8,24
  404874:	00402825 	move	a1,v0
  404878:	8fc40028 	lw	a0,40(s8)
  40487c:	0c1006fc 	jal	401bf0 <fd_lookup>
  404880:	00000000 	nop
  404884:	afc20010 	sw	v0,16(s8)
  404888:	8fc20010 	lw	v0,16(s8)
  40488c:	04410004 	bgez	v0,4048a0 <pipe_is_closed+0x44>
  404890:	00000000 	nop
		return r;
  404894:	8fc20010 	lw	v0,16(s8)
  404898:	1000000b 	b	4048c8 <pipe_is_closed+0x6c>
  40489c:	00000000 	nop
	}
	// Step 2: Get the 'Pipe' referred by 'fd'.
	p = (struct Pipe *)fd2data(fd);
  4048a0:	8fc20018 	lw	v0,24(s8)
  4048a4:	00402025 	move	a0,v0
  4048a8:	0c100723 	jal	401c8c <fd2data>
  4048ac:	00000000 	nop
  4048b0:	afc20014 	sw	v0,20(s8)
	// Step 3: Use '_pipe_is_closed' to judge if the pipe is closed.
	return _pipe_is_closed(fd, p);
  4048b4:	8fc20018 	lw	v0,24(s8)
  4048b8:	8fc50014 	lw	a1,20(s8)
  4048bc:	00402025 	move	a0,v0
  4048c0:	0c101156 	jal	404558 <_pipe_is_closed>
  4048c4:	00000000 	nop
}
  4048c8:	03c0e825 	move	sp,s8
  4048cc:	8fbf0024 	lw	ra,36(sp)
  4048d0:	8fbe0020 	lw	s8,32(sp)
  4048d4:	27bd0028 	addiu	sp,sp,40
  4048d8:	03e00008 	jr	ra
  4048dc:	00000000 	nop

004048e0 <pipe_close>:
 *   Return 0 on success.
 *
 * Hint:
 *   Use 'syscall_mem_unmap' to unmap the pages.
 */
static int pipe_close(struct Fd *fd) {
  4048e0:	27bdffe8 	addiu	sp,sp,-24
  4048e4:	afbf0014 	sw	ra,20(sp)
  4048e8:	afbe0010 	sw	s8,16(sp)
  4048ec:	03a0f025 	move	s8,sp
  4048f0:	afc40018 	sw	a0,24(s8)
	// Unmap 'fd' and the referred Pipe.
	syscall_mem_unmap(0, fd);
  4048f4:	8fc50018 	lw	a1,24(s8)
  4048f8:	00002025 	move	a0,zero
  4048fc:	0c100517 	jal	40145c <syscall_mem_unmap>
  404900:	00000000 	nop
	syscall_mem_unmap(0, (void *)fd2data(fd));
  404904:	8fc40018 	lw	a0,24(s8)
  404908:	0c100723 	jal	401c8c <fd2data>
  40490c:	00000000 	nop
  404910:	00402825 	move	a1,v0
  404914:	00002025 	move	a0,zero
  404918:	0c100517 	jal	40145c <syscall_mem_unmap>
  40491c:	00000000 	nop
	return 0;
  404920:	00001025 	move	v0,zero
}
  404924:	03c0e825 	move	sp,s8
  404928:	8fbf0014 	lw	ra,20(sp)
  40492c:	8fbe0010 	lw	s8,16(sp)
  404930:	27bd0018 	addiu	sp,sp,24
  404934:	03e00008 	jr	ra
  404938:	00000000 	nop

0040493c <pipe_stat>:

static int pipe_stat(struct Fd *fd, struct Stat *stat) {
  40493c:	27bdfff8 	addiu	sp,sp,-8
  404940:	afbe0004 	sw	s8,4(sp)
  404944:	03a0f025 	move	s8,sp
  404948:	afc40008 	sw	a0,8(s8)
  40494c:	afc5000c 	sw	a1,12(s8)
	return 0;
  404950:	00001025 	move	v0,zero
}
  404954:	03c0e825 	move	sp,s8
  404958:	8fbe0004 	lw	s8,4(sp)
  40495c:	27bd0008 	addiu	sp,sp,8
  404960:	03e00008 	jr	ra
  404964:	00000000 	nop
	...

00404970 <elf_from>:
#include <elf.h>
#include <pmap.h>

const Elf32_Ehdr *elf_from(const void *binary, size_t size) {
  404970:	27bdfff0 	addiu	sp,sp,-16
  404974:	afbe000c 	sw	s8,12(sp)
  404978:	03a0f025 	move	s8,sp
  40497c:	afc40010 	sw	a0,16(s8)
  404980:	afc50014 	sw	a1,20(s8)
	const Elf32_Ehdr *ehdr = (const Elf32_Ehdr *)binary;
  404984:	8fc20010 	lw	v0,16(s8)
  404988:	afc20000 	sw	v0,0(s8)
	if (size >= sizeof(Elf32_Ehdr) && ehdr->e_ident[EI_MAG0] == ELFMAG0 &&
  40498c:	8fc20014 	lw	v0,20(s8)
  404990:	2c420034 	sltiu	v0,v0,52
  404994:	1440001d 	bnez	v0,404a0c <elf_from+0x9c>
  404998:	00000000 	nop
  40499c:	8fc20000 	lw	v0,0(s8)
  4049a0:	90430000 	lbu	v1,0(v0)
  4049a4:	2402007f 	li	v0,127
  4049a8:	14620018 	bne	v1,v0,404a0c <elf_from+0x9c>
  4049ac:	00000000 	nop
	    ehdr->e_ident[EI_MAG1] == ELFMAG1 && ehdr->e_ident[EI_MAG2] == ELFMAG2 &&
  4049b0:	8fc20000 	lw	v0,0(s8)
  4049b4:	90430001 	lbu	v1,1(v0)
	if (size >= sizeof(Elf32_Ehdr) && ehdr->e_ident[EI_MAG0] == ELFMAG0 &&
  4049b8:	24020045 	li	v0,69
  4049bc:	14620013 	bne	v1,v0,404a0c <elf_from+0x9c>
  4049c0:	00000000 	nop
	    ehdr->e_ident[EI_MAG1] == ELFMAG1 && ehdr->e_ident[EI_MAG2] == ELFMAG2 &&
  4049c4:	8fc20000 	lw	v0,0(s8)
  4049c8:	90430002 	lbu	v1,2(v0)
  4049cc:	2402004c 	li	v0,76
  4049d0:	1462000e 	bne	v1,v0,404a0c <elf_from+0x9c>
  4049d4:	00000000 	nop
	    ehdr->e_ident[EI_MAG3] == ELFMAG3 && ehdr->e_type == 2) {
  4049d8:	8fc20000 	lw	v0,0(s8)
  4049dc:	90430003 	lbu	v1,3(v0)
	    ehdr->e_ident[EI_MAG1] == ELFMAG1 && ehdr->e_ident[EI_MAG2] == ELFMAG2 &&
  4049e0:	24020046 	li	v0,70
  4049e4:	14620009 	bne	v1,v0,404a0c <elf_from+0x9c>
  4049e8:	00000000 	nop
	    ehdr->e_ident[EI_MAG3] == ELFMAG3 && ehdr->e_type == 2) {
  4049ec:	8fc20000 	lw	v0,0(s8)
  4049f0:	94430010 	lhu	v1,16(v0)
  4049f4:	24020002 	li	v0,2
  4049f8:	14620004 	bne	v1,v0,404a0c <elf_from+0x9c>
  4049fc:	00000000 	nop
		return ehdr;
  404a00:	8fc20000 	lw	v0,0(s8)
  404a04:	10000002 	b	404a10 <elf_from+0xa0>
  404a08:	00000000 	nop
	}
	return NULL;
  404a0c:	00001025 	move	v0,zero
}
  404a10:	03c0e825 	move	sp,s8
  404a14:	8fbe000c 	lw	s8,12(sp)
  404a18:	27bd0010 	addiu	sp,sp,16
  404a1c:	03e00008 	jr	ra
  404a20:	00000000 	nop

00404a24 <elf_load_seg>:
 *
 * Post-Condition:
 *   Return 0 if success. Otherwise return < 0.
 *   If success, the entry point of `binary` will be stored in `start`
 */
int elf_load_seg(Elf32_Phdr *ph, const void *bin, elf_mapper_t map_page, void *data) {
  404a24:	27bdffa0 	addiu	sp,sp,-96
  404a28:	afbf005c 	sw	ra,92(sp)
  404a2c:	afbe0058 	sw	s8,88(sp)
  404a30:	03a0f025 	move	s8,sp
  404a34:	afc40060 	sw	a0,96(s8)
  404a38:	afc50064 	sw	a1,100(s8)
  404a3c:	afc60068 	sw	a2,104(s8)
  404a40:	afc7006c 	sw	a3,108(s8)
	u_long va = ph->p_vaddr;
  404a44:	8fc20060 	lw	v0,96(s8)
  404a48:	8c420008 	lw	v0,8(v0)
  404a4c:	afc20020 	sw	v0,32(s8)
	size_t bin_size = ph->p_filesz;
  404a50:	8fc20060 	lw	v0,96(s8)
  404a54:	8c420010 	lw	v0,16(v0)
  404a58:	afc20024 	sw	v0,36(s8)
	size_t sgsize = ph->p_memsz;
  404a5c:	8fc20060 	lw	v0,96(s8)
  404a60:	8c420014 	lw	v0,20(v0)
  404a64:	afc20028 	sw	v0,40(s8)
	u_int perm = PTE_V;
  404a68:	24020080 	li	v0,128
  404a6c:	afc20018 	sw	v0,24(s8)
	if (ph->p_flags & PF_W) {
  404a70:	8fc20060 	lw	v0,96(s8)
  404a74:	8c420018 	lw	v0,24(v0)
  404a78:	30420002 	andi	v0,v0,0x2
  404a7c:	10400004 	beqz	v0,404a90 <elf_load_seg+0x6c>
  404a80:	00000000 	nop
		perm |= PTE_D;
  404a84:	8fc20018 	lw	v0,24(s8)
  404a88:	34420100 	ori	v0,v0,0x100
  404a8c:	afc20018 	sw	v0,24(s8)
	}

	int r;
	size_t i;
	u_long offset = va - ROUNDDOWN(va, PAGE_SIZE);
  404a90:	8fc20020 	lw	v0,32(s8)
  404a94:	30420fff 	andi	v0,v0,0xfff
  404a98:	afc2002c 	sw	v0,44(s8)
	if (offset != 0) {
  404a9c:	8fc2002c 	lw	v0,44(s8)
  404aa0:	1040001d 	beqz	v0,404b18 <elf_load_seg+0xf4>
  404aa4:	00000000 	nop
		if ((r = map_page(data, va, offset, perm, bin,
				  MIN(bin_size, PAGE_SIZE - offset))) != 0) {
  404aa8:	8fc20024 	lw	v0,36(s8)
  404aac:	afc20030 	sw	v0,48(s8)
  404ab0:	24031000 	li	v1,4096
  404ab4:	8fc2002c 	lw	v0,44(s8)
  404ab8:	00621023 	subu	v0,v1,v0
  404abc:	afc20034 	sw	v0,52(s8)
  404ac0:	8fc20034 	lw	v0,52(s8)
  404ac4:	8fc40030 	lw	a0,48(s8)
  404ac8:	8fc30030 	lw	v1,48(s8)
  404acc:	0044202b 	sltu	a0,v0,a0
  404ad0:	0064100a 	movz	v0,v1,a0
		if ((r = map_page(data, va, offset, perm, bin,
  404ad4:	afa20014 	sw	v0,20(sp)
  404ad8:	8fc20064 	lw	v0,100(s8)
  404adc:	afa20010 	sw	v0,16(sp)
  404ae0:	8fc20068 	lw	v0,104(s8)
  404ae4:	8fc70018 	lw	a3,24(s8)
  404ae8:	8fc6002c 	lw	a2,44(s8)
  404aec:	8fc50020 	lw	a1,32(s8)
  404af0:	8fc4006c 	lw	a0,108(s8)
  404af4:	0040f809 	jalr	v0
  404af8:	00000000 	nop
  404afc:	afc20038 	sw	v0,56(s8)
  404b00:	8fc20038 	lw	v0,56(s8)
  404b04:	10400004 	beqz	v0,404b18 <elf_load_seg+0xf4>
  404b08:	00000000 	nop
			return r;
  404b0c:	8fc20038 	lw	v0,56(s8)
  404b10:	10000066 	b	404cac <elf_load_seg+0x288>
  404b14:	00000000 	nop
		}
	}

	/* Step 1: load all content of bin into memory. */
	for (i = offset ? MIN(bin_size, PAGE_SIZE - offset) : 0; i < bin_size; i += PAGE_SIZE) {
  404b18:	8fc2002c 	lw	v0,44(s8)
  404b1c:	1040000e 	beqz	v0,404b58 <elf_load_seg+0x134>
  404b20:	00000000 	nop
  404b24:	8fc20024 	lw	v0,36(s8)
  404b28:	afc2003c 	sw	v0,60(s8)
  404b2c:	24031000 	li	v1,4096
  404b30:	8fc2002c 	lw	v0,44(s8)
  404b34:	00621023 	subu	v0,v1,v0
  404b38:	afc20040 	sw	v0,64(s8)
  404b3c:	8fc20040 	lw	v0,64(s8)
  404b40:	8fc4003c 	lw	a0,60(s8)
  404b44:	8fc3003c 	lw	v1,60(s8)
  404b48:	0044202b 	sltu	a0,v0,a0
  404b4c:	0064100a 	movz	v0,v1,a0
  404b50:	10000002 	b	404b5c <elf_load_seg+0x138>
  404b54:	00000000 	nop
  404b58:	00001025 	move	v0,zero
  404b5c:	afc2001c 	sw	v0,28(s8)
  404b60:	10000025 	b	404bf8 <elf_load_seg+0x1d4>
  404b64:	00000000 	nop
		if ((r = map_page(data, va + i, 0, perm, bin + i, MIN(bin_size - i, PAGE_SIZE))) !=
  404b68:	8fc30020 	lw	v1,32(s8)
  404b6c:	8fc2001c 	lw	v0,28(s8)
  404b70:	00624021 	addu	t0,v1,v0
  404b74:	8fc30064 	lw	v1,100(s8)
  404b78:	8fc2001c 	lw	v0,28(s8)
  404b7c:	00621821 	addu	v1,v1,v0
  404b80:	8fc40024 	lw	a0,36(s8)
  404b84:	8fc2001c 	lw	v0,28(s8)
  404b88:	00821023 	subu	v0,a0,v0
  404b8c:	afc2004c 	sw	v0,76(s8)
  404b90:	24021000 	li	v0,4096
  404b94:	afc20050 	sw	v0,80(s8)
  404b98:	8fc20050 	lw	v0,80(s8)
  404b9c:	8fc5004c 	lw	a1,76(s8)
  404ba0:	8fc4004c 	lw	a0,76(s8)
  404ba4:	0045282b 	sltu	a1,v0,a1
  404ba8:	0085100a 	movz	v0,a0,a1
  404bac:	afa20014 	sw	v0,20(sp)
  404bb0:	afa30010 	sw	v1,16(sp)
  404bb4:	8fc20068 	lw	v0,104(s8)
  404bb8:	8fc70018 	lw	a3,24(s8)
  404bbc:	00003025 	move	a2,zero
  404bc0:	01002825 	move	a1,t0
  404bc4:	8fc4006c 	lw	a0,108(s8)
  404bc8:	0040f809 	jalr	v0
  404bcc:	00000000 	nop
  404bd0:	afc20038 	sw	v0,56(s8)
  404bd4:	8fc20038 	lw	v0,56(s8)
  404bd8:	10400004 	beqz	v0,404bec <elf_load_seg+0x1c8>
  404bdc:	00000000 	nop
		    0) {
			return r;
  404be0:	8fc20038 	lw	v0,56(s8)
  404be4:	10000031 	b	404cac <elf_load_seg+0x288>
  404be8:	00000000 	nop
	for (i = offset ? MIN(bin_size, PAGE_SIZE - offset) : 0; i < bin_size; i += PAGE_SIZE) {
  404bec:	8fc2001c 	lw	v0,28(s8)
  404bf0:	24421000 	addiu	v0,v0,4096
  404bf4:	afc2001c 	sw	v0,28(s8)
  404bf8:	8fc3001c 	lw	v1,28(s8)
  404bfc:	8fc20024 	lw	v0,36(s8)
  404c00:	0062102b 	sltu	v0,v1,v0
  404c04:	1440ffd8 	bnez	v0,404b68 <elf_load_seg+0x144>
  404c08:	00000000 	nop
		}
	}

	/* Step 2: alloc pages to reach `sgsize` when `bin_size` < `sgsize`. */
	while (i < sgsize) {
  404c0c:	10000021 	b	404c94 <elf_load_seg+0x270>
  404c10:	00000000 	nop
		if ((r = map_page(data, va + i, 0, perm, NULL, MIN(sgsize - i, PAGE_SIZE))) != 0) {
  404c14:	8fc30020 	lw	v1,32(s8)
  404c18:	8fc2001c 	lw	v0,28(s8)
  404c1c:	00622821 	addu	a1,v1,v0
  404c20:	8fc30028 	lw	v1,40(s8)
  404c24:	8fc2001c 	lw	v0,28(s8)
  404c28:	00621023 	subu	v0,v1,v0
  404c2c:	afc20044 	sw	v0,68(s8)
  404c30:	24021000 	li	v0,4096
  404c34:	afc20048 	sw	v0,72(s8)
  404c38:	8fc20048 	lw	v0,72(s8)
  404c3c:	8fc40044 	lw	a0,68(s8)
  404c40:	8fc30044 	lw	v1,68(s8)
  404c44:	0044202b 	sltu	a0,v0,a0
  404c48:	0064100a 	movz	v0,v1,a0
  404c4c:	afa20014 	sw	v0,20(sp)
  404c50:	afa00010 	sw	zero,16(sp)
  404c54:	8fc20068 	lw	v0,104(s8)
  404c58:	8fc70018 	lw	a3,24(s8)
  404c5c:	00003025 	move	a2,zero
  404c60:	8fc4006c 	lw	a0,108(s8)
  404c64:	0040f809 	jalr	v0
  404c68:	00000000 	nop
  404c6c:	afc20038 	sw	v0,56(s8)
  404c70:	8fc20038 	lw	v0,56(s8)
  404c74:	10400004 	beqz	v0,404c88 <elf_load_seg+0x264>
  404c78:	00000000 	nop
			return r;
  404c7c:	8fc20038 	lw	v0,56(s8)
  404c80:	1000000a 	b	404cac <elf_load_seg+0x288>
  404c84:	00000000 	nop
		}
		i += PAGE_SIZE;
  404c88:	8fc2001c 	lw	v0,28(s8)
  404c8c:	24421000 	addiu	v0,v0,4096
  404c90:	afc2001c 	sw	v0,28(s8)
	while (i < sgsize) {
  404c94:	8fc3001c 	lw	v1,28(s8)
  404c98:	8fc20028 	lw	v0,40(s8)
  404c9c:	0062102b 	sltu	v0,v1,v0
  404ca0:	1440ffdc 	bnez	v0,404c14 <elf_load_seg+0x1f0>
  404ca4:	00000000 	nop
	}
	return 0;
  404ca8:	00001025 	move	v0,zero
}
  404cac:	03c0e825 	move	sp,s8
  404cb0:	8fbf005c 	lw	ra,92(sp)
  404cb4:	8fbe0058 	lw	s8,88(sp)
  404cb8:	27bd0060 	addiu	sp,sp,96
  404cbc:	03e00008 	jr	ra
  404cc0:	00000000 	nop
	...

00404cd0 <vprintfmt>:
/* forward declaration */
static void print_char(fmt_callback_t, void *, char, int, int);
static void print_str(fmt_callback_t, void *, const char *, int, int);
static void print_num(fmt_callback_t, void *, unsigned long, int, int, int, int, char, int);

void vprintfmt(fmt_callback_t out, void *data, const char *fmt, va_list ap) {
  404cd0:	27bdffa8 	addiu	sp,sp,-88
  404cd4:	afbf0054 	sw	ra,84(sp)
  404cd8:	afbe0050 	sw	s8,80(sp)
  404cdc:	03a0f025 	move	s8,sp
  404ce0:	afc40058 	sw	a0,88(s8)
  404ce4:	afc5005c 	sw	a1,92(s8)
  404ce8:	afc60060 	sw	a2,96(s8)
  404cec:	afc70064 	sw	a3,100(s8)
	char padc;     // padding char

	for (;;) {
		/* scan for the next '%' */
		/* Exercise 1.4: Your code here. (1/8) */
		const char *cur = fmt;
  404cf0:	8fc20060 	lw	v0,96(s8)
  404cf4:	afc20040 	sw	v0,64(s8)
		while((*fmt) != '%' && (*fmt) != '\0'){
  404cf8:	10000004 	b	404d0c <vprintfmt+0x3c>
  404cfc:	00000000 	nop
			fmt++;
  404d00:	8fc20060 	lw	v0,96(s8)
  404d04:	24420001 	addiu	v0,v0,1
  404d08:	afc20060 	sw	v0,96(s8)
		while((*fmt) != '%' && (*fmt) != '\0'){
  404d0c:	8fc20060 	lw	v0,96(s8)
  404d10:	80430000 	lb	v1,0(v0)
  404d14:	24020025 	li	v0,37
  404d18:	10620005 	beq	v1,v0,404d30 <vprintfmt+0x60>
  404d1c:	00000000 	nop
  404d20:	8fc20060 	lw	v0,96(s8)
  404d24:	80420000 	lb	v0,0(v0)
  404d28:	1440fff5 	bnez	v0,404d00 <vprintfmt+0x30>
  404d2c:	00000000 	nop
		}
		/* flush the string found so far */
		/* Exercise 1.4: Your code here. (2/8) */
		out(data, cur, fmt - cur);
  404d30:	8fc30060 	lw	v1,96(s8)
  404d34:	8fc20040 	lw	v0,64(s8)
  404d38:	00621023 	subu	v0,v1,v0
  404d3c:	00401825 	move	v1,v0
  404d40:	8fc20058 	lw	v0,88(s8)
  404d44:	00603025 	move	a2,v1
  404d48:	8fc50040 	lw	a1,64(s8)
  404d4c:	8fc4005c 	lw	a0,92(s8)
  404d50:	0040f809 	jalr	v0
  404d54:	00000000 	nop
		/* check "are we hitting the end?" */
		/* Exercise 1.4: Your code here. (3/8) */
		if((*fmt) == '\0') break;
  404d58:	8fc20060 	lw	v0,96(s8)
  404d5c:	80420000 	lb	v0,0(v0)
  404d60:	10400157 	beqz	v0,4052c0 <vprintfmt+0x5f0>
  404d64:	00000000 	nop
		/* we found a '%' */
		/* Exercise 1.4: Your code here. (4/8) */
		fmt++;
  404d68:	8fc20060 	lw	v0,96(s8)
  404d6c:	24420001 	addiu	v0,v0,1
  404d70:	afc20060 	sw	v0,96(s8)
		/* check format flag */
		/* Exercise 1.4: Your code here. (5/8) */
		ladjust = 0;
  404d74:	afc00038 	sw	zero,56(s8)
		padc = ' ';
  404d78:	24020020 	li	v0,32
  404d7c:	a3c2003c 	sb	v0,60(s8)
		if((*fmt) == '-'){
  404d80:	8fc20060 	lw	v0,96(s8)
  404d84:	80430000 	lb	v1,0(v0)
  404d88:	2402002d 	li	v0,45
  404d8c:	14620008 	bne	v1,v0,404db0 <vprintfmt+0xe0>
  404d90:	00000000 	nop
			ladjust = 1;
  404d94:	24020001 	li	v0,1
  404d98:	afc20038 	sw	v0,56(s8)
			fmt++;
  404d9c:	8fc20060 	lw	v0,96(s8)
  404da0:	24420001 	addiu	v0,v0,1
  404da4:	afc20060 	sw	v0,96(s8)
  404da8:	1000000b 	b	404dd8 <vprintfmt+0x108>
  404dac:	00000000 	nop
		}
		else if((*fmt) == '0'){
  404db0:	8fc20060 	lw	v0,96(s8)
  404db4:	80430000 	lb	v1,0(v0)
  404db8:	24020030 	li	v0,48
  404dbc:	14620006 	bne	v1,v0,404dd8 <vprintfmt+0x108>
  404dc0:	00000000 	nop
			padc = '0';
  404dc4:	24020030 	li	v0,48
  404dc8:	a3c2003c 	sb	v0,60(s8)
			fmt++;
  404dcc:	8fc20060 	lw	v0,96(s8)
  404dd0:	24420001 	addiu	v0,v0,1
  404dd4:	afc20060 	sw	v0,96(s8)
		}
		/* get width */
		/* Exercise 1.4: Your code here. (6/8) */
		width = 0;
  404dd8:	afc0002c 	sw	zero,44(s8)
		char d = *fmt;
  404ddc:	8fc20060 	lw	v0,96(s8)
  404de0:	90420000 	lbu	v0,0(v0)
  404de4:	a3c2003d 	sb	v0,61(s8)
		while(d >= '0' && d <= '9' ){
  404de8:	10000011 	b	404e30 <vprintfmt+0x160>
  404dec:	00000000 	nop
			width = width * 10 + d - '0';
  404df0:	8fc3002c 	lw	v1,44(s8)
  404df4:	00601025 	move	v0,v1
  404df8:	00021080 	sll	v0,v0,0x2
  404dfc:	00431021 	addu	v0,v0,v1
  404e00:	00021040 	sll	v0,v0,0x1
  404e04:	00401825 	move	v1,v0
  404e08:	83c2003d 	lb	v0,61(s8)
  404e0c:	00621021 	addu	v0,v1,v0
  404e10:	2442ffd0 	addiu	v0,v0,-48
  404e14:	afc2002c 	sw	v0,44(s8)
			fmt++;
  404e18:	8fc20060 	lw	v0,96(s8)
  404e1c:	24420001 	addiu	v0,v0,1
  404e20:	afc20060 	sw	v0,96(s8)
			d = *fmt;
  404e24:	8fc20060 	lw	v0,96(s8)
  404e28:	90420000 	lbu	v0,0(v0)
  404e2c:	a3c2003d 	sb	v0,61(s8)
		while(d >= '0' && d <= '9' ){
  404e30:	83c2003d 	lb	v0,61(s8)
  404e34:	28420030 	slti	v0,v0,48
  404e38:	14400005 	bnez	v0,404e50 <vprintfmt+0x180>
  404e3c:	00000000 	nop
  404e40:	83c2003d 	lb	v0,61(s8)
  404e44:	2842003a 	slti	v0,v0,58
  404e48:	1440ffe9 	bnez	v0,404df0 <vprintfmt+0x120>
  404e4c:	00000000 	nop
		}
		/* check for long */
		/* Exercise 1.4: Your code here. (7/8) */
		long_flag = 0;
  404e50:	afc00030 	sw	zero,48(s8)
		if((*fmt) == 'l'){
  404e54:	8fc20060 	lw	v0,96(s8)
  404e58:	80430000 	lb	v1,0(v0)
  404e5c:	2402006c 	li	v0,108
  404e60:	14620006 	bne	v1,v0,404e7c <vprintfmt+0x1ac>
  404e64:	00000000 	nop
			long_flag = 1;
  404e68:	24020001 	li	v0,1
  404e6c:	afc20030 	sw	v0,48(s8)
			fmt++;
  404e70:	8fc20060 	lw	v0,96(s8)
  404e74:	24420001 	addiu	v0,v0,1
  404e78:	afc20060 	sw	v0,96(s8)
		}
		
		neg_flag = 0;
  404e7c:	afc00034 	sw	zero,52(s8)
		switch (*fmt) {
  404e80:	8fc20060 	lw	v0,96(s8)
  404e84:	80420000 	lb	v0,0(v0)
  404e88:	104000fd 	beqz	v0,405280 <vprintfmt+0x5b0>
  404e8c:	00000000 	nop
  404e90:	04400100 	bltz	v0,405294 <vprintfmt+0x5c4>
  404e94:	00000000 	nop
  404e98:	28430079 	slti	v1,v0,121
  404e9c:	106000fd 	beqz	v1,405294 <vprintfmt+0x5c4>
  404ea0:	00000000 	nop
  404ea4:	28430044 	slti	v1,v0,68
  404ea8:	146000fa 	bnez	v1,405294 <vprintfmt+0x5c4>
  404eac:	00000000 	nop
  404eb0:	2442ffbc 	addiu	v0,v0,-68
  404eb4:	2c430035 	sltiu	v1,v0,53
  404eb8:	106000f6 	beqz	v1,405294 <vprintfmt+0x5c4>
  404ebc:	00000000 	nop
  404ec0:	00021880 	sll	v1,v0,0x2
  404ec4:	3c020040 	lui	v0,0x40
  404ec8:	24426260 	addiu	v0,v0,25184
  404ecc:	00621021 	addu	v0,v1,v0
  404ed0:	8c420000 	lw	v0,0(v0)
  404ed4:	00400008 	jr	v0
  404ed8:	00000000 	nop
		case 'b':
			if (long_flag) {
  404edc:	8fc20030 	lw	v0,48(s8)
  404ee0:	10400008 	beqz	v0,404f04 <vprintfmt+0x234>
  404ee4:	00000000 	nop
				num = va_arg(ap, long int);
  404ee8:	8fc20064 	lw	v0,100(s8)
  404eec:	24430004 	addiu	v1,v0,4
  404ef0:	afc30064 	sw	v1,100(s8)
  404ef4:	8c420000 	lw	v0,0(v0)
  404ef8:	afc20028 	sw	v0,40(s8)
  404efc:	10000006 	b	404f18 <vprintfmt+0x248>
  404f00:	00000000 	nop
			} else {
				num = va_arg(ap, int);
  404f04:	8fc20064 	lw	v0,100(s8)
  404f08:	24430004 	addiu	v1,v0,4
  404f0c:	afc30064 	sw	v1,100(s8)
  404f10:	8c420000 	lw	v0,0(v0)
  404f14:	afc20028 	sw	v0,40(s8)
			}
			print_num(out, data, num, 2, 0, width, ladjust, padc, 0);
  404f18:	8fc30028 	lw	v1,40(s8)
  404f1c:	afa00020 	sw	zero,32(sp)
  404f20:	83c2003c 	lb	v0,60(s8)
  404f24:	afa2001c 	sw	v0,28(sp)
  404f28:	8fc20038 	lw	v0,56(s8)
  404f2c:	afa20018 	sw	v0,24(sp)
  404f30:	8fc2002c 	lw	v0,44(s8)
  404f34:	afa20014 	sw	v0,20(sp)
  404f38:	afa00010 	sw	zero,16(sp)
  404f3c:	24070002 	li	a3,2
  404f40:	00603025 	move	a2,v1
  404f44:	8fc5005c 	lw	a1,92(s8)
  404f48:	8fc40058 	lw	a0,88(s8)
  404f4c:	0c101566 	jal	405598 <print_num>
  404f50:	00000000 	nop
			break;
  404f54:	100000d5 	b	4052ac <vprintfmt+0x5dc>
  404f58:	00000000 	nop

		case 'd':
		case 'D':
			if (long_flag) {
  404f5c:	8fc20030 	lw	v0,48(s8)
  404f60:	10400008 	beqz	v0,404f84 <vprintfmt+0x2b4>
  404f64:	00000000 	nop
				num = va_arg(ap, long int);
  404f68:	8fc20064 	lw	v0,100(s8)
  404f6c:	24430004 	addiu	v1,v0,4
  404f70:	afc30064 	sw	v1,100(s8)
  404f74:	8c420000 	lw	v0,0(v0)
  404f78:	afc20028 	sw	v0,40(s8)
  404f7c:	10000006 	b	404f98 <vprintfmt+0x2c8>
  404f80:	00000000 	nop
			} else {
				num = va_arg(ap, int);
  404f84:	8fc20064 	lw	v0,100(s8)
  404f88:	24430004 	addiu	v1,v0,4
  404f8c:	afc30064 	sw	v1,100(s8)
  404f90:	8c420000 	lw	v0,0(v0)
  404f94:	afc20028 	sw	v0,40(s8)
			 * Refer to other parts (case 'b', case 'o', etc.) and func 'print_num' to
			 * complete this part. Think the differences between case 'd' and the
			 * others. (hint: 'neg_flag').
			 */
			/* Exercise 1.4: Your code here. (8/8) */
			if(num < 0){
  404f98:	8fc20028 	lw	v0,40(s8)
  404f9c:	04410006 	bgez	v0,404fb8 <vprintfmt+0x2e8>
  404fa0:	00000000 	nop
				 neg_flag = 1;
  404fa4:	24020001 	li	v0,1
  404fa8:	afc20034 	sw	v0,52(s8)
				 num = -num;
  404fac:	8fc20028 	lw	v0,40(s8)
  404fb0:	00021023 	negu	v0,v0
  404fb4:	afc20028 	sw	v0,40(s8)
			}
			print_num(out, data, num, 10, neg_flag, width, ladjust, padc, 0);
  404fb8:	8fc30028 	lw	v1,40(s8)
  404fbc:	afa00020 	sw	zero,32(sp)
  404fc0:	83c2003c 	lb	v0,60(s8)
  404fc4:	afa2001c 	sw	v0,28(sp)
  404fc8:	8fc20038 	lw	v0,56(s8)
  404fcc:	afa20018 	sw	v0,24(sp)
  404fd0:	8fc2002c 	lw	v0,44(s8)
  404fd4:	afa20014 	sw	v0,20(sp)
  404fd8:	8fc20034 	lw	v0,52(s8)
  404fdc:	afa20010 	sw	v0,16(sp)
  404fe0:	2407000a 	li	a3,10
  404fe4:	00603025 	move	a2,v1
  404fe8:	8fc5005c 	lw	a1,92(s8)
  404fec:	8fc40058 	lw	a0,88(s8)
  404ff0:	0c101566 	jal	405598 <print_num>
  404ff4:	00000000 	nop
			break;
  404ff8:	100000ac 	b	4052ac <vprintfmt+0x5dc>
  404ffc:	00000000 	nop

		case 'o':
		case 'O':
			if (long_flag) {
  405000:	8fc20030 	lw	v0,48(s8)
  405004:	10400008 	beqz	v0,405028 <vprintfmt+0x358>
  405008:	00000000 	nop
				num = va_arg(ap, long int);
  40500c:	8fc20064 	lw	v0,100(s8)
  405010:	24430004 	addiu	v1,v0,4
  405014:	afc30064 	sw	v1,100(s8)
  405018:	8c420000 	lw	v0,0(v0)
  40501c:	afc20028 	sw	v0,40(s8)
  405020:	10000006 	b	40503c <vprintfmt+0x36c>
  405024:	00000000 	nop
			} else {
				num = va_arg(ap, int);
  405028:	8fc20064 	lw	v0,100(s8)
  40502c:	24430004 	addiu	v1,v0,4
  405030:	afc30064 	sw	v1,100(s8)
  405034:	8c420000 	lw	v0,0(v0)
  405038:	afc20028 	sw	v0,40(s8)
			}
			print_num(out, data, num, 8, 0, width, ladjust, padc, 0);
  40503c:	8fc30028 	lw	v1,40(s8)
  405040:	afa00020 	sw	zero,32(sp)
  405044:	83c2003c 	lb	v0,60(s8)
  405048:	afa2001c 	sw	v0,28(sp)
  40504c:	8fc20038 	lw	v0,56(s8)
  405050:	afa20018 	sw	v0,24(sp)
  405054:	8fc2002c 	lw	v0,44(s8)
  405058:	afa20014 	sw	v0,20(sp)
  40505c:	afa00010 	sw	zero,16(sp)
  405060:	24070008 	li	a3,8
  405064:	00603025 	move	a2,v1
  405068:	8fc5005c 	lw	a1,92(s8)
  40506c:	8fc40058 	lw	a0,88(s8)
  405070:	0c101566 	jal	405598 <print_num>
  405074:	00000000 	nop
			break;
  405078:	1000008c 	b	4052ac <vprintfmt+0x5dc>
  40507c:	00000000 	nop

		case 'u':
		case 'U':
			if (long_flag) {
  405080:	8fc20030 	lw	v0,48(s8)
  405084:	10400008 	beqz	v0,4050a8 <vprintfmt+0x3d8>
  405088:	00000000 	nop
				num = va_arg(ap, long int);
  40508c:	8fc20064 	lw	v0,100(s8)
  405090:	24430004 	addiu	v1,v0,4
  405094:	afc30064 	sw	v1,100(s8)
  405098:	8c420000 	lw	v0,0(v0)
  40509c:	afc20028 	sw	v0,40(s8)
  4050a0:	10000006 	b	4050bc <vprintfmt+0x3ec>
  4050a4:	00000000 	nop
			} else {
				num = va_arg(ap, int);
  4050a8:	8fc20064 	lw	v0,100(s8)
  4050ac:	24430004 	addiu	v1,v0,4
  4050b0:	afc30064 	sw	v1,100(s8)
  4050b4:	8c420000 	lw	v0,0(v0)
  4050b8:	afc20028 	sw	v0,40(s8)
			}
			print_num(out, data, num, 10, 0, width, ladjust, padc, 0);
  4050bc:	8fc30028 	lw	v1,40(s8)
  4050c0:	afa00020 	sw	zero,32(sp)
  4050c4:	83c2003c 	lb	v0,60(s8)
  4050c8:	afa2001c 	sw	v0,28(sp)
  4050cc:	8fc20038 	lw	v0,56(s8)
  4050d0:	afa20018 	sw	v0,24(sp)
  4050d4:	8fc2002c 	lw	v0,44(s8)
  4050d8:	afa20014 	sw	v0,20(sp)
  4050dc:	afa00010 	sw	zero,16(sp)
  4050e0:	2407000a 	li	a3,10
  4050e4:	00603025 	move	a2,v1
  4050e8:	8fc5005c 	lw	a1,92(s8)
  4050ec:	8fc40058 	lw	a0,88(s8)
  4050f0:	0c101566 	jal	405598 <print_num>
  4050f4:	00000000 	nop
			break;
  4050f8:	1000006c 	b	4052ac <vprintfmt+0x5dc>
  4050fc:	00000000 	nop

		case 'x':
			if (long_flag) {
  405100:	8fc20030 	lw	v0,48(s8)
  405104:	10400008 	beqz	v0,405128 <vprintfmt+0x458>
  405108:	00000000 	nop
				num = va_arg(ap, long int);
  40510c:	8fc20064 	lw	v0,100(s8)
  405110:	24430004 	addiu	v1,v0,4
  405114:	afc30064 	sw	v1,100(s8)
  405118:	8c420000 	lw	v0,0(v0)
  40511c:	afc20028 	sw	v0,40(s8)
  405120:	10000006 	b	40513c <vprintfmt+0x46c>
  405124:	00000000 	nop
			} else {
				num = va_arg(ap, int);
  405128:	8fc20064 	lw	v0,100(s8)
  40512c:	24430004 	addiu	v1,v0,4
  405130:	afc30064 	sw	v1,100(s8)
  405134:	8c420000 	lw	v0,0(v0)
  405138:	afc20028 	sw	v0,40(s8)
			}
			print_num(out, data, num, 16, 0, width, ladjust, padc, 0);
  40513c:	8fc30028 	lw	v1,40(s8)
  405140:	afa00020 	sw	zero,32(sp)
  405144:	83c2003c 	lb	v0,60(s8)
  405148:	afa2001c 	sw	v0,28(sp)
  40514c:	8fc20038 	lw	v0,56(s8)
  405150:	afa20018 	sw	v0,24(sp)
  405154:	8fc2002c 	lw	v0,44(s8)
  405158:	afa20014 	sw	v0,20(sp)
  40515c:	afa00010 	sw	zero,16(sp)
  405160:	24070010 	li	a3,16
  405164:	00603025 	move	a2,v1
  405168:	8fc5005c 	lw	a1,92(s8)
  40516c:	8fc40058 	lw	a0,88(s8)
  405170:	0c101566 	jal	405598 <print_num>
  405174:	00000000 	nop
			break;
  405178:	1000004c 	b	4052ac <vprintfmt+0x5dc>
  40517c:	00000000 	nop

		case 'X':
			if (long_flag) {
  405180:	8fc20030 	lw	v0,48(s8)
  405184:	10400008 	beqz	v0,4051a8 <vprintfmt+0x4d8>
  405188:	00000000 	nop
				num = va_arg(ap, long int);
  40518c:	8fc20064 	lw	v0,100(s8)
  405190:	24430004 	addiu	v1,v0,4
  405194:	afc30064 	sw	v1,100(s8)
  405198:	8c420000 	lw	v0,0(v0)
  40519c:	afc20028 	sw	v0,40(s8)
  4051a0:	10000006 	b	4051bc <vprintfmt+0x4ec>
  4051a4:	00000000 	nop
			} else {
				num = va_arg(ap, int);
  4051a8:	8fc20064 	lw	v0,100(s8)
  4051ac:	24430004 	addiu	v1,v0,4
  4051b0:	afc30064 	sw	v1,100(s8)
  4051b4:	8c420000 	lw	v0,0(v0)
  4051b8:	afc20028 	sw	v0,40(s8)
			}
			print_num(out, data, num, 16, 0, width, ladjust, padc, 1);
  4051bc:	8fc30028 	lw	v1,40(s8)
  4051c0:	24020001 	li	v0,1
  4051c4:	afa20020 	sw	v0,32(sp)
  4051c8:	83c2003c 	lb	v0,60(s8)
  4051cc:	afa2001c 	sw	v0,28(sp)
  4051d0:	8fc20038 	lw	v0,56(s8)
  4051d4:	afa20018 	sw	v0,24(sp)
  4051d8:	8fc2002c 	lw	v0,44(s8)
  4051dc:	afa20014 	sw	v0,20(sp)
  4051e0:	afa00010 	sw	zero,16(sp)
  4051e4:	24070010 	li	a3,16
  4051e8:	00603025 	move	a2,v1
  4051ec:	8fc5005c 	lw	a1,92(s8)
  4051f0:	8fc40058 	lw	a0,88(s8)
  4051f4:	0c101566 	jal	405598 <print_num>
  4051f8:	00000000 	nop
			break;
  4051fc:	1000002b 	b	4052ac <vprintfmt+0x5dc>
  405200:	00000000 	nop

		case 'c':
			c = (char)va_arg(ap, int);
  405204:	8fc20064 	lw	v0,100(s8)
  405208:	24430004 	addiu	v1,v0,4
  40520c:	afc30064 	sw	v1,100(s8)
  405210:	8c420000 	lw	v0,0(v0)
  405214:	a3c20048 	sb	v0,72(s8)
			print_char(out, data, c, width, ladjust);
  405218:	83c30048 	lb	v1,72(s8)
  40521c:	8fc20038 	lw	v0,56(s8)
  405220:	afa20010 	sw	v0,16(sp)
  405224:	8fc7002c 	lw	a3,44(s8)
  405228:	00603025 	move	a2,v1
  40522c:	8fc5005c 	lw	a1,92(s8)
  405230:	8fc40058 	lw	a0,88(s8)
  405234:	0c1014b8 	jal	4052e0 <print_char>
  405238:	00000000 	nop
			break;
  40523c:	1000001b 	b	4052ac <vprintfmt+0x5dc>
  405240:	00000000 	nop

		case 's':
			s = (char *)va_arg(ap, char *);
  405244:	8fc20064 	lw	v0,100(s8)
  405248:	24430004 	addiu	v1,v0,4
  40524c:	afc30064 	sw	v1,100(s8)
  405250:	8c420000 	lw	v0,0(v0)
  405254:	afc20044 	sw	v0,68(s8)
			print_str(out, data, s, width, ladjust);
  405258:	8fc20038 	lw	v0,56(s8)
  40525c:	afa20010 	sw	v0,16(sp)
  405260:	8fc7002c 	lw	a3,44(s8)
  405264:	8fc60044 	lw	a2,68(s8)
  405268:	8fc5005c 	lw	a1,92(s8)
  40526c:	8fc40058 	lw	a0,88(s8)
  405270:	0c101508 	jal	405420 <print_str>
  405274:	00000000 	nop
			break;
  405278:	1000000c 	b	4052ac <vprintfmt+0x5dc>
  40527c:	00000000 	nop

		case '\0':
			fmt--;
  405280:	8fc20060 	lw	v0,96(s8)
  405284:	2442ffff 	addiu	v0,v0,-1
  405288:	afc20060 	sw	v0,96(s8)
			break;
  40528c:	10000007 	b	4052ac <vprintfmt+0x5dc>
  405290:	00000000 	nop

		default:
			/* output this char as it is */
			out(data, fmt, 1);
  405294:	8fc20058 	lw	v0,88(s8)
  405298:	24060001 	li	a2,1
  40529c:	8fc50060 	lw	a1,96(s8)
  4052a0:	8fc4005c 	lw	a0,92(s8)
  4052a4:	0040f809 	jalr	v0
  4052a8:	00000000 	nop
		}
		fmt++;
  4052ac:	8fc20060 	lw	v0,96(s8)
  4052b0:	24420001 	addiu	v0,v0,1
  4052b4:	afc20060 	sw	v0,96(s8)
	for (;;) {
  4052b8:	1000fe8d 	b	404cf0 <vprintfmt+0x20>
  4052bc:	00000000 	nop
	...
	}
}
  4052c8:	03c0e825 	move	sp,s8
  4052cc:	8fbf0054 	lw	ra,84(sp)
  4052d0:	8fbe0050 	lw	s8,80(sp)
  4052d4:	27bd0058 	addiu	sp,sp,88
  4052d8:	03e00008 	jr	ra
  4052dc:	00000000 	nop

004052e0 <print_char>:

/* --------------- local help functions --------------------- */
void print_char(fmt_callback_t out, void *data, char c, int length, int ladjust) {
  4052e0:	27bdffe0 	addiu	sp,sp,-32
  4052e4:	afbf001c 	sw	ra,28(sp)
  4052e8:	afbe0018 	sw	s8,24(sp)
  4052ec:	03a0f025 	move	s8,sp
  4052f0:	afc40020 	sw	a0,32(s8)
  4052f4:	afc50024 	sw	a1,36(s8)
  4052f8:	00c01025 	move	v0,a2
  4052fc:	afc7002c 	sw	a3,44(s8)
  405300:	a3c20028 	sb	v0,40(s8)
	int i;

	if (length < 1) {
  405304:	8fc2002c 	lw	v0,44(s8)
  405308:	1c400003 	bgtz	v0,405318 <print_char+0x38>
  40530c:	00000000 	nop
		length = 1;
  405310:	24020001 	li	v0,1
  405314:	afc2002c 	sw	v0,44(s8)
	}
	const char space = ' ';
  405318:	24020020 	li	v0,32
  40531c:	a3c20014 	sb	v0,20(s8)
	if (ladjust) {
  405320:	8fc20030 	lw	v0,48(s8)
  405324:	1040001d 	beqz	v0,40539c <print_char+0xbc>
  405328:	00000000 	nop
		out(data, &c, 1);
  40532c:	27c30028 	addiu	v1,s8,40
  405330:	8fc20020 	lw	v0,32(s8)
  405334:	24060001 	li	a2,1
  405338:	00602825 	move	a1,v1
  40533c:	8fc40024 	lw	a0,36(s8)
  405340:	0040f809 	jalr	v0
  405344:	00000000 	nop
		for (i = 1; i < length; i++) {
  405348:	24020001 	li	v0,1
  40534c:	afc20010 	sw	v0,16(s8)
  405350:	1000000b 	b	405380 <print_char+0xa0>
  405354:	00000000 	nop
			out(data, &space, 1);
  405358:	27c30014 	addiu	v1,s8,20
  40535c:	8fc20020 	lw	v0,32(s8)
  405360:	24060001 	li	a2,1
  405364:	00602825 	move	a1,v1
  405368:	8fc40024 	lw	a0,36(s8)
  40536c:	0040f809 	jalr	v0
  405370:	00000000 	nop
		for (i = 1; i < length; i++) {
  405374:	8fc20010 	lw	v0,16(s8)
  405378:	24420001 	addiu	v0,v0,1
  40537c:	afc20010 	sw	v0,16(s8)
  405380:	8fc30010 	lw	v1,16(s8)
  405384:	8fc2002c 	lw	v0,44(s8)
  405388:	0062102a 	slt	v0,v1,v0
  40538c:	1440fff2 	bnez	v0,405358 <print_char+0x78>
  405390:	00000000 	nop
		for (i = 0; i < length - 1; i++) {
			out(data, &space, 1);
		}
		out(data, &c, 1);
	}
}
  405394:	1000001b 	b	405404 <print_char+0x124>
  405398:	00000000 	nop
		for (i = 0; i < length - 1; i++) {
  40539c:	afc00010 	sw	zero,16(s8)
  4053a0:	1000000b 	b	4053d0 <print_char+0xf0>
  4053a4:	00000000 	nop
			out(data, &space, 1);
  4053a8:	27c30014 	addiu	v1,s8,20
  4053ac:	8fc20020 	lw	v0,32(s8)
  4053b0:	24060001 	li	a2,1
  4053b4:	00602825 	move	a1,v1
  4053b8:	8fc40024 	lw	a0,36(s8)
  4053bc:	0040f809 	jalr	v0
  4053c0:	00000000 	nop
		for (i = 0; i < length - 1; i++) {
  4053c4:	8fc20010 	lw	v0,16(s8)
  4053c8:	24420001 	addiu	v0,v0,1
  4053cc:	afc20010 	sw	v0,16(s8)
  4053d0:	8fc2002c 	lw	v0,44(s8)
  4053d4:	2442ffff 	addiu	v0,v0,-1
  4053d8:	8fc30010 	lw	v1,16(s8)
  4053dc:	0062102a 	slt	v0,v1,v0
  4053e0:	1440fff1 	bnez	v0,4053a8 <print_char+0xc8>
  4053e4:	00000000 	nop
		out(data, &c, 1);
  4053e8:	27c30028 	addiu	v1,s8,40
  4053ec:	8fc20020 	lw	v0,32(s8)
  4053f0:	24060001 	li	a2,1
  4053f4:	00602825 	move	a1,v1
  4053f8:	8fc40024 	lw	a0,36(s8)
  4053fc:	0040f809 	jalr	v0
  405400:	00000000 	nop
}
  405404:	00000000 	nop
  405408:	03c0e825 	move	sp,s8
  40540c:	8fbf001c 	lw	ra,28(sp)
  405410:	8fbe0018 	lw	s8,24(sp)
  405414:	27bd0020 	addiu	sp,sp,32
  405418:	03e00008 	jr	ra
  40541c:	00000000 	nop

00405420 <print_str>:

void print_str(fmt_callback_t out, void *data, const char *s, int length, int ladjust) {
  405420:	27bdffd8 	addiu	sp,sp,-40
  405424:	afbf0024 	sw	ra,36(sp)
  405428:	afbe0020 	sw	s8,32(sp)
  40542c:	03a0f025 	move	s8,sp
  405430:	afc40028 	sw	a0,40(s8)
  405434:	afc5002c 	sw	a1,44(s8)
  405438:	afc60030 	sw	a2,48(s8)
  40543c:	afc70034 	sw	a3,52(s8)
	int i;
	int len = 0;
  405440:	afc00014 	sw	zero,20(s8)
	const char *s1 = s;
  405444:	8fc20030 	lw	v0,48(s8)
  405448:	afc20018 	sw	v0,24(s8)
	while (*s1++) {
  40544c:	10000004 	b	405460 <print_str+0x40>
  405450:	00000000 	nop
		len++;
  405454:	8fc20014 	lw	v0,20(s8)
  405458:	24420001 	addiu	v0,v0,1
  40545c:	afc20014 	sw	v0,20(s8)
	while (*s1++) {
  405460:	8fc20018 	lw	v0,24(s8)
  405464:	24430001 	addiu	v1,v0,1
  405468:	afc30018 	sw	v1,24(s8)
  40546c:	80420000 	lb	v0,0(v0)
  405470:	1440fff8 	bnez	v0,405454 <print_str+0x34>
  405474:	00000000 	nop
	}
	if (length < len) {
  405478:	8fc30034 	lw	v1,52(s8)
  40547c:	8fc20014 	lw	v0,20(s8)
  405480:	0062102a 	slt	v0,v1,v0
  405484:	10400003 	beqz	v0,405494 <print_str+0x74>
  405488:	00000000 	nop
		length = len;
  40548c:	8fc20014 	lw	v0,20(s8)
  405490:	afc20034 	sw	v0,52(s8)
	}

	if (ladjust) {
  405494:	8fc20038 	lw	v0,56(s8)
  405498:	1040001d 	beqz	v0,405510 <print_str+0xf0>
  40549c:	00000000 	nop
		out(data, s, len);
  4054a0:	8fc30014 	lw	v1,20(s8)
  4054a4:	8fc20028 	lw	v0,40(s8)
  4054a8:	00603025 	move	a2,v1
  4054ac:	8fc50030 	lw	a1,48(s8)
  4054b0:	8fc4002c 	lw	a0,44(s8)
  4054b4:	0040f809 	jalr	v0
  4054b8:	00000000 	nop
		for (i = len; i < length; i++) {
  4054bc:	8fc20014 	lw	v0,20(s8)
  4054c0:	afc20010 	sw	v0,16(s8)
  4054c4:	1000000b 	b	4054f4 <print_str+0xd4>
  4054c8:	00000000 	nop
			out(data, " ", 1);
  4054cc:	8fc20028 	lw	v0,40(s8)
  4054d0:	24060001 	li	a2,1
  4054d4:	3c030040 	lui	v1,0x40
  4054d8:	24656334 	addiu	a1,v1,25396
  4054dc:	8fc4002c 	lw	a0,44(s8)
  4054e0:	0040f809 	jalr	v0
  4054e4:	00000000 	nop
		for (i = len; i < length; i++) {
  4054e8:	8fc20010 	lw	v0,16(s8)
  4054ec:	24420001 	addiu	v0,v0,1
  4054f0:	afc20010 	sw	v0,16(s8)
  4054f4:	8fc30010 	lw	v1,16(s8)
  4054f8:	8fc20034 	lw	v0,52(s8)
  4054fc:	0062102a 	slt	v0,v1,v0
  405500:	1440fff2 	bnez	v0,4054cc <print_str+0xac>
  405504:	00000000 	nop
		for (i = 0; i < length - len; i++) {
			out(data, " ", 1);
		}
		out(data, s, len);
	}
}
  405508:	1000001c 	b	40557c <print_str+0x15c>
  40550c:	00000000 	nop
		for (i = 0; i < length - len; i++) {
  405510:	afc00010 	sw	zero,16(s8)
  405514:	1000000b 	b	405544 <print_str+0x124>
  405518:	00000000 	nop
			out(data, " ", 1);
  40551c:	8fc20028 	lw	v0,40(s8)
  405520:	24060001 	li	a2,1
  405524:	3c030040 	lui	v1,0x40
  405528:	24656334 	addiu	a1,v1,25396
  40552c:	8fc4002c 	lw	a0,44(s8)
  405530:	0040f809 	jalr	v0
  405534:	00000000 	nop
		for (i = 0; i < length - len; i++) {
  405538:	8fc20010 	lw	v0,16(s8)
  40553c:	24420001 	addiu	v0,v0,1
  405540:	afc20010 	sw	v0,16(s8)
  405544:	8fc30034 	lw	v1,52(s8)
  405548:	8fc20014 	lw	v0,20(s8)
  40554c:	00621023 	subu	v0,v1,v0
  405550:	8fc30010 	lw	v1,16(s8)
  405554:	0062102a 	slt	v0,v1,v0
  405558:	1440fff0 	bnez	v0,40551c <print_str+0xfc>
  40555c:	00000000 	nop
		out(data, s, len);
  405560:	8fc30014 	lw	v1,20(s8)
  405564:	8fc20028 	lw	v0,40(s8)
  405568:	00603025 	move	a2,v1
  40556c:	8fc50030 	lw	a1,48(s8)
  405570:	8fc4002c 	lw	a0,44(s8)
  405574:	0040f809 	jalr	v0
  405578:	00000000 	nop
}
  40557c:	00000000 	nop
  405580:	03c0e825 	move	sp,s8
  405584:	8fbf0024 	lw	ra,36(sp)
  405588:	8fbe0020 	lw	s8,32(sp)
  40558c:	27bd0028 	addiu	sp,sp,40
  405590:	03e00008 	jr	ra
  405594:	00000000 	nop

00405598 <print_num>:

void print_num(fmt_callback_t out, void *data, unsigned long u, int base, int neg_flag, int length,
	       int ladjust, char padc, int upcase) {
  405598:	27bdffb8 	addiu	sp,sp,-72
  40559c:	afbf0044 	sw	ra,68(sp)
  4055a0:	afbe0040 	sw	s8,64(sp)
  4055a4:	afb0003c 	sw	s0,60(sp)
  4055a8:	03a0f025 	move	s8,sp
  4055ac:	afc40048 	sw	a0,72(s8)
  4055b0:	afc5004c 	sw	a1,76(s8)
  4055b4:	afc60050 	sw	a2,80(s8)
  4055b8:	afc70054 	sw	a3,84(s8)
  4055bc:	03a02025 	move	a0,sp
  4055c0:	00808025 	move	s0,a0
	 *		    if negtive, insert  "0" padding between "0" and number.
	 *  3. if (!ladjust) we reverse the whole string including paddings
	 *  4. otherwise we only reverse the actual string representing the num.
	 */

	int actualLength = 0;
  4055c4:	afc00020 	sw	zero,32(s8)
	char buf[length + 70];
  4055c8:	8fc4005c 	lw	a0,92(s8)
  4055cc:	24840046 	addiu	a0,a0,70
  4055d0:	2485ffff 	addiu	a1,a0,-1
  4055d4:	afc50024 	sw	a1,36(s8)
  4055d8:	00802825 	move	a1,a0
  4055dc:	00a06025 	move	t4,a1
  4055e0:	00006825 	move	t5,zero
  4055e4:	000c2f42 	srl	a1,t4,0x1d
  4055e8:	000d48c0 	sll	t1,t5,0x3
  4055ec:	00a94825 	or	t1,a1,t1
  4055f0:	000c40c0 	sll	t0,t4,0x3
  4055f4:	00802825 	move	a1,a0
  4055f8:	00a05025 	move	t2,a1
  4055fc:	00005825 	move	t3,zero
  405600:	000a2f42 	srl	a1,t2,0x1d
  405604:	000b18c0 	sll	v1,t3,0x3
  405608:	00a31825 	or	v1,a1,v1
  40560c:	000a10c0 	sll	v0,t2,0x3
  405610:	00801025 	move	v0,a0
  405614:	24420007 	addiu	v0,v0,7
  405618:	000210c2 	srl	v0,v0,0x3
  40561c:	000210c0 	sll	v0,v0,0x3
  405620:	03a2e823 	subu	sp,sp,v0
  405624:	27a20010 	addiu	v0,sp,16
  405628:	24420000 	addiu	v0,v0,0
  40562c:	afc20028 	sw	v0,40(s8)
	char *p = buf;
  405630:	8fc20028 	lw	v0,40(s8)
  405634:	afc20010 	sw	v0,16(s8)
	int i;

	do {
		int tmp = u % base;
  405638:	8fc20054 	lw	v0,84(s8)
  40563c:	8fc30050 	lw	v1,80(s8)
  405640:	0062001b 	divu	zero,v1,v0
  405644:	004001f4 	teq	v0,zero,0x7
  405648:	00001010 	mfhi	v0
  40564c:	afc2002c 	sw	v0,44(s8)
		if (tmp <= 9) {
  405650:	8fc2002c 	lw	v0,44(s8)
  405654:	2842000a 	slti	v0,v0,10
  405658:	1040000d 	beqz	v0,405690 <print_num+0xf8>
  40565c:	00000000 	nop
			*p++ = '0' + tmp;
  405660:	8fc2002c 	lw	v0,44(s8)
  405664:	304200ff 	andi	v0,v0,0xff
  405668:	24420030 	addiu	v0,v0,48
  40566c:	304400ff 	andi	a0,v0,0xff
  405670:	8fc20010 	lw	v0,16(s8)
  405674:	24430001 	addiu	v1,v0,1
  405678:	afc30010 	sw	v1,16(s8)
  40567c:	00041e00 	sll	v1,a0,0x18
  405680:	00031e03 	sra	v1,v1,0x18
  405684:	a0430000 	sb	v1,0(v0)
  405688:	1000001a 	b	4056f4 <print_num+0x15c>
  40568c:	00000000 	nop
		} else if (upcase) {
  405690:	8fc20068 	lw	v0,104(s8)
  405694:	1040000d 	beqz	v0,4056cc <print_num+0x134>
  405698:	00000000 	nop
			*p++ = 'A' + tmp - 10;
  40569c:	8fc2002c 	lw	v0,44(s8)
  4056a0:	304200ff 	andi	v0,v0,0xff
  4056a4:	24420037 	addiu	v0,v0,55
  4056a8:	304400ff 	andi	a0,v0,0xff
  4056ac:	8fc20010 	lw	v0,16(s8)
  4056b0:	24430001 	addiu	v1,v0,1
  4056b4:	afc30010 	sw	v1,16(s8)
  4056b8:	00041e00 	sll	v1,a0,0x18
  4056bc:	00031e03 	sra	v1,v1,0x18
  4056c0:	a0430000 	sb	v1,0(v0)
  4056c4:	1000000b 	b	4056f4 <print_num+0x15c>
  4056c8:	00000000 	nop
		} else {
			*p++ = 'a' + tmp - 10;
  4056cc:	8fc2002c 	lw	v0,44(s8)
  4056d0:	304200ff 	andi	v0,v0,0xff
  4056d4:	24420057 	addiu	v0,v0,87
  4056d8:	304400ff 	andi	a0,v0,0xff
  4056dc:	8fc20010 	lw	v0,16(s8)
  4056e0:	24430001 	addiu	v1,v0,1
  4056e4:	afc30010 	sw	v1,16(s8)
  4056e8:	00041e00 	sll	v1,a0,0x18
  4056ec:	00031e03 	sra	v1,v1,0x18
  4056f0:	a0430000 	sb	v1,0(v0)
		}
		u /= base;
  4056f4:	8fc20054 	lw	v0,84(s8)
  4056f8:	8fc30050 	lw	v1,80(s8)
  4056fc:	0062001b 	divu	zero,v1,v0
  405700:	004001f4 	teq	v0,zero,0x7
  405704:	00001010 	mfhi	v0
  405708:	00001012 	mflo	v0
  40570c:	afc20050 	sw	v0,80(s8)
	} while (u != 0);
  405710:	8fc20050 	lw	v0,80(s8)
  405714:	1440ffc8 	bnez	v0,405638 <print_num+0xa0>
  405718:	00000000 	nop

	if (neg_flag) {
  40571c:	8fc20058 	lw	v0,88(s8)
  405720:	10400006 	beqz	v0,40573c <print_num+0x1a4>
  405724:	00000000 	nop
		*p++ = '-';
  405728:	8fc20010 	lw	v0,16(s8)
  40572c:	24430001 	addiu	v1,v0,1
  405730:	afc30010 	sw	v1,16(s8)
  405734:	2403002d 	li	v1,45
  405738:	a0430000 	sb	v1,0(v0)
	}

	/* figure out actual length and adjust the maximum length */
	actualLength = p - buf;
  40573c:	8fc30010 	lw	v1,16(s8)
  405740:	8fc20028 	lw	v0,40(s8)
  405744:	00621023 	subu	v0,v1,v0
  405748:	afc20020 	sw	v0,32(s8)
	if (length < actualLength) {
  40574c:	8fc3005c 	lw	v1,92(s8)
  405750:	8fc20020 	lw	v0,32(s8)
  405754:	0062102a 	slt	v0,v1,v0
  405758:	10400003 	beqz	v0,405768 <print_num+0x1d0>
  40575c:	00000000 	nop
		length = actualLength;
  405760:	8fc20020 	lw	v0,32(s8)
  405764:	afc2005c 	sw	v0,92(s8)
	}

	/* add padding */
	if (ladjust) {
  405768:	8fc20060 	lw	v0,96(s8)
  40576c:	10400003 	beqz	v0,40577c <print_num+0x1e4>
  405770:	00000000 	nop
		padc = ' ';
  405774:	24020020 	li	v0,32
  405778:	a3c20064 	sb	v0,100(s8)
	}
	if (neg_flag && !ladjust && (padc == '0')) {
  40577c:	8fc20058 	lw	v0,88(s8)
  405780:	10400023 	beqz	v0,405810 <print_num+0x278>
  405784:	00000000 	nop
  405788:	8fc20060 	lw	v0,96(s8)
  40578c:	14400020 	bnez	v0,405810 <print_num+0x278>
  405790:	00000000 	nop
  405794:	83c30064 	lb	v1,100(s8)
  405798:	24020030 	li	v0,48
  40579c:	1462001c 	bne	v1,v0,405810 <print_num+0x278>
  4057a0:	00000000 	nop
		for (i = actualLength - 1; i < length - 1; i++) {
  4057a4:	8fc20020 	lw	v0,32(s8)
  4057a8:	2442ffff 	addiu	v0,v0,-1
  4057ac:	afc20014 	sw	v0,20(s8)
  4057b0:	10000009 	b	4057d8 <print_num+0x240>
  4057b4:	00000000 	nop
			buf[i] = padc;
  4057b8:	8fc30028 	lw	v1,40(s8)
  4057bc:	8fc20014 	lw	v0,20(s8)
  4057c0:	00621021 	addu	v0,v1,v0
  4057c4:	93c30064 	lbu	v1,100(s8)
  4057c8:	a0430000 	sb	v1,0(v0)
		for (i = actualLength - 1; i < length - 1; i++) {
  4057cc:	8fc20014 	lw	v0,20(s8)
  4057d0:	24420001 	addiu	v0,v0,1
  4057d4:	afc20014 	sw	v0,20(s8)
  4057d8:	8fc2005c 	lw	v0,92(s8)
  4057dc:	2442ffff 	addiu	v0,v0,-1
  4057e0:	8fc30014 	lw	v1,20(s8)
  4057e4:	0062102a 	slt	v0,v1,v0
  4057e8:	1440fff3 	bnez	v0,4057b8 <print_num+0x220>
  4057ec:	00000000 	nop
		}
		buf[length - 1] = '-';
  4057f0:	8fc2005c 	lw	v0,92(s8)
  4057f4:	2442ffff 	addiu	v0,v0,-1
  4057f8:	8fc30028 	lw	v1,40(s8)
  4057fc:	00621021 	addu	v0,v1,v0
  405800:	2403002d 	li	v1,45
  405804:	a0430000 	sb	v1,0(v0)
  405808:	10000012 	b	405854 <print_num+0x2bc>
  40580c:	00000000 	nop
	} else {
		for (i = actualLength; i < length; i++) {
  405810:	8fc20020 	lw	v0,32(s8)
  405814:	afc20014 	sw	v0,20(s8)
  405818:	10000009 	b	405840 <print_num+0x2a8>
  40581c:	00000000 	nop
			buf[i] = padc;
  405820:	8fc30028 	lw	v1,40(s8)
  405824:	8fc20014 	lw	v0,20(s8)
  405828:	00621021 	addu	v0,v1,v0
  40582c:	93c30064 	lbu	v1,100(s8)
  405830:	a0430000 	sb	v1,0(v0)
		for (i = actualLength; i < length; i++) {
  405834:	8fc20014 	lw	v0,20(s8)
  405838:	24420001 	addiu	v0,v0,1
  40583c:	afc20014 	sw	v0,20(s8)
  405840:	8fc30014 	lw	v1,20(s8)
  405844:	8fc2005c 	lw	v0,92(s8)
  405848:	0062102a 	slt	v0,v1,v0
  40584c:	1440fff4 	bnez	v0,405820 <print_num+0x288>
  405850:	00000000 	nop
		}
	}

	/* prepare to reverse the string */
	int begin = 0;
  405854:	afc00018 	sw	zero,24(s8)
	int end;
	if (ladjust) {
  405858:	8fc20060 	lw	v0,96(s8)
  40585c:	10400006 	beqz	v0,405878 <print_num+0x2e0>
  405860:	00000000 	nop
		end = actualLength - 1;
  405864:	8fc20020 	lw	v0,32(s8)
  405868:	2442ffff 	addiu	v0,v0,-1
  40586c:	afc2001c 	sw	v0,28(s8)
  405870:	1000001e 	b	4058ec <print_num+0x354>
  405874:	00000000 	nop
	} else {
		end = length - 1;
  405878:	8fc2005c 	lw	v0,92(s8)
  40587c:	2442ffff 	addiu	v0,v0,-1
  405880:	afc2001c 	sw	v0,28(s8)
	}

	/* adjust the string pointer */
	while (end > begin) {
  405884:	10000019 	b	4058ec <print_num+0x354>
  405888:	00000000 	nop
		char tmp = buf[begin];
  40588c:	8fc30028 	lw	v1,40(s8)
  405890:	8fc20018 	lw	v0,24(s8)
  405894:	00621021 	addu	v0,v1,v0
  405898:	90420000 	lbu	v0,0(v0)
  40589c:	a3c20030 	sb	v0,48(s8)
		buf[begin] = buf[end];
  4058a0:	8fc30028 	lw	v1,40(s8)
  4058a4:	8fc2001c 	lw	v0,28(s8)
  4058a8:	00621021 	addu	v0,v1,v0
  4058ac:	80430000 	lb	v1,0(v0)
  4058b0:	8fc40028 	lw	a0,40(s8)
  4058b4:	8fc20018 	lw	v0,24(s8)
  4058b8:	00821021 	addu	v0,a0,v0
  4058bc:	a0430000 	sb	v1,0(v0)
		buf[end] = tmp;
  4058c0:	8fc30028 	lw	v1,40(s8)
  4058c4:	8fc2001c 	lw	v0,28(s8)
  4058c8:	00621021 	addu	v0,v1,v0
  4058cc:	93c30030 	lbu	v1,48(s8)
  4058d0:	a0430000 	sb	v1,0(v0)
		begin++;
  4058d4:	8fc20018 	lw	v0,24(s8)
  4058d8:	24420001 	addiu	v0,v0,1
  4058dc:	afc20018 	sw	v0,24(s8)
		end--;
  4058e0:	8fc2001c 	lw	v0,28(s8)
  4058e4:	2442ffff 	addiu	v0,v0,-1
  4058e8:	afc2001c 	sw	v0,28(s8)
	while (end > begin) {
  4058ec:	8fc3001c 	lw	v1,28(s8)
  4058f0:	8fc20018 	lw	v0,24(s8)
  4058f4:	0043102a 	slt	v0,v0,v1
  4058f8:	1440ffe4 	bnez	v0,40588c <print_num+0x2f4>
  4058fc:	00000000 	nop
	}

	out(data, buf, length);
  405900:	8fc3005c 	lw	v1,92(s8)
  405904:	8fc20048 	lw	v0,72(s8)
  405908:	00603025 	move	a2,v1
  40590c:	8fc50028 	lw	a1,40(s8)
  405910:	8fc4004c 	lw	a0,76(s8)
  405914:	0040f809 	jalr	v0
  405918:	00000000 	nop
  40591c:	0200e825 	move	sp,s0
}
  405920:	00000000 	nop
  405924:	03c0e825 	move	sp,s8
  405928:	8fbf0044 	lw	ra,68(sp)
  40592c:	8fbe0040 	lw	s8,64(sp)
  405930:	8fb0003c 	lw	s0,60(sp)
  405934:	27bd0048 	addiu	sp,sp,72
  405938:	03e00008 	jr	ra
  40593c:	00000000 	nop

00405940 <memcpy>:
#include <types.h>

void *memcpy(void *dst, const void *src, size_t n) {
  405940:	27bdfff0 	addiu	sp,sp,-16
  405944:	afbe000c 	sw	s8,12(sp)
  405948:	03a0f025 	move	s8,sp
  40594c:	afc40010 	sw	a0,16(s8)
  405950:	afc50014 	sw	a1,20(s8)
  405954:	afc60018 	sw	a2,24(s8)
	void *dstaddr = dst;
  405958:	8fc20010 	lw	v0,16(s8)
  40595c:	afc20000 	sw	v0,0(s8)
	void *max = dst + n;
  405960:	8fc30010 	lw	v1,16(s8)
  405964:	8fc20018 	lw	v0,24(s8)
  405968:	00621021 	addu	v0,v1,v0
  40596c:	afc20004 	sw	v0,4(s8)

	if (((u_long)src & 3) != ((u_long)dst & 3)) {
  405970:	8fc30014 	lw	v1,20(s8)
  405974:	8fc20010 	lw	v0,16(s8)
  405978:	00621026 	xor	v0,v1,v0
  40597c:	30420003 	andi	v0,v0,0x3
  405980:	1040001b 	beqz	v0,4059f0 <memcpy+0xb0>
  405984:	00000000 	nop
		while (dst < max) {
  405988:	10000009 	b	4059b0 <memcpy+0x70>
  40598c:	00000000 	nop
			*(char *)dst++ = *(char *)src++;
  405990:	8fc30014 	lw	v1,20(s8)
  405994:	24620001 	addiu	v0,v1,1
  405998:	afc20014 	sw	v0,20(s8)
  40599c:	8fc20010 	lw	v0,16(s8)
  4059a0:	24440001 	addiu	a0,v0,1
  4059a4:	afc40010 	sw	a0,16(s8)
  4059a8:	80630000 	lb	v1,0(v1)
  4059ac:	a0430000 	sb	v1,0(v0)
		while (dst < max) {
  4059b0:	8fc30010 	lw	v1,16(s8)
  4059b4:	8fc20004 	lw	v0,4(s8)
  4059b8:	0062102b 	sltu	v0,v1,v0
  4059bc:	1440fff4 	bnez	v0,405990 <memcpy+0x50>
  4059c0:	00000000 	nop
		}
		return dstaddr;
  4059c4:	8fc20000 	lw	v0,0(s8)
  4059c8:	10000034 	b	405a9c <memcpy+0x15c>
  4059cc:	00000000 	nop
	}

	while (((u_long)dst & 3) && dst < max) {
		*(char *)dst++ = *(char *)src++;
  4059d0:	8fc30014 	lw	v1,20(s8)
  4059d4:	24620001 	addiu	v0,v1,1
  4059d8:	afc20014 	sw	v0,20(s8)
  4059dc:	8fc20010 	lw	v0,16(s8)
  4059e0:	24440001 	addiu	a0,v0,1
  4059e4:	afc40010 	sw	a0,16(s8)
  4059e8:	80630000 	lb	v1,0(v1)
  4059ec:	a0430000 	sb	v1,0(v0)
	while (((u_long)dst & 3) && dst < max) {
  4059f0:	8fc20010 	lw	v0,16(s8)
  4059f4:	30420003 	andi	v0,v0,0x3
  4059f8:	10400012 	beqz	v0,405a44 <memcpy+0x104>
  4059fc:	00000000 	nop
  405a00:	8fc30010 	lw	v1,16(s8)
  405a04:	8fc20004 	lw	v0,4(s8)
  405a08:	0062102b 	sltu	v0,v1,v0
  405a0c:	1440fff0 	bnez	v0,4059d0 <memcpy+0x90>
  405a10:	00000000 	nop
	}

	// copy machine words while possible
	while (dst + 4 <= max) {
  405a14:	1000000b 	b	405a44 <memcpy+0x104>
  405a18:	00000000 	nop
		*(uint32_t *)dst = *(uint32_t *)src;
  405a1c:	8fc20014 	lw	v0,20(s8)
  405a20:	8c430000 	lw	v1,0(v0)
  405a24:	8fc20010 	lw	v0,16(s8)
  405a28:	ac430000 	sw	v1,0(v0)
		dst += 4;
  405a2c:	8fc20010 	lw	v0,16(s8)
  405a30:	24420004 	addiu	v0,v0,4
  405a34:	afc20010 	sw	v0,16(s8)
		src += 4;
  405a38:	8fc20014 	lw	v0,20(s8)
  405a3c:	24420004 	addiu	v0,v0,4
  405a40:	afc20014 	sw	v0,20(s8)
	while (dst + 4 <= max) {
  405a44:	8fc20010 	lw	v0,16(s8)
  405a48:	24420004 	addiu	v0,v0,4
  405a4c:	8fc30004 	lw	v1,4(s8)
  405a50:	0062102b 	sltu	v0,v1,v0
  405a54:	1040fff1 	beqz	v0,405a1c <memcpy+0xdc>
  405a58:	00000000 	nop
	}

	// finish the remaining 0-3 bytes
	while (dst < max) {
  405a5c:	10000009 	b	405a84 <memcpy+0x144>
  405a60:	00000000 	nop
		*(char *)dst++ = *(char *)src++;
  405a64:	8fc30014 	lw	v1,20(s8)
  405a68:	24620001 	addiu	v0,v1,1
  405a6c:	afc20014 	sw	v0,20(s8)
  405a70:	8fc20010 	lw	v0,16(s8)
  405a74:	24440001 	addiu	a0,v0,1
  405a78:	afc40010 	sw	a0,16(s8)
  405a7c:	80630000 	lb	v1,0(v1)
  405a80:	a0430000 	sb	v1,0(v0)
	while (dst < max) {
  405a84:	8fc30010 	lw	v1,16(s8)
  405a88:	8fc20004 	lw	v0,4(s8)
  405a8c:	0062102b 	sltu	v0,v1,v0
  405a90:	1440fff4 	bnez	v0,405a64 <memcpy+0x124>
  405a94:	00000000 	nop
	}
	return dstaddr;
  405a98:	8fc20000 	lw	v0,0(s8)
}
  405a9c:	03c0e825 	move	sp,s8
  405aa0:	8fbe000c 	lw	s8,12(sp)
  405aa4:	27bd0010 	addiu	sp,sp,16
  405aa8:	03e00008 	jr	ra
  405aac:	00000000 	nop

00405ab0 <memset>:

void *memset(void *dst, int c, size_t n) {
  405ab0:	27bdffe8 	addiu	sp,sp,-24
  405ab4:	afbe0014 	sw	s8,20(sp)
  405ab8:	03a0f025 	move	s8,sp
  405abc:	afc40018 	sw	a0,24(s8)
  405ac0:	afc5001c 	sw	a1,28(s8)
  405ac4:	afc60020 	sw	a2,32(s8)
	void *dstaddr = dst;
  405ac8:	8fc20018 	lw	v0,24(s8)
  405acc:	afc20000 	sw	v0,0(s8)
	void *max = dst + n;
  405ad0:	8fc30018 	lw	v1,24(s8)
  405ad4:	8fc20020 	lw	v0,32(s8)
  405ad8:	00621021 	addu	v0,v1,v0
  405adc:	afc20004 	sw	v0,4(s8)
	u_char byte = c & 0xff;
  405ae0:	8fc2001c 	lw	v0,28(s8)
  405ae4:	a3c20008 	sb	v0,8(s8)
	uint32_t word = byte | byte << 8 | byte << 16 | byte << 24;
  405ae8:	93c30008 	lbu	v1,8(s8)
  405aec:	93c20008 	lbu	v0,8(s8)
  405af0:	00021200 	sll	v0,v0,0x8
  405af4:	00621825 	or	v1,v1,v0
  405af8:	93c20008 	lbu	v0,8(s8)
  405afc:	00021400 	sll	v0,v0,0x10
  405b00:	00621825 	or	v1,v1,v0
  405b04:	93c20008 	lbu	v0,8(s8)
  405b08:	00021600 	sll	v0,v0,0x18
  405b0c:	00621025 	or	v0,v1,v0
  405b10:	afc2000c 	sw	v0,12(s8)

	while (((u_long)dst & 3) && dst < max) {
  405b14:	10000006 	b	405b30 <memset+0x80>
  405b18:	00000000 	nop
		*(u_char *)dst++ = byte;
  405b1c:	8fc20018 	lw	v0,24(s8)
  405b20:	24430001 	addiu	v1,v0,1
  405b24:	afc30018 	sw	v1,24(s8)
  405b28:	93c30008 	lbu	v1,8(s8)
  405b2c:	a0430000 	sb	v1,0(v0)
	while (((u_long)dst & 3) && dst < max) {
  405b30:	8fc20018 	lw	v0,24(s8)
  405b34:	30420003 	andi	v0,v0,0x3
  405b38:	1040000e 	beqz	v0,405b74 <memset+0xc4>
  405b3c:	00000000 	nop
  405b40:	8fc30018 	lw	v1,24(s8)
  405b44:	8fc20004 	lw	v0,4(s8)
  405b48:	0062102b 	sltu	v0,v1,v0
  405b4c:	1440fff3 	bnez	v0,405b1c <memset+0x6c>
  405b50:	00000000 	nop
	}

	// fill machine words while possible
	while (dst + 4 <= max) {
  405b54:	10000007 	b	405b74 <memset+0xc4>
  405b58:	00000000 	nop
		*(uint32_t *)dst = word;
  405b5c:	8fc20018 	lw	v0,24(s8)
  405b60:	8fc3000c 	lw	v1,12(s8)
  405b64:	ac430000 	sw	v1,0(v0)
		dst += 4;
  405b68:	8fc20018 	lw	v0,24(s8)
  405b6c:	24420004 	addiu	v0,v0,4
  405b70:	afc20018 	sw	v0,24(s8)
	while (dst + 4 <= max) {
  405b74:	8fc20018 	lw	v0,24(s8)
  405b78:	24420004 	addiu	v0,v0,4
  405b7c:	8fc30004 	lw	v1,4(s8)
  405b80:	0062102b 	sltu	v0,v1,v0
  405b84:	1040fff5 	beqz	v0,405b5c <memset+0xac>
  405b88:	00000000 	nop
	}

	// finish the remaining 0-3 bytes
	while (dst < max) {
  405b8c:	10000006 	b	405ba8 <memset+0xf8>
  405b90:	00000000 	nop
		*(u_char *)dst++ = byte;
  405b94:	8fc20018 	lw	v0,24(s8)
  405b98:	24430001 	addiu	v1,v0,1
  405b9c:	afc30018 	sw	v1,24(s8)
  405ba0:	93c30008 	lbu	v1,8(s8)
  405ba4:	a0430000 	sb	v1,0(v0)
	while (dst < max) {
  405ba8:	8fc30018 	lw	v1,24(s8)
  405bac:	8fc20004 	lw	v0,4(s8)
  405bb0:	0062102b 	sltu	v0,v1,v0
  405bb4:	1440fff7 	bnez	v0,405b94 <memset+0xe4>
  405bb8:	00000000 	nop
	}
	return dstaddr;
  405bbc:	8fc20000 	lw	v0,0(s8)
}
  405bc0:	03c0e825 	move	sp,s8
  405bc4:	8fbe0014 	lw	s8,20(sp)
  405bc8:	27bd0018 	addiu	sp,sp,24
  405bcc:	03e00008 	jr	ra
  405bd0:	00000000 	nop

00405bd4 <strlen>:

size_t strlen(const char *s) {
  405bd4:	27bdfff0 	addiu	sp,sp,-16
  405bd8:	afbe000c 	sw	s8,12(sp)
  405bdc:	03a0f025 	move	s8,sp
  405be0:	afc40010 	sw	a0,16(s8)
	int n;

	for (n = 0; *s; s++) {
  405be4:	afc00000 	sw	zero,0(s8)
  405be8:	10000007 	b	405c08 <strlen+0x34>
  405bec:	00000000 	nop
		n++;
  405bf0:	8fc20000 	lw	v0,0(s8)
  405bf4:	24420001 	addiu	v0,v0,1
  405bf8:	afc20000 	sw	v0,0(s8)
	for (n = 0; *s; s++) {
  405bfc:	8fc20010 	lw	v0,16(s8)
  405c00:	24420001 	addiu	v0,v0,1
  405c04:	afc20010 	sw	v0,16(s8)
  405c08:	8fc20010 	lw	v0,16(s8)
  405c0c:	80420000 	lb	v0,0(v0)
  405c10:	1440fff7 	bnez	v0,405bf0 <strlen+0x1c>
  405c14:	00000000 	nop
	}

	return n;
  405c18:	8fc20000 	lw	v0,0(s8)
}
  405c1c:	03c0e825 	move	sp,s8
  405c20:	8fbe000c 	lw	s8,12(sp)
  405c24:	27bd0010 	addiu	sp,sp,16
  405c28:	03e00008 	jr	ra
  405c2c:	00000000 	nop

00405c30 <strcpy>:

char *strcpy(char *dst, const char *src) {
  405c30:	27bdfff0 	addiu	sp,sp,-16
  405c34:	afbe000c 	sw	s8,12(sp)
  405c38:	03a0f025 	move	s8,sp
  405c3c:	afc40010 	sw	a0,16(s8)
  405c40:	afc50014 	sw	a1,20(s8)
	char *ret = dst;
  405c44:	8fc20010 	lw	v0,16(s8)
  405c48:	afc20000 	sw	v0,0(s8)

	while ((*dst++ = *src++) != 0) {
  405c4c:	00000000 	nop
  405c50:	8fc30014 	lw	v1,20(s8)
  405c54:	24620001 	addiu	v0,v1,1
  405c58:	afc20014 	sw	v0,20(s8)
  405c5c:	8fc20010 	lw	v0,16(s8)
  405c60:	24440001 	addiu	a0,v0,1
  405c64:	afc40010 	sw	a0,16(s8)
  405c68:	80630000 	lb	v1,0(v1)
  405c6c:	a0430000 	sb	v1,0(v0)
  405c70:	80420000 	lb	v0,0(v0)
  405c74:	1440fff6 	bnez	v0,405c50 <strcpy+0x20>
  405c78:	00000000 	nop
	}

	return ret;
  405c7c:	8fc20000 	lw	v0,0(s8)
}
  405c80:	03c0e825 	move	sp,s8
  405c84:	8fbe000c 	lw	s8,12(sp)
  405c88:	27bd0010 	addiu	sp,sp,16
  405c8c:	03e00008 	jr	ra
  405c90:	00000000 	nop

00405c94 <strchr>:

const char *strchr(const char *s, int c) {
  405c94:	27bdfff8 	addiu	sp,sp,-8
  405c98:	afbe0004 	sw	s8,4(sp)
  405c9c:	03a0f025 	move	s8,sp
  405ca0:	afc40008 	sw	a0,8(s8)
  405ca4:	afc5000c 	sw	a1,12(s8)
	for (; *s; s++) {
  405ca8:	1000000d 	b	405ce0 <strchr+0x4c>
  405cac:	00000000 	nop
		if (*s == c) {
  405cb0:	8fc20008 	lw	v0,8(s8)
  405cb4:	80420000 	lb	v0,0(v0)
  405cb8:	00401825 	move	v1,v0
  405cbc:	8fc2000c 	lw	v0,12(s8)
  405cc0:	14430004 	bne	v0,v1,405cd4 <strchr+0x40>
  405cc4:	00000000 	nop
			return s;
  405cc8:	8fc20008 	lw	v0,8(s8)
  405ccc:	10000009 	b	405cf4 <strchr+0x60>
  405cd0:	00000000 	nop
	for (; *s; s++) {
  405cd4:	8fc20008 	lw	v0,8(s8)
  405cd8:	24420001 	addiu	v0,v0,1
  405cdc:	afc20008 	sw	v0,8(s8)
  405ce0:	8fc20008 	lw	v0,8(s8)
  405ce4:	80420000 	lb	v0,0(v0)
  405ce8:	1440fff1 	bnez	v0,405cb0 <strchr+0x1c>
  405cec:	00000000 	nop
		}
	}
	return 0;
  405cf0:	00001025 	move	v0,zero
}
  405cf4:	03c0e825 	move	sp,s8
  405cf8:	8fbe0004 	lw	s8,4(sp)
  405cfc:	27bd0008 	addiu	sp,sp,8
  405d00:	03e00008 	jr	ra
  405d04:	00000000 	nop

00405d08 <strcmp>:

int strcmp(const char *p, const char *q) {
  405d08:	27bdfff8 	addiu	sp,sp,-8
  405d0c:	afbe0004 	sw	s8,4(sp)
  405d10:	03a0f025 	move	s8,sp
  405d14:	afc40008 	sw	a0,8(s8)
  405d18:	afc5000c 	sw	a1,12(s8)
	while (*p && *p == *q) {
  405d1c:	10000007 	b	405d3c <strcmp+0x34>
  405d20:	00000000 	nop
		p++, q++;
  405d24:	8fc20008 	lw	v0,8(s8)
  405d28:	24420001 	addiu	v0,v0,1
  405d2c:	afc20008 	sw	v0,8(s8)
  405d30:	8fc2000c 	lw	v0,12(s8)
  405d34:	24420001 	addiu	v0,v0,1
  405d38:	afc2000c 	sw	v0,12(s8)
	while (*p && *p == *q) {
  405d3c:	8fc20008 	lw	v0,8(s8)
  405d40:	80420000 	lb	v0,0(v0)
  405d44:	10400007 	beqz	v0,405d64 <strcmp+0x5c>
  405d48:	00000000 	nop
  405d4c:	8fc20008 	lw	v0,8(s8)
  405d50:	80430000 	lb	v1,0(v0)
  405d54:	8fc2000c 	lw	v0,12(s8)
  405d58:	80420000 	lb	v0,0(v0)
  405d5c:	1062fff1 	beq	v1,v0,405d24 <strcmp+0x1c>
  405d60:	00000000 	nop
	}

	if ((u_int)*p < (u_int)*q) {
  405d64:	8fc20008 	lw	v0,8(s8)
  405d68:	80420000 	lb	v0,0(v0)
  405d6c:	304300ff 	andi	v1,v0,0xff
  405d70:	8fc2000c 	lw	v0,12(s8)
  405d74:	80420000 	lb	v0,0(v0)
  405d78:	304200ff 	andi	v0,v0,0xff
  405d7c:	0062102b 	sltu	v0,v1,v0
  405d80:	10400004 	beqz	v0,405d94 <strcmp+0x8c>
  405d84:	00000000 	nop
		return -1;
  405d88:	2402ffff 	li	v0,-1
  405d8c:	1000000e 	b	405dc8 <strcmp+0xc0>
  405d90:	00000000 	nop
	}

	if ((u_int)*p > (u_int)*q) {
  405d94:	8fc20008 	lw	v0,8(s8)
  405d98:	80420000 	lb	v0,0(v0)
  405d9c:	304300ff 	andi	v1,v0,0xff
  405da0:	8fc2000c 	lw	v0,12(s8)
  405da4:	80420000 	lb	v0,0(v0)
  405da8:	304200ff 	andi	v0,v0,0xff
  405dac:	0043102b 	sltu	v0,v0,v1
  405db0:	10400004 	beqz	v0,405dc4 <strcmp+0xbc>
  405db4:	00000000 	nop
		return 1;
  405db8:	24020001 	li	v0,1
  405dbc:	10000002 	b	405dc8 <strcmp+0xc0>
  405dc0:	00000000 	nop
	}

	return 0;
  405dc4:	00001025 	move	v0,zero
}
  405dc8:	03c0e825 	move	sp,s8
  405dcc:	8fbe0004 	lw	s8,4(sp)
  405dd0:	27bd0008 	addiu	sp,sp,8
  405dd4:	03e00008 	jr	ra
  405dd8:	00000000 	nop
  405ddc:	00000000 	nop
  405de0:	74706163 	jalx	1c1858c <end+0x180e58c>
  405de4:	20657275 	addi	a1,v1,29301
  405de8:	49474953 	0x49474953
  405dec:	73204c4c 	0x73204c4c
  405df0:	616e6769 	0x616e6769
  405df4:	25202e6c 	addiu	zero,t1,11884
  405df8:	00000a64 	0xa64
  405dfc:	49474953 	0x49474953
  405e00:	73204c4c 	0x73204c4c
  405e04:	616e6769 	0x616e6769
  405e08:	6168206c 	0x6168206c
  405e0c:	656c646e 	0x656c646e
  405e10:	65722072 	0x65722072
  405e14:	6e727574 	0x6e727574
  405e18:	25202e73 	addiu	zero,t1,11891
  405e1c:	00000a64 	0xa64
  405e20:	74706163 	jalx	1c1858c <end+0x180e58c>
  405e24:	20657275 	addi	a1,v1,29301
  405e28:	43474953 	c0	0x1474953
  405e2c:	20444c48 	addi	a0,v0,19528
  405e30:	6e676973 	0x6e676973
  405e34:	202e6c61 	addi	t6,at,27745
  405e38:	000a6425 	0xa6425
  405e3c:	43474953 	c0	0x1474953
  405e40:	20444c48 	addi	a0,v0,19528
  405e44:	6e676973 	0x6e676973
  405e48:	68206c61 	0x68206c61
  405e4c:	6c646e61 	0x6c646e61
  405e50:	72207265 	0x72207265
  405e54:	72757465 	0x72757465
  405e58:	202e736e 	addi	t6,at,29550
  405e5c:	000a6425 	0xa6425
  405e60:	74706163 	jalx	1c1858c <end+0x180e58c>
  405e64:	20657275 	addi	a1,v1,29301
  405e68:	49474953 	0x49474953
  405e6c:	7320544e 	0x7320544e
  405e70:	616e6769 	0x616e6769
  405e74:	25202e6c 	addiu	zero,t1,11884
  405e78:	00000a64 	0xa64
  405e7c:	49474953 	0x49474953
  405e80:	7320544e 	0x7320544e
  405e84:	616e6769 	0x616e6769
  405e88:	6168206c 	0x6168206c
  405e8c:	656c646e 	0x656c646e
  405e90:	65722072 	0x65722072
  405e94:	6e727574 	0x6e727574
  405e98:	25202e73 	addiu	zero,t1,11891
  405e9c:	00000a64 	0xa64
  405ea0:	646e6573 	0x646e6573
  405ea4:	47495320 	c1	0x1495320
  405ea8:	2e544e49 	sltiu	s4,s2,20041
  405eac:	0000000a 	movz	zero,zero,zero
  405eb0:	646e6573 	0x646e6573
  405eb4:	47495320 	c1	0x1495320
  405eb8:	444c4843 	0x444c4843
  405ebc:	00000a2e 	0xa2e
  405ec0:	6c6c6548 	0x6c6c6548
  405ec4:	77202c6f 	jalx	c80b1bc <end+0xc4011bc>
  405ec8:	646c726f 	0x646c726f
  405ecc:	00000a21 	0xa21
  405ed0:	63737973 	0x63737973
  405ed4:	5f6c6c61 	0x5f6c6c61
  405ed8:	6e697270 	0x6e697270
  405edc:	6f635f74 	0x6f635f74
  405ee0:	203a736e 	addi	k0,at,29550
  405ee4:	00006425 	0x6425
  405ee8:	2f62696c 	sltiu	v0,k1,26988
  405eec:	75626564 	jalx	5899590 <end+0x548f590>
  405ef0:	632e6667 	0x632e6667
  405ef4:	00000000 	nop
  405ef8:	696e6170 	0x696e6170
  405efc:	74612063 	jalx	184818c <end+0x143e18c>
  405f00:	3a732520 	xori	s3,s3,0x2520
  405f04:	203a6425 	addi	k0,at,25637
  405f08:	00000000 	nop
  405f0c:	0000000a 	movz	zero,zero,zero
  405f10:	746c6168 	jalx	1b185a0 <end+0x170e5a0>
  405f14:	20746120 	addi	s4,v1,24864
  405f18:	253a7325 	addiu	k0,t1,29477
  405f1c:	00203a64 	0x203a64
  405f20:	72657375 	0x72657375
  405f24:	6c616820 	0x6c616820
  405f28:	00000074 	teq	zero,zero,0x1
  405f2c:	00000000 	nop
  405f30:	65726e75 	0x65726e75
  405f34:	61686361 	0x61686361
  405f38:	20656c62 	addi	a1,v1,27746
  405f3c:	65646f63 	0x65646f63
  405f40:	00000000 	nop
  405f44:	2f62696c 	sltiu	v0,k1,26988
  405f48:	6f62696c 	0x6f62696c
  405f4c:	00632e73 	tltu	v1,v1,0xb9
  405f50:	50206f4e 	beqzl	at,421c8c <end+0x17c8c>
  405f54:	435f4554 	c0	0x15f4554
  405f58:	6620574f 	0x6620574f
  405f5c:	7020726f 	0x7020726f
  405f60:	20656761 	addi	a1,v1,26465
  405f64:	00007825 	move	t7,zero
  405f68:	2f62696c 	sltiu	v0,k1,26988
  405f6c:	6b726f66 	0x6b726f66
  405f70:	0000632e 	0x632e
  405f74:	63737973 	0x63737973
  405f78:	5f6c6c61 	0x5f6c6c61
  405f7c:	5f746573 	0x5f746573
  405f80:	70617274 	0x70617274
  405f84:	6d617266 	0x6d617266
  405f88:	65722065 	0x65722065
  405f8c:	6e727574 	0x6e727574
  405f90:	25206465 	addiu	zero,t1,25701
  405f94:	00000064 	0x64
  405f98:	25207825 	addiu	zero,t1,30757
  405f9c:	6e692064 	0x6e692064
  405fa0:	67697320 	0x67697320
  405fa4:	746e655f 	jalx	1b9957c <end+0x178f57c>
  405fa8:	20217972 	addi	at,at,31090
  405fac:	000a7825 	or	t7,zero,t2
  405fb0:	5f535953 	0x5f535953
  405fb4:	696e6170 	0x696e6170
  405fb8:	65722063 	0x65722063
  405fbc:	6e727574 	0x6e727574
  405fc0:	25206465 	addiu	zero,t1,25701
  405fc4:	00000064 	0x64
  405fc8:	2f62696c 	sltiu	v0,k1,26988
  405fcc:	63737973 	0x63737973
  405fd0:	5f6c6c61 	0x5f6c6c61
  405fd4:	2e62696c 	sltiu	v0,s3,26988
  405fd8:	00000063 	0x63
  405fdc:	00000000 	nop
  405fe0:	3d3d2072 	0x3d3d2072
  405fe4:	00003020 	add	a2,zero,zero
  405fe8:	65737361 	0x65737361
  405fec:	6f697472 	0x6f697472
  405ff0:	6166206e 	0x6166206e
  405ff4:	64656c69 	0x64656c69
  405ff8:	7325203a 	0x7325203a
  405ffc:	00000000 	nop
  406000:	2f62696c 	sltiu	v0,k1,26988
  406004:	2e637069 	sltiu	v1,s3,28777
  406008:	00000063 	0x63
  40600c:	63737973 	0x63737973
  406010:	5f6c6c61 	0x5f6c6c61
  406014:	5f637069 	0x5f637069
  406018:	76636572 	jalx	98d95c8 <end+0x94cf5c8>
  40601c:	72726520 	0x72726520
  406020:	6425203a 	0x6425203a
	...
  406030:	3830255b 	xori	s0,at,0x255b
  406034:	75205d78 	jalx	48175e0 <end+0x440d5e0>
  406038:	6f6e6b6e 	0x6f6e6b6e
  40603c:	64206e77 	0x64206e77
  406040:	63697665 	0x63697665
  406044:	79742065 	0x79742065
  406048:	25206570 	addiu	zero,t1,25968
  40604c:	00000a64 	0xa64
  406050:	73797327 	0x73797327
  406054:	6c6c6163 	0x6c6c6163
  406058:	6d656d5f 	0x6d656d5f
  40605c:	6d6e755f 	0x6d6e755f
  406060:	30287061 	andi	t0,at,0x7061
  406064:	6466202c 	0x6466202c
  406068:	72202729 	0x72202729
  40606c:	72757465 	0x72757465
  406070:	2064656e 	addi	a0,v1,25966
  406074:	00006425 	0x6425
  406078:	2f62696c 	sltiu	v0,k1,26988
  40607c:	632e6466 	0x632e6466
  406080:	00000000 	nop
  406084:	73797327 	0x73797327
  406088:	6c6c6163 	0x6c6c6163
  40608c:	6d656d5f 	0x6d656d5f
  406090:	6d6e755f 	0x6d6e755f
  406094:	30287061 	andi	t0,at,0x7061
  406098:	656e202c 	0x656e202c
  40609c:	29646677 	slti	a0,t3,26231
  4060a0:	65722027 	0x65722027
  4060a4:	6e727574 	0x6e727574
  4060a8:	25206465 	addiu	zero,t1,25701
  4060ac:	00000064 	0x64
  4060b0:	73797327 	0x73797327
  4060b4:	6c6c6163 	0x6c6c6163
  4060b8:	6d656d5f 	0x6d656d5f
  4060bc:	6d6e755f 	0x6d6e755f
  4060c0:	30287061 	andi	t0,at,0x7061
  4060c4:	7628202c 	jalx	8a080b0 <end+0x85fe0b0>
  4060c8:	2064696f 	addi	a0,v1,26991
  4060cc:	6e28292a 	0x6e28292a
  4060d0:	2b206176 	slti	zero,t9,24950
  4060d4:	29296920 	slti	t1,t1,26912
  4060d8:	65722027 	0x65722027
  4060dc:	6e727574 	0x6e727574
  4060e0:	25206465 	addiu	zero,t1,25701
  4060e4:	00000064 	0x64
	...
  4060f0:	656c6966 	0x656c6966
  4060f4:	00000000 	nop
  4060f8:	6e6e6163 	0x6e6e6163
  4060fc:	6d20746f 	0x6d20746f
  406100:	206b7261 	addi	t3,v1,29281
  406104:	65676170 	0x65676170
  406108:	73612073 	0x73612073
  40610c:	72696420 	0x72696420
  406110:	000a7974 	teq	zero,t2,0x1e5
  406114:	6e6e6163 	0x6e6e6163
  406118:	6320746f 	0x6320746f
  40611c:	65736f6c 	0x65736f6c
  406120:	65687420 	0x65687420
  406124:	6c696620 	0x6c696620
  406128:	00000a65 	0xa65
  40612c:	6e6e6163 	0x6e6e6163
  406130:	20746e6f 	addi	s4,v1,28271
  406134:	616d6e75 	0x616d6e75
  406138:	68742070 	0x68742070
  40613c:	69662065 	0x69662065
  406140:	000a656c 	0xa656c
  406144:	75727466 	jalx	5c9d198 <end+0x5893198>
  406148:	7461636e 	jalx	1858db8 <end+0x144edb8>
  40614c:	73203a65 	0x73203a65
  406150:	61637379 	0x61637379
  406154:	6d5f6c6c 	0x6d5f6c6c
  406158:	755f6d65 	jalx	57db594 <end+0x53d1594>
  40615c:	70616d6e 	0x70616d6e
  406160:	38302520 	xori	s0,at,0x2520
  406164:	25203a78 	addiu	zero,t1,14968
  406168:	00000a64 	0xa64
  40616c:	2f62696c 	sltiu	v0,k1,26988
  406170:	656c6966 	0x656c6966
  406174:	0000632e 	0x632e
	...
  406180:	70697366 	0x70697366
  406184:	616d5f63 	0x616d5f63
  406188:	75203a70 	jalx	480e9c0 <end+0x44049c0>
  40618c:	7078656e 	0x7078656e
  406190:	65746365 	0x65746365
  406194:	65702064 	0x65702064
  406198:	73696d72 	0x73696d72
  40619c:	6e6f6973 	0x6e6f6973
  4061a0:	30252073 	andi	a1,at,0x2073
  4061a4:	66207838 	0x66207838
  4061a8:	6420726f 	0x6420726f
  4061ac:	61767473 	0x61767473
  4061b0:	38302520 	xori	s0,at,0x2520
  4061b4:	00000078 	0x78
  4061b8:	2f62696c 	sltiu	v0,k1,26988
  4061bc:	70697366 	0x70697366
  4061c0:	00632e63 	0x632e63
	...
  4061d0:	736e6f63 	0x736e6f63
  4061d4:	00000000 	nop
  4061d8:	00006325 	0x6325
  4061dc:	0000000a 	movz	zero,zero,zero
  4061e0:	6e6f633c 	0x6e6f633c
  4061e4:	00003e73 	tltu	zero,zero,0xf9
	...
  4061f0:	77617073 	jalx	d85c1cc <end+0xd4521cc>
  4061f4:	73203a6e 	0x73203a6e
  4061f8:	61637379 	0x61637379
  4061fc:	6d5f6c6c 	0x6d5f6c6c
  406200:	6d5f6d65 	0x6d5f6d65
  406204:	25207061 	addiu	zero,t1,28769
  406208:	78252078 	0x78252078
  40620c:	6425203a 	0x6425203a
  406210:	0000000a 	movz	zero,zero,zero
  406214:	77617073 	jalx	d85c1cc <end+0xd4521cc>
  406218:	73203a6e 	0x73203a6e
  40621c:	61637379 	0x61637379
  406220:	735f6c6c 	0x735f6c6c
  406224:	655f7465 	0x655f7465
  406228:	735f766e 	0x735f766e
  40622c:	75746174 	jalx	5d185d0 <end+0x590e5d0>
  406230:	78252073 	0x78252073
  406234:	6425203a 	0x6425203a
  406238:	0000000a 	movz	zero,zero,zero
  40623c:	00000000 	nop
  406240:	65706970 	0x65706970
  406244:	00000000 	nop
  406248:	3830255b 	xori	s0,at,0x255b
  40624c:	70205d78 	0x70205d78
  406250:	63657069 	0x63657069
  406254:	74616572 	jalx	18595c8 <end+0x144f5c8>
  406258:	000a2065 	0xa2065
  40625c:	00000000 	nop
  406260:	00404f5c 	0x404f5c
  406264:	00405294 	0x405294
  406268:	00405294 	0x405294
  40626c:	00405294 	0x405294
  406270:	00405294 	0x405294
  406274:	00405294 	0x405294
  406278:	00405294 	0x405294
  40627c:	00405294 	0x405294
  406280:	00405294 	0x405294
  406284:	00405294 	0x405294
  406288:	00405294 	0x405294
  40628c:	00405000 	0x405000
  406290:	00405294 	0x405294
  406294:	00405294 	0x405294
  406298:	00405294 	0x405294
  40629c:	00405294 	0x405294
  4062a0:	00405294 	0x405294
  4062a4:	00405080 	0x405080
  4062a8:	00405294 	0x405294
  4062ac:	00405294 	0x405294
  4062b0:	00405180 	0x405180
  4062b4:	00405294 	0x405294
  4062b8:	00405294 	0x405294
  4062bc:	00405294 	0x405294
  4062c0:	00405294 	0x405294
  4062c4:	00405294 	0x405294
  4062c8:	00405294 	0x405294
  4062cc:	00405294 	0x405294
  4062d0:	00405294 	0x405294
  4062d4:	00405294 	0x405294
  4062d8:	00404edc 	0x404edc
  4062dc:	00405204 	0x405204
  4062e0:	00404f5c 	0x404f5c
  4062e4:	00405294 	0x405294
  4062e8:	00405294 	0x405294
  4062ec:	00405294 	0x405294
  4062f0:	00405294 	0x405294
  4062f4:	00405294 	0x405294
  4062f8:	00405294 	0x405294
  4062fc:	00405294 	0x405294
  406300:	00405294 	0x405294
  406304:	00405294 	0x405294
  406308:	00405294 	0x405294
  40630c:	00405000 	0x405000
  406310:	00405294 	0x405294
  406314:	00405294 	0x405294
  406318:	00405294 	0x405294
  40631c:	00405244 	0x405244
  406320:	00405294 	0x405294
  406324:	00405080 	0x405080
  406328:	00405294 	0x405294
  40632c:	00405294 	0x405294
  406330:	00405100 	0x405100
  406334:	00000020 	add	zero,zero,zero
	...

Disassembly of section .reginfo:

00406340 <.reginfo>:
  406340:	e000017c 	sc	zero,380(zero)
	...

Disassembly of section .MIPS.abiflags:

00406358 <.MIPS.abiflags>:
  406358:	01200000 	0x1200000
  40635c:	05000101 	bltz	t0,406764 <strcmp+0xa5c>
  406360:	00000000 	nop
	...

Disassembly of section .data:

00407000 <devtab>:
static struct Dev *devtab[] = {&devfile, &devcons,
  407000:	00407010 	0x407010
  407004:	00407030 	tge	v0,zero,0x1c0
  407008:	00407050 	0x407050
  40700c:	00000000 	nop

00407010 <devfile>:
struct Dev devfile = {
  407010:	00000066 	0x66
  407014:	004060f0 	tge	v0,zero,0x183
  407018:	00402930 	tge	v0,zero,0xa4
  40701c:	00402b28 	0x402b28
  407020:	004027a4 	0x4027a4
  407024:	00402c1c 	0x402c1c
	...

00407030 <devcons>:
struct Dev devcons = {
  407030:	00000063 	0x63
  407034:	004061d0 	0x4061d0
  407038:	004034bc 	0x4034bc
  40703c:	004035b4 	teq	v0,zero,0xd6
  407040:	0040361c 	0x40361c
  407044:	00403644 	0x403644
	...

00407050 <devpipe>:
struct Dev devpipe = {
  407050:	00000070 	tge	zero,zero,0x1
  407054:	00406240 	0x406240
  407058:	004045e4 	0x4045e4
  40705c:	0040471c 	0x40471c
  407060:	004048e0 	0x4048e0
  407064:	0040493c 	0x40493c
	...

Disassembly of section .bss:

00408000 <a>:
	...

00408010 <env>:
	...

00409000 <fsipcbuf>:
	...

Disassembly of section .pdr:

00000000 <.pdr>:
   0:	00400000 	0x400000
   4:	c0000000 	ll	zero,0(zero)
   8:	fffffffc 	0xfffffffc
	...
  14:	00000018 	mult	zero,zero
  18:	0000001e 	0x1e
  1c:	0000001f 	0x1f
  20:	00400088 	0x400088
  24:	c0000000 	ll	zero,0(zero)
  28:	fffffffc 	0xfffffffc
	...
  34:	00000018 	mult	zero,zero
  38:	0000001e 	0x1e
  3c:	0000001f 	0x1f
  40:	004000f0 	tge	v0,zero,0x3
  44:	c0000000 	ll	zero,0(zero)
  48:	fffffffc 	0xfffffffc
	...
  54:	00000018 	mult	zero,zero
  58:	0000001e 	0x1e
  5c:	0000001f 	0x1f
  60:	0040016c 	0x40016c
  64:	c0000000 	ll	zero,0(zero)
  68:	fffffffc 	0xfffffffc
	...
  74:	00000028 	0x28
  78:	0000001e 	0x1e
  7c:	0000001f 	0x1f
  80:	004002e0 	0x4002e0
	...
  98:	0000001d 	0x1d
  9c:	0000001f 	0x1f
  a0:	004002f0 	tge	v0,zero,0xb
  a4:	c0000000 	ll	zero,0(zero)
  a8:	fffffffc 	0xfffffffc
	...
  b4:	00000020 	add	zero,zero,zero
  b8:	0000001e 	0x1e
  bc:	0000001f 	0x1f
  c0:	0040038c 	syscall	0x1000e
  c4:	c0000000 	ll	zero,0(zero)
  c8:	fffffffc 	0xfffffffc
	...
  d4:	00000020 	add	zero,zero,zero
  d8:	0000001e 	0x1e
  dc:	0000001f 	0x1f
  e0:	0040049c 	0x40049c
  e4:	c0000000 	ll	zero,0(zero)
  e8:	fffffffc 	0xfffffffc
	...
  f4:	00000420 	0x420
  f8:	0000001e 	0x1e
  fc:	0000001f 	0x1f
 100:	00400504 	0x400504
 104:	c0000000 	ll	zero,0(zero)
 108:	fffffffc 	0xfffffffc
	...
 114:	00000020 	add	zero,zero,zero
 118:	0000001e 	0x1e
 11c:	0000001f 	0x1f
 120:	0040055c 	0x40055c
 124:	c0000000 	ll	zero,0(zero)
 128:	fffffffc 	0xfffffffc
	...
 134:	00000020 	add	zero,zero,zero
 138:	0000001e 	0x1e
 13c:	0000001f 	0x1f
 140:	004005c8 	0x4005c8
 144:	c0000000 	ll	zero,0(zero)
 148:	fffffffc 	0xfffffffc
	...
 154:	00000020 	add	zero,zero,zero
 158:	0000001e 	0x1e
 15c:	0000001f 	0x1f
 160:	00400640 	0x400640
 164:	c0000000 	ll	zero,0(zero)
 168:	fffffffc 	0xfffffffc
	...
 174:	00000018 	mult	zero,zero
 178:	0000001e 	0x1e
 17c:	0000001f 	0x1f
 180:	00400680 	0x400680
 184:	c0000000 	ll	zero,0(zero)
 188:	fffffffc 	0xfffffffc
	...
 194:	00000018 	mult	zero,zero
 198:	0000001e 	0x1e
 19c:	0000001f 	0x1f
 1a0:	004006e8 	0x4006e8
 1a4:	c0000000 	ll	zero,0(zero)
 1a8:	fffffffc 	0xfffffffc
	...
 1b4:	00000018 	mult	zero,zero
 1b8:	0000001e 	0x1e
 1bc:	0000001f 	0x1f
 1c0:	00400730 	tge	v0,zero,0x1c
 1c4:	c0000000 	ll	zero,0(zero)
 1c8:	fffffffc 	0xfffffffc
	...
 1d4:	00000018 	mult	zero,zero
 1d8:	0000001e 	0x1e
 1dc:	0000001f 	0x1f
 1e0:	00400770 	tge	v0,zero,0x1d
 1e4:	40000000 	mfc0	zero,c0_index
 1e8:	fffffffc 	0xfffffffc
	...
 1f4:	00000008 	jr	zero
 1f8:	0000001e 	0x1e
 1fc:	0000001f 	0x1f
 200:	004007a0 	0x4007a0
 204:	40000000 	mfc0	zero,c0_index
 208:	fffffffc 	0xfffffffc
	...
 214:	00000008 	jr	zero
 218:	0000001e 	0x1e
 21c:	0000001f 	0x1f
 220:	004007d4 	0x4007d4
 224:	40000000 	mfc0	zero,c0_index
 228:	fffffffc 	0xfffffffc
	...
 234:	00000008 	jr	zero
 238:	0000001e 	0x1e
 23c:	0000001f 	0x1f
 240:	0040084c 	syscall	0x10021
 244:	40000000 	mfc0	zero,c0_index
 248:	fffffffc 	0xfffffffc
	...
 254:	00000008 	jr	zero
 258:	0000001e 	0x1e
 25c:	0000001f 	0x1f
 260:	004008c8 	0x4008c8
 264:	40000000 	mfc0	zero,c0_index
 268:	fffffffc 	0xfffffffc
	...
 274:	00000008 	jr	zero
 278:	0000001e 	0x1e
 27c:	0000001f 	0x1f
 280:	0040094c 	syscall	0x10025
 284:	40000000 	mfc0	zero,c0_index
 288:	fffffffc 	0xfffffffc
	...
 294:	00000008 	jr	zero
 298:	0000001e 	0x1e
 29c:	0000001f 	0x1f
 2a0:	00400990 	0x400990
 2a4:	40000000 	mfc0	zero,c0_index
 2a8:	fffffffc 	0xfffffffc
	...
 2b4:	00000008 	jr	zero
 2b8:	0000001e 	0x1e
 2bc:	0000001f 	0x1f
 2c0:	004009dc 	0x4009dc
 2c4:	40000000 	mfc0	zero,c0_index
 2c8:	fffffffc 	0xfffffffc
	...
 2d4:	00000008 	jr	zero
 2d8:	0000001e 	0x1e
 2dc:	0000001f 	0x1f
 2e0:	00400a28 	0x400a28
 2e4:	c0000000 	ll	zero,0(zero)
 2e8:	fffffffc 	0xfffffffc
	...
 2f4:	00000018 	mult	zero,zero
 2f8:	0000001e 	0x1e
 2fc:	0000001f 	0x1f
 300:	00400a70 	tge	v0,zero,0x29
 304:	40000000 	mfc0	zero,c0_index
 308:	fffffffc 	0xfffffffc
	...
 314:	00000008 	jr	zero
 318:	0000001e 	0x1e
 31c:	0000001f 	0x1f
 320:	00400ab0 	tge	v0,zero,0x2a
 324:	c0000000 	ll	zero,0(zero)
 328:	fffffffc 	0xfffffffc
	...
 334:	00000038 	0x38
 338:	0000001e 	0x1e
 33c:	0000001f 	0x1f
 340:	00400c58 	0x400c58
 344:	c0000000 	ll	zero,0(zero)
 348:	fffffffc 	0xfffffffc
	...
 354:	00000028 	0x28
 358:	0000001e 	0x1e
 35c:	0000001f 	0x1f
 360:	00400db0 	tge	v0,zero,0x36
 364:	c0000000 	ll	zero,0(zero)
 368:	fffffffc 	0xfffffffc
	...
 374:	00000038 	0x38
 378:	0000001e 	0x1e
 37c:	0000001f 	0x1f
 380:	00400fb4 	teq	v0,zero,0x3e
 384:	c0000000 	ll	zero,0(zero)
 388:	fffffffc 	0xfffffffc
	...
 394:	00000018 	mult	zero,zero
 398:	0000001e 	0x1e
 39c:	0000001f 	0x1f
 3a0:	00400ff0 	tge	v0,zero,0x3f
 3a4:	c0000000 	ll	zero,0(zero)
 3a8:	fffffffc 	0xfffffffc
	...
 3b4:	00000040 	ssnop
 3b8:	0000001e 	0x1e
 3bc:	0000001f 	0x1f
 3c0:	00401240 	0x401240
 3c4:	c0000000 	ll	zero,0(zero)
 3c8:	fffffffc 	0xfffffffc
	...
 3d4:	00000018 	mult	zero,zero
 3d8:	0000001e 	0x1e
 3dc:	0000001f 	0x1f
 3e0:	00401280 	0x401280
 3e4:	c0000000 	ll	zero,0(zero)
 3e8:	fffffffc 	0xfffffffc
	...
 3f4:	00000018 	mult	zero,zero
 3f8:	0000001e 	0x1e
 3fc:	0000001f 	0x1f
 400:	004012c4 	0x4012c4
 404:	c0000000 	ll	zero,0(zero)
 408:	fffffffc 	0xfffffffc
	...
 414:	00000018 	mult	zero,zero
 418:	0000001e 	0x1e
 41c:	0000001f 	0x1f
 420:	004012f8 	0x4012f8
 424:	c0000000 	ll	zero,0(zero)
 428:	fffffffc 	0xfffffffc
	...
 434:	00000018 	mult	zero,zero
 438:	0000001e 	0x1e
 43c:	0000001f 	0x1f
 440:	00401330 	tge	v0,zero,0x4c
 444:	c0000000 	ll	zero,0(zero)
 448:	fffffffc 	0xfffffffc
	...
 454:	00000018 	mult	zero,zero
 458:	0000001e 	0x1e
 45c:	0000001f 	0x1f
 460:	0040136c 	0x40136c
 464:	c0000000 	ll	zero,0(zero)
 468:	fffffffc 	0xfffffffc
	...
 474:	00000018 	mult	zero,zero
 478:	0000001e 	0x1e
 47c:	0000001f 	0x1f
 480:	004013b0 	tge	v0,zero,0x4e
 484:	c0000000 	ll	zero,0(zero)
 488:	fffffffc 	0xfffffffc
	...
 494:	00000018 	mult	zero,zero
 498:	0000001e 	0x1e
 49c:	0000001f 	0x1f
 4a0:	004013fc 	0x4013fc
 4a4:	c0000000 	ll	zero,0(zero)
 4a8:	fffffffc 	0xfffffffc
	...
 4b4:	00000020 	add	zero,zero,zero
 4b8:	0000001e 	0x1e
 4bc:	0000001f 	0x1f
 4c0:	0040145c 	0x40145c
 4c4:	c0000000 	ll	zero,0(zero)
 4c8:	fffffffc 	0xfffffffc
	...
 4d4:	00000018 	mult	zero,zero
 4d8:	0000001e 	0x1e
 4dc:	0000001f 	0x1f
 4e0:	004014a0 	0x4014a0
 4e4:	c0000000 	ll	zero,0(zero)
 4e8:	fffffffc 	0xfffffffc
	...
 4f4:	00000018 	mult	zero,zero
 4f8:	0000001e 	0x1e
 4fc:	0000001f 	0x1f
 500:	004014e4 	0x4014e4
 504:	c0000000 	ll	zero,0(zero)
 508:	fffffffc 	0xfffffffc
	...
 514:	00000018 	mult	zero,zero
 518:	0000001e 	0x1e
 51c:	0000001f 	0x1f
 520:	00401528 	0x401528
 524:	c0000000 	ll	zero,0(zero)
 528:	fffffffc 	0xfffffffc
	...
 534:	00000020 	add	zero,zero,zero
 538:	0000001e 	0x1e
 53c:	0000001f 	0x1f
 540:	00401570 	tge	v0,zero,0x55
 544:	c0000000 	ll	zero,0(zero)
 548:	fffffffc 	0xfffffffc
	...
 554:	00000020 	add	zero,zero,zero
 558:	0000001e 	0x1e
 55c:	0000001f 	0x1f
 560:	004015c8 	0x4015c8
 564:	c0000000 	ll	zero,0(zero)
 568:	fffffffc 	0xfffffffc
	...
 574:	00000018 	mult	zero,zero
 578:	0000001e 	0x1e
 57c:	0000001f 	0x1f
 580:	00401604 	0x401604
 584:	c0000000 	ll	zero,0(zero)
 588:	fffffffc 	0xfffffffc
	...
 594:	00000018 	mult	zero,zero
 598:	0000001e 	0x1e
 59c:	0000001f 	0x1f
 5a0:	00401638 	0x401638
 5a4:	c0000000 	ll	zero,0(zero)
 5a8:	fffffffc 	0xfffffffc
	...
 5b4:	00000018 	mult	zero,zero
 5b8:	0000001e 	0x1e
 5bc:	0000001f 	0x1f
 5c0:	00401684 	0x401684
 5c4:	c0000000 	ll	zero,0(zero)
 5c8:	fffffffc 	0xfffffffc
	...
 5d4:	00000018 	mult	zero,zero
 5d8:	0000001e 	0x1e
 5dc:	0000001f 	0x1f
 5e0:	004016d0 	0x4016d0
 5e4:	c0000000 	ll	zero,0(zero)
 5e8:	fffffffc 	0xfffffffc
	...
 5f4:	00000018 	mult	zero,zero
 5f8:	0000001e 	0x1e
 5fc:	0000001f 	0x1f
 600:	0040171c 	0x40171c
 604:	c0000000 	ll	zero,0(zero)
 608:	fffffffc 	0xfffffffc
	...
 614:	00000018 	mult	zero,zero
 618:	0000001e 	0x1e
 61c:	0000001f 	0x1f
 620:	00401768 	0x401768
 624:	c0000000 	ll	zero,0(zero)
 628:	fffffffc 	0xfffffffc
	...
 634:	00000018 	mult	zero,zero
 638:	0000001e 	0x1e
 63c:	0000001f 	0x1f
 640:	004017ac 	0x4017ac
 644:	c0000000 	ll	zero,0(zero)
 648:	fffffffc 	0xfffffffc
	...
 654:	00000018 	mult	zero,zero
 658:	0000001e 	0x1e
 65c:	0000001f 	0x1f
 660:	004017f0 	tge	v0,zero,0x5f
 664:	c0000000 	ll	zero,0(zero)
 668:	fffffffc 	0xfffffffc
	...
 674:	00000018 	mult	zero,zero
 678:	0000001e 	0x1e
 67c:	0000001f 	0x1f
 680:	00401840 	0x401840
 684:	c0000000 	ll	zero,0(zero)
 688:	fffffffc 	0xfffffffc
	...
 694:	00000020 	add	zero,zero,zero
 698:	0000001e 	0x1e
 69c:	0000001f 	0x1f
 6a0:	004018e8 	0x4018e8
 6a4:	c0000000 	ll	zero,0(zero)
 6a8:	fffffffc 	0xfffffffc
	...
 6b4:	00000020 	add	zero,zero,zero
 6b8:	0000001e 	0x1e
 6bc:	0000001f 	0x1f
 6c0:	004019b0 	tge	v0,zero,0x66
 6c4:	c0000000 	ll	zero,0(zero)
 6c8:	fffffffc 	0xfffffffc
	...
 6d4:	00000020 	add	zero,zero,zero
 6d8:	0000001e 	0x1e
 6dc:	0000001f 	0x1f
 6e0:	00401a9c 	0x401a9c
 6e4:	40000000 	mfc0	zero,c0_index
 6e8:	fffffffc 	0xfffffffc
	...
 6f4:	00000010 	mfhi	zero
 6f8:	0000001e 	0x1e
 6fc:	0000001f 	0x1f
 700:	00401b80 	0x401b80
 704:	c0000000 	ll	zero,0(zero)
 708:	fffffffc 	0xfffffffc
	...
 714:	00000020 	add	zero,zero,zero
 718:	0000001e 	0x1e
 71c:	0000001f 	0x1f
 720:	00401bf0 	tge	v0,zero,0x6f
 724:	40000000 	mfc0	zero,c0_index
 728:	fffffffc 	0xfffffffc
	...
 734:	00000010 	mfhi	zero
 738:	0000001e 	0x1e
 73c:	0000001f 	0x1f
 740:	00401c8c 	syscall	0x10072
 744:	c0000000 	ll	zero,0(zero)
 748:	fffffffc 	0xfffffffc
	...
 754:	00000018 	mult	zero,zero
 758:	0000001e 	0x1e
 75c:	0000001f 	0x1f
 760:	00401ccc 	syscall	0x10073
 764:	40000000 	mfc0	zero,c0_index
 768:	fffffffc 	0xfffffffc
	...
 774:	00000008 	jr	zero
 778:	0000001e 	0x1e
 77c:	0000001f 	0x1f
 780:	00401d00 	0x401d00
 784:	40000000 	mfc0	zero,c0_index
 788:	fffffffc 	0xfffffffc
	...
 794:	00000008 	jr	zero
 798:	0000001e 	0x1e
 79c:	0000001f 	0x1f
 7a0:	00401d38 	0x401d38
 7a4:	c0000000 	ll	zero,0(zero)
 7a8:	fffffffc 	0xfffffffc
	...
 7b4:	00000028 	0x28
 7b8:	0000001e 	0x1e
 7bc:	0000001f 	0x1f
 7c0:	00401df4 	teq	v0,zero,0x77
 7c4:	c0000000 	ll	zero,0(zero)
 7c8:	fffffffc 	0xfffffffc
	...
 7d4:	00000020 	add	zero,zero,zero
 7d8:	0000001e 	0x1e
 7dc:	0000001f 	0x1f
 7e0:	00401e58 	0x401e58
 7e4:	c0000000 	ll	zero,0(zero)
 7e8:	fffffffc 	0xfffffffc
	...
 7f4:	00000048 	0x48
 7f8:	0000001e 	0x1e
 7fc:	0000001f 	0x1f
 800:	004020f4 	teq	v0,zero,0x83
 804:	c0000000 	ll	zero,0(zero)
 808:	fffffffc 	0xfffffffc
	...
 814:	00000030 	tge	zero,zero
 818:	0000001e 	0x1e
 81c:	0000001f 	0x1f
 820:	00402208 	0x402208
 824:	c0000000 	ll	zero,0(zero)
 828:	fffffffc 	0xfffffffc
	...
 834:	00000020 	add	zero,zero,zero
 838:	0000001e 	0x1e
 83c:	0000001f 	0x1f
 840:	004022d0 	0x4022d0
 844:	c0000000 	ll	zero,0(zero)
 848:	fffffffc 	0xfffffffc
	...
 854:	00000028 	0x28
 858:	0000001e 	0x1e
 85c:	0000001f 	0x1f
 860:	004023d4 	0x4023d4
 864:	c0000000 	ll	zero,0(zero)
 868:	fffffffc 	0xfffffffc
	...
 874:	00000020 	add	zero,zero,zero
 878:	0000001e 	0x1e
 87c:	0000001f 	0x1f
 880:	00402444 	0x402444
 884:	c0000000 	ll	zero,0(zero)
 888:	fffffffc 	0xfffffffc
	...
 894:	00000028 	0x28
 898:	0000001e 	0x1e
 89c:	0000001f 	0x1f
 8a0:	00402514 	0x402514
 8a4:	c0000000 	ll	zero,0(zero)
 8a8:	fffffffc 	0xfffffffc
	...
 8b4:	00000020 	add	zero,zero,zero
 8b8:	0000001e 	0x1e
 8bc:	0000001f 	0x1f
 8c0:	004025a0 	0x4025a0
 8c4:	40000000 	mfc0	zero,c0_index
 8c8:	fffffffc 	0xfffffffc
	...
 8d4:	00000010 	mfhi	zero
 8d8:	0000001e 	0x1e
 8dc:	0000001f 	0x1f
 8e0:	00402660 	0x402660
 8e4:	c0000000 	ll	zero,0(zero)
 8e8:	fffffffc 	0xfffffffc
	...
 8f4:	00000040 	ssnop
 8f8:	0000001e 	0x1e
 8fc:	0000001f 	0x1f
 900:	004027a4 	0x4027a4
 904:	c0000000 	ll	zero,0(zero)
 908:	fffffffc 	0xfffffffc
	...
 914:	00000030 	tge	zero,zero
 918:	0000001e 	0x1e
 91c:	0000001f 	0x1f
 920:	00402930 	tge	v0,zero,0xa4
 924:	c0000000 	ll	zero,0(zero)
 928:	fffffffc 	0xfffffffc
	...
 934:	00000020 	add	zero,zero,zero
 938:	0000001e 	0x1e
 93c:	0000001f 	0x1f
 940:	004029f8 	0x4029f8
 944:	c0000000 	ll	zero,0(zero)
 948:	fffffffc 	0xfffffffc
	...
 954:	00000028 	0x28
 958:	0000001e 	0x1e
 95c:	0000001f 	0x1f
 960:	00402b28 	0x402b28
 964:	c0000000 	ll	zero,0(zero)
 968:	fffffffc 	0xfffffffc
	...
 974:	00000028 	0x28
 978:	0000001e 	0x1e
 97c:	0000001f 	0x1f
 980:	00402c1c 	0x402c1c
 984:	c0000000 	ll	zero,0(zero)
 988:	fffffffc 	0xfffffffc
	...
 994:	00000020 	add	zero,zero,zero
 998:	0000001e 	0x1e
 99c:	0000001f 	0x1f
 9a0:	00402ca4 	0x402ca4
 9a4:	c0000000 	ll	zero,0(zero)
 9a8:	fffffffc 	0xfffffffc
	...
 9b4:	00000040 	ssnop
 9b8:	0000001e 	0x1e
 9bc:	0000001f 	0x1f
 9c0:	00402f20 	0x402f20
 9c4:	c0000000 	ll	zero,0(zero)
 9c8:	fffffffc 	0xfffffffc
	...
 9d4:	00000018 	mult	zero,zero
 9d8:	0000001e 	0x1e
 9dc:	0000001f 	0x1f
 9e0:	00402f58 	0x402f58
 9e4:	c0000000 	ll	zero,0(zero)
 9e8:	fffffffc 	0xfffffffc
	...
 9f4:	00000018 	mult	zero,zero
 9f8:	0000001e 	0x1e
 9fc:	0000001f 	0x1f
 a00:	00402f90 	0x402f90
 a04:	c0000000 	ll	zero,0(zero)
 a08:	fffffffc 	0xfffffffc
	...
 a14:	00000020 	add	zero,zero,zero
 a18:	0000001e 	0x1e
 a1c:	0000001f 	0x1f
 a20:	00403004 	sllv	a2,zero,v0
 a24:	c0000000 	ll	zero,0(zero)
 a28:	fffffffc 	0xfffffffc
	...
 a34:	00000020 	add	zero,zero,zero
 a38:	0000001e 	0x1e
 a3c:	0000001f 	0x1f
 a40:	004030a4 	0x4030a4
 a44:	c0000000 	ll	zero,0(zero)
 a48:	fffffffc 	0xfffffffc
	...
 a54:	00000030 	tge	zero,zero
 a58:	0000001e 	0x1e
 a5c:	0000001f 	0x1f
 a60:	0040317c 	0x40317c
 a64:	c0000000 	ll	zero,0(zero)
 a68:	fffffffc 	0xfffffffc
	...
 a74:	00000020 	add	zero,zero,zero
 a78:	0000001e 	0x1e
 a7c:	0000001f 	0x1f
 a80:	004031e8 	0x4031e8
 a84:	c0000000 	ll	zero,0(zero)
 a88:	fffffffc 	0xfffffffc
	...
 a94:	00000020 	add	zero,zero,zero
 a98:	0000001e 	0x1e
 a9c:	0000001f 	0x1f
 aa0:	00403244 	0x403244
 aa4:	c0000000 	ll	zero,0(zero)
 aa8:	fffffffc 	0xfffffffc
	...
 ab4:	00000020 	add	zero,zero,zero
 ab8:	0000001e 	0x1e
 abc:	0000001f 	0x1f
 ac0:	004032b0 	tge	v0,zero,0xca
 ac4:	c0000000 	ll	zero,0(zero)
 ac8:	fffffffc 	0xfffffffc
	...
 ad4:	00000020 	add	zero,zero,zero
 ad8:	0000001e 	0x1e
 adc:	0000001f 	0x1f
 ae0:	0040334c 	syscall	0x100cd
 ae4:	c0000000 	ll	zero,0(zero)
 ae8:	fffffffc 	0xfffffffc
	...
 af4:	00000018 	mult	zero,zero
 af8:	0000001e 	0x1e
 afc:	0000001f 	0x1f
 b00:	00403390 	0x403390
 b04:	c0000000 	ll	zero,0(zero)
 b08:	fffffffc 	0xfffffffc
	...
 b14:	00000020 	add	zero,zero,zero
 b18:	0000001e 	0x1e
 b1c:	0000001f 	0x1f
 b20:	00403408 	0x403408
 b24:	c0000000 	ll	zero,0(zero)
 b28:	fffffffc 	0xfffffffc
	...
 b34:	00000020 	add	zero,zero,zero
 b38:	0000001e 	0x1e
 b3c:	0000001f 	0x1f
 b40:	004034bc 	0x4034bc
 b44:	c0000000 	ll	zero,0(zero)
 b48:	fffffffc 	0xfffffffc
	...
 b54:	00000020 	add	zero,zero,zero
 b58:	0000001e 	0x1e
 b5c:	0000001f 	0x1f
 b60:	004035b4 	teq	v0,zero,0xd6
 b64:	c0000000 	ll	zero,0(zero)
 b68:	fffffffc 	0xfffffffc
	...
 b74:	00000020 	add	zero,zero,zero
 b78:	0000001e 	0x1e
 b7c:	0000001f 	0x1f
 b80:	0040361c 	0x40361c
 b84:	40000000 	mfc0	zero,c0_index
 b88:	fffffffc 	0xfffffffc
	...
 b94:	00000008 	jr	zero
 b98:	0000001e 	0x1e
 b9c:	0000001f 	0x1f
 ba0:	00403644 	0x403644
 ba4:	c0000000 	ll	zero,0(zero)
 ba8:	fffffffc 	0xfffffffc
	...
 bb4:	00000018 	mult	zero,zero
 bb8:	0000001e 	0x1e
 bbc:	0000001f 	0x1f
 bc0:	00403690 	0x403690
 bc4:	c0000000 	ll	zero,0(zero)
 bc8:	fffffffc 	0xfffffffc
	...
 bd4:	00000020 	add	zero,zero,zero
 bd8:	0000001e 	0x1e
 bdc:	0000001f 	0x1f
 be0:	00403740 	0x403740
 be4:	c0000000 	ll	zero,0(zero)
 be8:	fffffffc 	0xfffffffc
	...
 bf4:	00000020 	add	zero,zero,zero
 bf8:	0000001e 	0x1e
 bfc:	0000001f 	0x1f
 c00:	004037a4 	0x4037a4
 c04:	c0000000 	ll	zero,0(zero)
 c08:	fffffffc 	0xfffffffc
	...
 c14:	00000020 	add	zero,zero,zero
 c18:	0000001e 	0x1e
 c1c:	0000001f 	0x1f
 c20:	00403804 	sllv	a3,zero,v0
 c24:	c0000000 	ll	zero,0(zero)
 c28:	fffffffc 	0xfffffffc
	...
 c34:	00000020 	add	zero,zero,zero
 c38:	0000001e 	0x1e
 c3c:	0000001f 	0x1f
 c40:	00403870 	tge	v0,zero,0xe1
 c44:	c0000000 	ll	zero,0(zero)
 c48:	fffffffc 	0xfffffffc
	...
 c54:	00000020 	add	zero,zero,zero
 c58:	0000001e 	0x1e
 c5c:	0000001f 	0x1f
 c60:	00403900 	0x403900
 c64:	c0000000 	ll	zero,0(zero)
 c68:	fffffffc 	0xfffffffc
	...
 c74:	00000048 	0x48
 c78:	0000001e 	0x1e
 c7c:	0000001f 	0x1f
 c80:	00403cb4 	teq	v0,zero,0xf2
 c84:	c0000000 	ll	zero,0(zero)
 c88:	fffffffc 	0xfffffffc
	...
 c94:	00000030 	tge	zero,zero
 c98:	0000001e 	0x1e
 c9c:	0000001f 	0x1f
 ca0:	00403dd8 	0x403dd8
 ca4:	c0000000 	ll	zero,0(zero)
 ca8:	fffffffc 	0xfffffffc
	...
 cb4:	000002f8 	0x2f8
 cb8:	0000001e 	0x1e
 cbc:	0000001f 	0x1f
 cc0:	004042ac 	0x4042ac
 cc4:	c0000000 	ll	zero,0(zero)
 cc8:	fffffffc 	0xfffffffc
	...
 cd4:	00000018 	mult	zero,zero
 cd8:	0000001e 	0x1e
 cdc:	0000001f 	0x1f
 ce0:	00404300 	0x404300
 ce4:	c0010000 	ll	at,0(zero)
 ce8:	fffffffc 	0xfffffffc
	...
 cf4:	00000038 	0x38
 cf8:	0000001e 	0x1e
 cfc:	0000001f 	0x1f
 d00:	00404558 	0x404558
 d04:	c0000000 	ll	zero,0(zero)
 d08:	fffffffc 	0xfffffffc
	...
 d14:	00000028 	0x28
 d18:	0000001e 	0x1e
 d1c:	0000001f 	0x1f
 d20:	004045e4 	0x4045e4
 d24:	c0000000 	ll	zero,0(zero)
 d28:	fffffffc 	0xfffffffc
	...
 d34:	00000028 	0x28
 d38:	0000001e 	0x1e
 d3c:	0000001f 	0x1f
 d40:	0040471c 	0x40471c
 d44:	c0000000 	ll	zero,0(zero)
 d48:	fffffffc 	0xfffffffc
	...
 d54:	00000028 	0x28
 d58:	0000001e 	0x1e
 d5c:	0000001f 	0x1f
 d60:	0040485c 	0x40485c
 d64:	c0000000 	ll	zero,0(zero)
 d68:	fffffffc 	0xfffffffc
	...
 d74:	00000028 	0x28
 d78:	0000001e 	0x1e
 d7c:	0000001f 	0x1f
 d80:	004048e0 	0x4048e0
 d84:	c0000000 	ll	zero,0(zero)
 d88:	fffffffc 	0xfffffffc
	...
 d94:	00000018 	mult	zero,zero
 d98:	0000001e 	0x1e
 d9c:	0000001f 	0x1f
 da0:	0040493c 	0x40493c
 da4:	40000000 	mfc0	zero,c0_index
 da8:	fffffffc 	0xfffffffc
	...
 db4:	00000008 	jr	zero
 db8:	0000001e 	0x1e
 dbc:	0000001f 	0x1f
 dc0:	00404970 	tge	v0,zero,0x125
 dc4:	40000000 	mfc0	zero,c0_index
 dc8:	fffffffc 	0xfffffffc
	...
 dd4:	00000010 	mfhi	zero
 dd8:	0000001e 	0x1e
 ddc:	0000001f 	0x1f
 de0:	00404a24 	0x404a24
 de4:	c0000000 	ll	zero,0(zero)
 de8:	fffffffc 	0xfffffffc
	...
 df4:	00000060 	0x60
 df8:	0000001e 	0x1e
 dfc:	0000001f 	0x1f
 e00:	00404cd0 	0x404cd0
 e04:	c0000000 	ll	zero,0(zero)
 e08:	fffffffc 	0xfffffffc
	...
 e14:	00000058 	0x58
 e18:	0000001e 	0x1e
 e1c:	0000001f 	0x1f
 e20:	004052e0 	0x4052e0
 e24:	c0000000 	ll	zero,0(zero)
 e28:	fffffffc 	0xfffffffc
	...
 e34:	00000020 	add	zero,zero,zero
 e38:	0000001e 	0x1e
 e3c:	0000001f 	0x1f
 e40:	00405420 	0x405420
 e44:	c0000000 	ll	zero,0(zero)
 e48:	fffffffc 	0xfffffffc
	...
 e54:	00000028 	0x28
 e58:	0000001e 	0x1e
 e5c:	0000001f 	0x1f
 e60:	00405598 	0x405598
 e64:	c0010000 	ll	at,0(zero)
 e68:	fffffffc 	0xfffffffc
	...
 e74:	00000048 	0x48
 e78:	0000001e 	0x1e
 e7c:	0000001f 	0x1f
 e80:	00405940 	0x405940
 e84:	40000000 	mfc0	zero,c0_index
 e88:	fffffffc 	0xfffffffc
	...
 e94:	00000010 	mfhi	zero
 e98:	0000001e 	0x1e
 e9c:	0000001f 	0x1f
 ea0:	00405ab0 	tge	v0,zero,0x16a
 ea4:	40000000 	mfc0	zero,c0_index
 ea8:	fffffffc 	0xfffffffc
	...
 eb4:	00000018 	mult	zero,zero
 eb8:	0000001e 	0x1e
 ebc:	0000001f 	0x1f
 ec0:	00405bd4 	0x405bd4
 ec4:	40000000 	mfc0	zero,c0_index
 ec8:	fffffffc 	0xfffffffc
	...
 ed4:	00000010 	mfhi	zero
 ed8:	0000001e 	0x1e
 edc:	0000001f 	0x1f
 ee0:	00405c30 	tge	v0,zero,0x170
 ee4:	40000000 	mfc0	zero,c0_index
 ee8:	fffffffc 	0xfffffffc
	...
 ef4:	00000010 	mfhi	zero
 ef8:	0000001e 	0x1e
 efc:	0000001f 	0x1f
 f00:	00405c94 	0x405c94
 f04:	40000000 	mfc0	zero,c0_index
 f08:	fffffffc 	0xfffffffc
	...
 f14:	00000008 	jr	zero
 f18:	0000001e 	0x1e
 f1c:	0000001f 	0x1f
 f20:	00405d08 	0x405d08
 f24:	40000000 	mfc0	zero,c0_index
 f28:	fffffffc 	0xfffffffc
	...
 f34:	00000008 	jr	zero
 f38:	0000001e 	0x1e
 f3c:	0000001f 	0x1f

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	xori	v1,s2,0x4347
   4:	62552820 	0x62552820
   8:	75746e75 	jalx	5d1b9d4 <end+0x59119d4>
   c:	2e303120 	sltiu	s0,s1,12576
  10:	2d302e33 	sltiu	s0,t1,11827
  14:	75627531 	jalx	589d4c4 <end+0x54934c4>
  18:	3175746e 	andi	s5,t3,0x746e
  1c:	30312029 	andi	s1,at,0x2029
  20:	302e332e 	andi	t6,at,0x332e
	...

Disassembly of section .gnu.attributes:

00000000 <.gnu.attributes>:
   0:	00000f41 	0xf41
   4:	756e6700 	jalx	5b99c00 <end+0x578fc00>
   8:	00070100 	sll	zero,a3,0x4
   c:	05040000 	0x5040000

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000018a 	0x18a
       4:	00000004 	sllv	zero,zero,zero
       8:	01040000 	0x1040000
       c:	00000090 	0x90
      10:	00019f0c 	syscall	0x67c
      14:	00004900 	sll	t1,zero,0x4
      18:	40000000 	mfc0	zero,c0_index
      1c:	0002c400 	sll	t8,v0,0x10
      20:	00000000 	nop
      24:	05040200 	0x5040200
      28:	00746e69 	0x746e69
      2c:	2d070403 	sltiu	a3,t0,1027
      30:	03000000 	0x3000000
      34:	00730601 	0x730601
      38:	02030000 	0x2030000
      3c:	0001ac05 	0x1ac05
      40:	05080300 	tgei	t0,768
      44:	00000000 	nop
      48:	71080103 	0x71080103
      4c:	03000000 	0x3000000
      50:	018c0702 	0x18c0702
      54:	08030000 	j	c0000 <sigill_handler-0x340000>
      58:	00002307 	0x2307
      5c:	001d0400 	sll	zero,sp,0x10
      60:	09020000 	j	4080000 <end+0x3c76000>
      64:	00002c16 	0x2c16
      68:	07040300 	0x7040300
      6c:	00000028 	0x28
      70:	00007f05 	0x7f05
      74:	06030400 	bgezl	s0,1078 <sigill_handler-0x3fef88>
      78:	00008b10 	0x8b10
      7c:	69730600 	0x69730600
      80:	07030067 	bgezl	t8,220 <sigill_handler-0x3ffde0>
      84:	00005d0b 	0x5d0b
      88:	04000000 	bltz	zero,8c <sigill_handler-0x3fff74>
      8c:	0000007f 	0x7f
      90:	70030803 	0x70030803
      94:	05000000 	bltz	t0,98 <sigill_handler-0x3fff68>
      98:	0000058c 	syscall	0x16
      9c:	080a0308 	j	280c20 <sigill_handler-0x17f3e0>
      a0:	000000bf 	0xbf
      a4:	0001b607 	0x1b607
      a8:	100b0300 	beq	zero,t3,cac <sigill_handler-0x3ff354>
      ac:	000000ca 	0xca
      b0:	00880700 	0x880700
      b4:	0c030000 	jal	c0000 <sigill_handler-0x340000>
      b8:	00008b10 	0x8b10
      bc:	08000400 	j	1000 <sigill_handler-0x3ff000>
      c0:	000000ca 	0xca
      c4:	00002509 	0x2509
      c8:	040a0000 	tlti	zero,0
      cc:	000000bf 	0xbf
      d0:	7a060103 	0x7a060103
      d4:	0b000000 	j	c000000 <end+0xbbf6000>
      d8:	04010061 	b	260 <sigill_handler-0x3ffda0>
      dc:	0000250c 	syscall	0x94
      e0:	00030500 	sll	zero,v1,0x14
      e4:	0c004080 	jal	10200 <sigill_handler-0x3efe00>
      e8:	00000357 	0x357
      ec:	25051a01 	addiu	a1,t0,6657
      f0:	6c000000 	0x6c000000
      f4:	58004001 	blezl	zero,100fc <sigill_handler-0x3eff04>
      f8:	01000001 	movf	zero,t0,$fcc0
      fc:	00011f9c 	0x11f9c
     100:	61730b00 	0x61730b00
     104:	161c0100 	bne	s0,gp,508 <sigill_handler-0x3ffaf8>
     108:	00000097 	0x97
     10c:	0b6c9102 	j	db24408 <end+0xd71a408>
     110:	00646970 	tge	v1,a0,0x1a5
     114:	5d0b2901 	0x5d0b2901
     118:	02000000 	0x2000000
     11c:	0d006891 	jal	401a244 <end+0x3c10244>
     120:	0000003a 	0x3a
     124:	f0061301 	0xf0061301
     128:	7c004000 	0x7c004000
     12c:	01000000 	0x1000000
     130:	0001459c 	0x1459c
     134:	69730e00 	0x69730e00
     138:	13010067 	beq	t8,at,2d8 <sigill_handler-0x3ffd28>
     13c:	00002519 	0x2519
     140:	00910200 	0x910200
     144:	00610d00 	0x610d00
     148:	0d010000 	jal	4040000 <end+0x3c36000>
     14c:	40008806 	mfc0	zero,$17,6
     150:	00006800 	sll	t5,zero,0x0
     154:	6b9c0100 	0x6b9c0100
     158:	0e000001 	jal	8000004 <end+0x7bf6004>
     15c:	00676973 	tltu	v1,a3,0x1a5
     160:	251a0d01 	addiu	k0,t0,3329
     164:	02000000 	0x2000000
     168:	0f000091 	jal	c000244 <end+0xbbf6244>
     16c:	0000000e 	0xe
     170:	00060601 	0x60601
     174:	88004000 	lwl	zero,16384(zero)
     178:	01000000 	0x1000000
     17c:	69730e9c 	0x69730e9c
     180:	06010067 	bgez	s0,320 <sigill_handler-0x3ffce0>
     184:	00002519 	0x2519
     188:	00910200 	0x910200
     18c:	00220000 	0x220000
     190:	00020000 	sll	zero,v0,0x0
     194:	000000f9 	0xf9
     198:	00cb0104 	0xcb0104
     19c:	02d00000 	0x2d00000
     1a0:	02e00040 	0x2e00040
     1a4:	01c10040 	0x1c10040
     1a8:	00490000 	0x490000
     1ac:	01cd0000 	0x1cd0000
     1b0:	80010000 	lb	at,0(zero)
     1b4:	00000022 	neg	zero,zero
     1b8:	010d0002 	0x10d0002
     1bc:	01040000 	0x1040000
     1c0:	00000106 	0x106
     1c4:	004002e0 	0x4002e0
     1c8:	004002ec 	0x4002ec
     1cc:	000001d9 	0x1d9
     1d0:	00000049 	0x49
     1d4:	000001cd 	break	0x0,0x7
     1d8:	02948001 	movf	s0,s4,$fcc5
     1dc:	00040000 	sll	zero,a0,0x0
     1e0:	00000121 	0x121
     1e4:	00900104 	0x900104
     1e8:	120c0000 	beq	s0,t4,1ec <sigill_handler-0x3ffe14>
     1ec:	49000002 	bc2f	1f8 <sigill_handler-0x3ffe08>
     1f0:	f0000000 	0xf0000000
     1f4:	4c004002 	mfc3	zero,$8,2
     1f8:	47000003 	c1	0x1000003
     1fc:	02000001 	movf	zero,s0,$fcc0
     200:	6e690504 	0x6e690504
     204:	ec030074 	0xec030074
     208:	02000001 	movf	zero,s0,$fcc0
     20c:	003817d1 	0x3817d1
     210:	04040000 	0x4040000
     214:	00002d07 	0x2d07
     218:	06010400 	bgez	s0,121c <sigill_handler-0x3fede4>
     21c:	00000073 	tltu	zero,zero,0x1
     220:	ac050204 	sw	a1,516(zero)
     224:	04000001 	bltz	zero,22c <sigill_handler-0x3ffdd4>
     228:	00000508 	0x508
     22c:	01040000 	0x1040000
     230:	00007108 	0x7108
     234:	07020400 	bltzl	t8,1238 <sigill_handler-0x3fedc8>
     238:	0000018c 	syscall	0x6
     23c:	23070804 	addi	a3,t8,2052
     240:	04000000 	bltz	zero,244 <sigill_handler-0x3ffdbc>
     244:	00280704 	0x280704
     248:	01040000 	0x1040000
     24c:	00007a06 	0x7a06
     250:	00700500 	0x700500
     254:	04060000 	0x4060000
     258:	00022b03 	sra	a1,v0,0xc
     25c:	1b280300 	0x1b280300
     260:	0000008a 	0x8a
     264:	01f30407 	0x1f30407
     268:	32030000 	andi	v1,s0,0x0
     26c:	03000002 	0x3000002
     270:	007e1863 	0x7e1863
     274:	04080000 	tgei	zero,0
     278:	00000077 	0x77
     27c:	00025209 	0x25209
     280:	01040400 	0x1040400
     284:	00cc0806 	srlv	at,t4,a2
     288:	620a0000 	0x620a0000
     28c:	01006675 	0x1006675
     290:	00cc0707 	0xcc0707
     294:	0b000000 	j	c000000 <end+0xbbf6000>
     298:	00736f70 	tge	v1,s3,0x1bd
     29c:	2c090801 	sltiu	t1,zero,2049
     2a0:	00000000 	nop
     2a4:	700c0004 	msub	zero,t4
     2a8:	dd000000 	0xdd000000
     2ac:	0d000000 	jal	4000000 <end+0x3bf6000>
     2b0:	00000038 	0x38
     2b4:	0e0003ff 	jal	8000ffc <end+0x7bf6ffc>
     2b8:	0000023a 	0x23a
     2bc:	c8063d01 	lwc2	$6,15617(zero)
     2c0:	74004005 	jalx	10014 <sigill_handler-0x3effec>
     2c4:	01000000 	0x1000000
     2c8:	0001309c 	0x1309c
     2cc:	09760f00 	j	5d83c00 <end+0x5979c00>
     2d0:	3d010000 	0x3d010000
     2d4:	00009c1d 	0x9c1d
     2d8:	00910200 	0x910200
     2dc:	0002450f 	0x2450f
     2e0:	273d0100 	addiu	sp,t9,256
     2e4:	00000025 	move	zero,zero
     2e8:	10049102 	beq	zero,a0,fffe46f4 <end+0xffbda6f4>
     2ec:	00746d66 	0x746d66
     2f0:	9c393d01 	0x9c393d01
     2f4:	02000000 	0x2000000
     2f8:	12110891 	beq	s0,s1,2540 <sigill_handler-0x3fdac0>
     2fc:	01007061 	0x1007061
     300:	00900a3f 	0x900a3f
     304:	91020000 	lbu	v0,0(t0)
     308:	1f0e0070 	0x1f0e0070
     30c:	01000002 	0x1000002
     310:	055c0633 	0x55c0633
     314:	006c0040 	0x6c0040
     318:	9c010000 	0x9c010000
     31c:	00000183 	sra	zero,zero,0x6
     320:	0009760f 	0x9760f
     324:	1e330100 	0x1e330100
     328:	0000009c 	0x9c
     32c:	0f009102 	jal	c024408 <end+0xbc1a408>
     330:	00000245 	0x245
     334:	25283301 	addiu	t0,t1,13057
     338:	02000000 	0x2000000
     33c:	66100491 	0x66100491
     340:	0100746d 	0x100746d
     344:	009c3a33 	tltu	a0,gp,0xe8
     348:	91020000 	lbu	v0,0(t0)
     34c:	61121108 	0x61121108
     350:	35010070 	ori	at,t0,0x70
     354:	0000900a 	movz	s2,zero,zero
     358:	70910200 	0x70910200
     35c:	024b1300 	0x24b1300
     360:	2c010000 	sltiu	at,zero,0
     364:	40050406 	0x40050406
     368:	00005800 	sll	t3,zero,0x0
     36c:	b89c0100 	swr	gp,256(a0)
     370:	10000001 	b	378 <sigill_handler-0x3ffc88>
     374:	00746d66 	0x746d66
     378:	9c192c01 	0x9c192c01
     37c:	02000000 	0x2000000
     380:	12110091 	beq	s0,s1,5c8 <sigill_handler-0x3ffa38>
     384:	01007061 	0x1007061
     388:	00900a2d 	0x900a2d
     38c:	91020000 	lbu	v0,0(t0)
     390:	4a140070 	c2	0x140070
     394:	01000002 	0x1000002
     398:	049c0d25 	0x49c0d25
     39c:	00680040 	0x680040
     3a0:	9c010000 	0x9c010000
     3a4:	000001fc 	0x1fc
     3a8:	746d6610 	jalx	1b59840 <end+0x174f840>
     3ac:	21250100 	addi	a1,t1,256
     3b0:	0000009c 	0x9c
     3b4:	10009102 	b	fffe47c0 <end+0xffbda7c0>
     3b8:	01007061 	0x1007061
     3bc:	00902e25 	0x902e25
     3c0:	91020000 	lbu	v0,0(t0)
     3c4:	74631204 	jalx	18c4810 <end+0x14ba810>
     3c8:	26010078 	addiu	at,s0,120
     3cc:	0000a213 	0xa213
     3d0:	f0910300 	0xf0910300
     3d4:	05140077 	0x5140077
     3d8:	01000002 	0x1000002
     3dc:	038c0d16 	0x38c0d16
     3e0:	01100040 	0x1100040
     3e4:	9c010000 	0x9c010000
     3e8:	00000262 	0x262
     3ec:	0008150f 	0x8150f
     3f0:	20160100 	addi	s6,zero,256
     3f4:	0000007c 	0x7c
     3f8:	10009102 	b	fffe4804 <end+0xffbda804>
     3fc:	16010073 	bne	s0,at,5cc <sigill_handler-0x3ffa34>
     400:	00009c32 	tlt	zero,zero,0x270
     404:	04910200 	bgezal	a0,c08 <sigill_handler-0x3ff3f8>
     408:	01006c10 	0x1006c10
     40c:	002c3c16 	0x2c3c16
     410:	91020000 	lbu	v0,0(t0)
     414:	74631208 	jalx	18c4820 <end+0x14ba820>
     418:	17010078 	bne	t8,at,5fc <sigill_handler-0x3ffa04>
     41c:	00026214 	0x26214
     420:	70910200 	0x70910200
     424:	4003b815 	0x4003b815
     428:	00007000 	sll	t6,zero,0x0
     42c:	006e1200 	0x6e1200
     430:	2c0a1a01 	sltiu	t2,zero,6657
     434:	02000000 	0x2000000
     438:	00007491 	0x7491
     43c:	00a20408 	0xa20408
     440:	5c160000 	0x5c160000
     444:	01000002 	0x1000002
     448:	02f00d0b 	0x2f00d0b
     44c:	009c0040 	0x9c0040
     450:	9c010000 	0x9c010000
     454:	78746310 	0x78746310
     458:	2b0b0100 	slti	t3,t8,256
     45c:	00000262 	0x262
     460:	12009102 	beqz	s0,fffe486c <end+0xffbda86c>
     464:	0f010072 	jal	c0401c8 <end+0xbc361c8>
     468:	00002506 	0x2506
     46c:	70910200 	0x70910200
     470:	06450000 	0x6450000
     474:	00040000 	sll	zero,a0,0x0
     478:	0000026d 	0x26d
     47c:	00900104 	0x900104
     480:	560c0000 	bnel	s0,t4,484 <sigill_handler-0x3ffb7c>
     484:	49000004 	bc2f	498 <sigill_handler-0x3ffb68>
     488:	40000000 	mfc0	zero,c0_index
     48c:	6c004006 	0x6c004006
     490:	61000004 	0x61000004
     494:	02000002 	0x2000002
     498:	6e690504 	0x6e690504
     49c:	04030074 	bgezl	zero,670 <sigill_handler-0x3ff990>
     4a0:	00002d07 	0x2d07
     4a4:	06010300 	bgez	s0,10a8 <sigill_handler-0x3fef58>
     4a8:	00000073 	tltu	zero,zero,0x1
     4ac:	ac050203 	sw	a1,515(zero)
     4b0:	03000001 	movf	zero,t8,$fcc0
     4b4:	00000508 	0x508
     4b8:	01030000 	0x1030000
     4bc:	00007108 	0x7108
     4c0:	07020300 	bltzl	t8,10c4 <sigill_handler-0x3fef3c>
     4c4:	0000018c 	syscall	0x6
     4c8:	23070803 	addi	a3,t8,2051
     4cc:	04000000 	bltz	zero,4d0 <sigill_handler-0x3ffb30>
     4d0:	0000001d 	0x1d
     4d4:	2c160902 	sltiu	s6,zero,2306
     4d8:	04000000 	bltz	zero,4dc <sigill_handler-0x3ffb24>
     4dc:	00000475 	0x475
     4e0:	75170a02 	jalx	45c2808 <end+0x41b8808>
     4e4:	03000000 	0x3000000
     4e8:	00280704 	0x280704
     4ec:	50050000 	beql	zero,a1,4f0 <sigill_handler-0x3ffb10>
     4f0:	06006564 	bltz	s0,19a84 <sigill_handler-0x3e657c>
     4f4:	00691097 	0x691097
     4f8:	15060000 	bne	t0,a2,4fc <sigill_handler-0x3ffb04>
     4fc:	98000004 	lwr	zero,4(zero)
     500:	ef080803 	0xef080803
     504:	07000000 	bltz	t8,508 <sigill_handler-0x3ffaf8>
     508:	00000432 	tlt	zero,zero,0x10
     50c:	ef100a03 	0xef100a03
     510:	00000000 	nop
     514:	0003e907 	0x3e907
     518:	100d0300 	beq	zero,t5,111c <sigill_handler-0x3feee4>
     51c:	00000075 	0x75
     520:	69680880 	0x69680880
     524:	100e0300 	beq	zero,t6,1128 <sigill_handler-0x3feed8>
     528:	00000075 	0x75
     52c:	6f6c0884 	0x6f6c0884
     530:	100f0300 	beq	zero,t7,1134 <sigill_handler-0x3feecc>
     534:	00000075 	0x75
     538:	028f0788 	0x28f0788
     53c:	10030000 	beq	zero,v1,540 <sigill_handler-0x3ffac0>
     540:	00007510 	0x7510
     544:	68078c00 	0x68078c00
     548:	03000002 	0x3000002
     54c:	00751011 	0x751011
     550:	07900000 	bltzal	gp,554 <sigill_handler-0x3ffaac>
     554:	000002d9 	0x2d9
     558:	75101203 	jalx	440480c <end+0x3ffa80c>
     55c:	94000000 	lhu	zero,0(zero)
     560:	00750900 	0x750900
     564:	00ff0000 	0xff0000
     568:	2c0a0000 	sltiu	t2,zero,0
     56c:	1f000000 	bgtz	t8,570 <sigill_handler-0x3ffa90>
     570:	007f0600 	0x7f0600
     574:	04040000 	0x4040000
     578:	011a1006 	srlv	v0,k0,t0
     57c:	73080000 	madd	t8,t0
     580:	04006769 	bltz	zero,1a328 <sigill_handler-0x3e5cd8>
     584:	005d0b07 	0x5d0b07
     588:	00000000 	nop
     58c:	00007f04 	0x7f04
     590:	03080400 	0x3080400
     594:	000000ff 	0xff
     598:	00011a0b 	0x11a0b
     59c:	058c0600 	teqi	t4,1536
     5a0:	04080000 	tgei	zero,0
     5a4:	0153080a 	movz	at,t2,s3
     5a8:	b6070000 	0xb6070000
     5ac:	04000001 	bltz	zero,5b4 <sigill_handler-0x3ffa4c>
     5b0:	0163100b 	movn	v0,t3,v1
     5b4:	07000000 	bltz	t8,5b8 <sigill_handler-0x3ffa48>
     5b8:	00000088 	0x88
     5bc:	1a100c04 	0x1a100c04
     5c0:	04000001 	bltz	zero,5c8 <sigill_handler-0x3ffa38>
     5c4:	012b0b00 	0x12b0b00
     5c8:	630c0000 	0x630c0000
     5cc:	0d000001 	jal	4000004 <end+0x3bf6004>
     5d0:	00000025 	move	zero,zero
     5d4:	58040e00 	0x58040e00
     5d8:	0f000001 	jal	c000004 <end+0xbbf6004>
     5dc:	02170508 	0x2170508
     5e0:	0000018d 	break	0x0,0x6
     5e4:	0003ca07 	0x3ca07
     5e8:	02170500 	0x2170500
     5ec:	000002c4 	0x2c4
     5f0:	03a90700 	0x3a90700
     5f4:	17050000 	bne	t8,a1,5f8 <sigill_handler-0x3ffa08>
     5f8:	0002ca02 	srl	t9,v0,0x8
     5fc:	10000400 	b	1600 <sigill_handler-0x3fea00>
     600:	00766e45 	0x766e45
     604:	150501f8 	bne	t0,a1,de8 <sigill_handler-0x3ff218>
     608:	0002ba08 	0x2ba08
     60c:	03b10700 	0x3b10700
     610:	16050000 	bne	s0,a1,614 <sigill_handler-0x3ff9ec>
     614:	00008813 	0x8813
     618:	70070000 	madd	zero,a3
     61c:	05000003 	bltz	t0,62c <sigill_handler-0x3ff9d4>
     620:	01691217 	0x1691217
     624:	07980000 	0x7980000
     628:	000002a8 	0x2a8
     62c:	5d081805 	0x5d081805
     630:	a0000000 	sb	zero,0(zero)
     634:	00035c07 	0x35c07
     638:	08190500 	j	641400 <end+0x237400>
     63c:	0000005d 	0x5d
     640:	03f407a4 	0x3f407a4
     644:	1a050000 	0x1a050000
     648:	00005d08 	0x5d08
     64c:	cb07a800 	lwc2	$7,-22528(t8)
     650:	05000005 	bltz	t0,668 <sigill_handler-0x3ff998>
     654:	005d081b 	0x5d081b
     658:	07ac0000 	teqi	sp,0
     65c:	00000396 	0x396
     660:	f4071c05 	sdc1	$f7,7173(zero)
     664:	b0000002 	0xb0000002
     668:	00034507 	0x34507
     66c:	131d0500 	beq	t8,sp,1a70 <sigill_handler-0x3fe590>
     670:	000002d0 	0x2d0
     674:	030b07b4 	teq	t8,t3,0x1e
     678:	1e050000 	0x1e050000
     67c:	00005d08 	0x5d08
     680:	0207bc00 	0x207bc00
     684:	05000004 	bltz	t0,698 <sigill_handler-0x3ff968>
     688:	005d0821 	addu	at,v0,sp
     68c:	07c00000 	bltz	s8,690 <sigill_handler-0x3ff970>
     690:	0000041f 	0x41f
     694:	5d082205 	0x5d082205
     698:	c4000000 	lwc1	$f0,0(zero)
     69c:	0002e107 	0x2e107
     6a0:	08230500 	j	8c1400 <end+0x4b7400>
     6a4:	0000005d 	0x5d
     6a8:	02af07c8 	0x2af07c8
     6ac:	24050000 	li	a1,0
     6b0:	00005d08 	0x5d08
     6b4:	3807cc00 	xori	a3,zero,0xcc00
     6b8:	05000003 	bltz	t0,6c8 <sigill_handler-0x3ff938>
     6bc:	005d0825 	or	at,v0,sp
     6c0:	07d00000 	bltzal	s8,6c4 <sigill_handler-0x3ff93c>
     6c4:	00000272 	tlt	zero,zero,0x9
     6c8:	5d082805 	0x5d082805
     6cc:	d4000000 	ldc1	$f0,0(zero)
     6d0:	00044d07 	0x44d07
     6d4:	082b0500 	j	ac1400 <end+0x6b7400>
     6d8:	0000005d 	0x5d
     6dc:	036507d8 	0x36507d8
     6e0:	2e050000 	sltiu	a1,s0,0
     6e4:	00011a0b 	0x11a0b
     6e8:	7907dc00 	0x7907dc00
     6ec:	05000003 	bltz	t0,6fc <sigill_handler-0x3ff904>
     6f0:	011a0b2f 	0x11a0b2f
     6f4:	07e00000 	bltz	ra,6f8 <sigill_handler-0x3ff908>
     6f8:	00000321 	0x321
     6fc:	1a0b3005 	0x1a0b3005
     700:	e4000001 	swc1	$f0,1(zero)
     704:	00048a07 	0x48a07
     708:	08310500 	j	c41400 <end+0x837400>
     70c:	0000005d 	0x5d
     710:	038907e8 	0x38907e8
     714:	32050000 	andi	a1,s0,0x0
     718:	00005d08 	0x5d08
     71c:	1307ec00 	beq	t8,a3,ffffb720 <end+0xffbf1720>
     720:	05000003 	bltz	t0,730 <sigill_handler-0x3ff8d0>
     724:	02fa1333 	tltu	s7,k0,0x4c
     728:	00f00000 	0xf00000
     72c:	00018d0b 	0x18d0b
     730:	02ba1100 	0x2ba1100
     734:	040e0000 	tnei	zero,0
     738:	0000018d 	break	0x0,0x6
     73c:	02c4040e 	0x2c4040e
     740:	080f0000 	j	3c0000 <sigill_handler-0x40000>
     744:	f4021d05 	sdc1	$f2,7429(zero)
     748:	07000002 	bltz	t8,754 <sigill_handler-0x3ff8ac>
     74c:	000003b8 	0x3b8
     750:	c4021d05 	lwc1	$f2,7429(zero)
     754:	00000002 	srl	zero,zero,0x0
     758:	0003a007 	srav	s4,v1,zero
     75c:	021d0500 	0x21d0500
     760:	000002ca 	0x2ca
     764:	040e0004 	tnei	zero,4
     768:	0000007c 	0x7c
     76c:	00012b09 	0x12b09
     770:	00030a00 	sll	at,v1,0x8
     774:	002c0a00 	0x2c0a00
     778:	00200000 	0x200000
     77c:	7a060103 	0x7a060103
     780:	0e000000 	jal	8000000 <end+0x7bf6000>
     784:	00030a04 	0x30a04
     788:	6e651200 	0x6e651200
     78c:	13070076 	beq	t8,a3,968 <sigill_handler-0x3ff698>
     790:	00032323 	0x32323
     794:	bf040e00 	cache	0x4,3584(t8)
     798:	13000002 	beqz	t8,7a4 <sigill_handler-0x3ff85c>
     79c:	00000317 	0x317
     7a0:	051c1001 	0x51c1001
     7a4:	40801003 	mtc0	zero,$2,3
     7a8:	03de1400 	0x3de1400
     7ac:	6c010000 	0x6c010000
     7b0:	00002505 	0x2505
     7b4:	400a7000 	mfc0	t2,c0_epc
     7b8:	00003c00 	sll	a3,zero,0x10
     7bc:	619c0100 	0x619c0100
     7c0:	15000003 	bnez	t0,7d0 <sigill_handler-0x3ff830>
     7c4:	00000289 	0x289
     7c8:	611a6c01 	0x611a6c01
     7cc:	02000003 	0x2000003
     7d0:	0e000091 	jal	8000244 <end+0x7bf6244>
     7d4:	00011a04 	0x11a04
     7d8:	05011600 	bgez	t0,5fdc <sigill_handler-0x3fa024>
     7dc:	67010000 	0x67010000
     7e0:	00002505 	0x2505
     7e4:	400a2800 	mfc0	t2,c0_pagemask
     7e8:	00004800 	sll	t1,zero,0x0
     7ec:	af9c0100 	sw	gp,256(gp)
     7f0:	15000003 	bnez	t0,800 <sigill_handler-0x3ff800>
     7f4:	0000042c 	0x42c
     7f8:	25156701 	addiu	s5,t0,26369
     7fc:	02000000 	0x2000000
     800:	89150091 	lwl	s5,145(t0)
     804:	01000002 	0x1000002
     808:	03af2d67 	0x3af2d67
     80c:	91020000 	lbu	v0,0(t0)
     810:	046e1504 	tnei	v1,5380
     814:	67010000 	0x67010000
     818:	0003613f 	0x3613f
     81c:	08910200 	j	2440800 <end+0x2036800>
     820:	26040e00 	addiu	a0,s0,3584
     824:	14000001 	bnez	zero,82c <sigill_handler-0x3ff7d4>
     828:	000003c1 	0x3c1
     82c:	25055f01 	addiu	a1,t0,24321
     830:	dc000000 	0xdc000000
     834:	4c004009 	0x4c004009
     838:	01000000 	0x1000000
     83c:	0003fd9c 	0x3fd9c
     840:	02891500 	0x2891500
     844:	5f010000 	0x5f010000
     848:	00036118 	0x36118
     84c:	00910200 	0x910200
     850:	00046715 	0x46715
     854:	2f5f0100 	sltiu	ra,k0,256
     858:	000003af 	0x3af
     85c:	15049102 	bne	t0,a0,fffe4c68 <end+0xffbdac68>
     860:	00000303 	sra	zero,zero,0xc
     864:	af475f01 	sw	a3,24321(k0)
     868:	02000003 	0x2000003
     86c:	14000891 	bnez	zero,2ab4 <sigill_handler-0x3fd54c>
     870:	000002bd 	0x2bd
     874:	25055901 	addiu	a1,t0,22785
     878:	90000000 	lbu	zero,0(zero)
     87c:	4c004009 	0x4c004009
     880:	01000000 	0x1000000
     884:	0004459c 	0x4459c
     888:	02891500 	0x2891500
     88c:	59010000 	0x59010000
     890:	00036119 	0x36119
     894:	00910200 	0x910200
     898:	00046715 	0x46715
     89c:	30590100 	andi	t9,v0,0x100
     8a0:	000003af 	0x3af
     8a4:	15049102 	bne	t0,a0,fffe4cb0 <end+0xffbdacb0>
     8a8:	00000303 	sra	zero,zero,0xc
     8ac:	af485901 	sw	t0,22785(k0)
     8b0:	02000003 	0x2000003
     8b4:	14000891 	bnez	zero,2afc <sigill_handler-0x3fd504>
     8b8:	0000047c 	0x47c
     8bc:	25055101 	addiu	a1,t0,20737
     8c0:	4c000000 	mfc3	zero,$0
     8c4:	44004009 	0x44004009
     8c8:	01000000 	0x1000000
     8cc:	00046f9c 	0x46f9c
     8d0:	02891500 	0x2891500
     8d4:	51010000 	beql	t0,at,8d8 <sigill_handler-0x3ff728>
     8d8:	0003af23 	0x3af23
     8dc:	00910200 	0x910200
     8e0:	029c1400 	0x29c1400
     8e4:	46010000 	add.s	$f0,$f0,$f1
     8e8:	00002505 	0x2505
     8ec:	4008c800 	mfc0	t0,c0_perfcnt
     8f0:	00008400 	sll	s0,zero,0x10
     8f4:	a89c0100 	swl	gp,256(a0)
     8f8:	15000004 	bnez	t0,90c <sigill_handler-0x3ff6f4>
     8fc:	00000289 	0x289
     900:	af214601 	sw	at,17921(t9)
     904:	02000003 	0x2000003
     908:	f1150091 	0xf1150091
     90c:	01000002 	0x1000002
     910:	00252c46 	0x252c46
     914:	91020000 	lbu	v0,0(t0)
     918:	f9140004 	sdc2	$20,4(t0)
     91c:	01000002 	0x1000002
     920:	0025053d 	0x25053d
     924:	084c0000 	j	1300000 <end+0xef6000>
     928:	007c0040 	0x7c0040
     92c:	9c010000 	0x9c010000
     930:	000004e1 	0x4e1
     934:	00028915 	0x28915
     938:	193d0100 	0x193d0100
     93c:	00000361 	0x361
     940:	15009102 	bnez	t0,fffe4d4c <end+0xffbdad4c>
     944:	000002f1 	tgeu	zero,zero,0xb
     948:	25243d01 	addiu	a0,t1,15617
     94c:	02000000 	0x2000000
     950:	14000491 	bnez	zero,1b98 <sigill_handler-0x3fe468>
     954:	00000443 	sra	zero,zero,0x11
     958:	25053401 	addiu	a1,t0,13313
     95c:	d4000000 	ldc1	$f0,0(zero)
     960:	78004007 	0x78004007
     964:	01000000 	0x1000000
     968:	00051a9c 	0x51a9c
     96c:	02891500 	0x2891500
     970:	34010000 	li	at,0x0
     974:	00036119 	0x36119
     978:	00910200 	0x910200
     97c:	0002f115 	0x2f115
     980:	24340100 	addiu	s4,at,256
     984:	00000025 	move	zero,zero
     988:	00049102 	srl	s2,a0,0x4
     98c:	0002c714 	0x2c714
     990:	052e0100 	tnei	t1,256
     994:	00000025 	move	zero,zero
     998:	004007a0 	0x4007a0
     99c:	00000034 	teq	zero,zero
     9a0:	05449c01 	0x5449c01
     9a4:	89150000 	lwl	s5,0(t0)
     9a8:	01000002 	0x1000002
     9ac:	03611a2e 	0x3611a2e
     9b0:	91020000 	lbu	v0,0(t0)
     9b4:	d2140000 	0xd2140000
     9b8:	01000003 	0x1000003
     9bc:	00250528 	0x250528
     9c0:	07700000 	bltzal	k1,9c4 <sigill_handler-0x3ff63c>
     9c4:	00300040 	0x300040
     9c8:	9c010000 	0x9c010000
     9cc:	0000056e 	0x56e
     9d0:	00028915 	0x28915
     9d4:	1b280100 	0x1b280100
     9d8:	00000361 	0x361
     9dc:	00009102 	srl	s2,zero,0x4
     9e0:	0005ac16 	0x5ac16
     9e4:	05230100 	bgezl	t1,de8 <sigill_handler-0x3ff218>
     9e8:	00000025 	move	zero,zero
     9ec:	00400730 	tge	v0,zero,0x1c
     9f0:	00000040 	ssnop
     9f4:	05a79c01 	0x5a79c01
     9f8:	70150000 	madd	zero,s5
     9fc:	01000005 	0x1000005
     a00:	005d1023 	subu	v0,v0,sp
     a04:	91020000 	lbu	v0,0(t0)
     a08:	69731700 	0x69731700
     a0c:	23010067 	addi	at,t8,103
     a10:	0000251b 	0x251b
     a14:	04910200 	bgezal	a0,1218 <sigill_handler-0x3fede8>
     a18:	058c1600 	teqi	t4,5632
     a1c:	1f010000 	0x1f010000
     a20:	00002505 	0x2505
     a24:	4006e800 	mfc0	a2,c0_taghi
     a28:	00004800 	sll	t1,zero,0x0
     a2c:	ef9c0100 	0xef9c0100
     a30:	15000005 	bnez	t0,a48 <sigill_handler-0x3ff5b8>
     a34:	00000331 	tgeu	zero,zero,0xc
     a38:	25131f01 	addiu	s3,t0,7937
     a3c:	02000000 	0x2000000
     a40:	d2150091 	0xd2150091
     a44:	01000002 	0x1000002
     a48:	05ef331f 	0x5ef331f
     a4c:	91020000 	lbu	v0,0(t0)
     a50:	043c1504 	0x43c1504
     a54:	1f010000 	0x1f010000
     a58:	0005f54d 	break	0x5,0x3d5
     a5c:	08910200 	j	2440800 <end+0x2036800>
     a60:	53040e00 	beql	t8,a0,4264 <sigill_handler-0x3fbd9c>
     a64:	0e000001 	jal	8000004 <end+0x7bf6004>
     a68:	00012b04 	0x12b04
     a6c:	03541800 	0x3541800
     a70:	13010000 	beq	t8,at,a74 <sigill_handler-0x3ff58c>
     a74:	40068006 	mfc0	a2,$16,6
     a78:	00006800 	sll	t5,zero,0x0
     a7c:	309c0100 	andi	gp,a0,0x100
     a80:	15000006 	bnez	t0,a9c <sigill_handler-0x3ff564>
     a84:	00000437 	0x437
     a88:	25121301 	addiu	s2,t0,4865
     a8c:	02000000 	0x2000000
     a90:	62150091 	0x62150091
     a94:	01000004 	sllv	zero,zero,t0
     a98:	06301f13 	bltzal	s1,86e8 <sigill_handler-0x3f7918>
     a9c:	91020000 	lbu	v0,0(t0)
     aa0:	040e0004 	tnei	zero,4
     aa4:	00000311 	0x311
     aa8:	00041019 	0x41019
     aac:	06060100 	0x6060100
     ab0:	00400640 	0x400640
     ab4:	00000040 	ssnop
     ab8:	e8009c01 	swc2	$0,-25599(zero)
     abc:	04000006 	bltz	zero,ad8 <sigill_handler-0x3ff528>
     ac0:	0003fa00 	sll	ra,v1,0x8
     ac4:	90010400 	lbu	at,1024(zero)
     ac8:	0c000000 	jal	0 <sigill_handler-0x400000>
     acc:	000004d1 	0x4d1
     ad0:	00000049 	0x49
     ad4:	00400ab0 	tge	v0,zero,0x2a
     ad8:	00000790 	0x790
     adc:	00000407 	0x407
     ae0:	69050402 	0x69050402
     ae4:	0300746e 	0x300746e
     ae8:	002d0704 	0x2d0704
     aec:	01030000 	0x1030000
     af0:	00007306 	0x7306
     af4:	05020300 	bltzl	t0,16f8 <sigill_handler-0x3fe908>
     af8:	000001ac 	0x1ac
     afc:	00050803 	sra	at,a1,0x0
     b00:	03000000 	0x3000000
     b04:	00710801 	movt	at,v1,$fcc4
     b08:	02030000 	0x2030000
     b0c:	00018c07 	0x18c07
     b10:	07080300 	tgei	t8,768
     b14:	00000023 	negu	zero,zero
     b18:	00001d04 	0x1d04
     b1c:	16090300 	bne	s0,t1,1720 <sigill_handler-0x3fe8e0>
     b20:	0000002c 	0x2c
     b24:	00047504 	0x47504
     b28:	170a0300 	bne	t8,t2,172c <sigill_handler-0x3fe8d4>
     b2c:	00000075 	0x75
     b30:	28070403 	slti	a3,zero,1027
     b34:	05000000 	bltz	t0,b38 <sigill_handler-0x3ff4c8>
     b38:	00656450 	0x656450
     b3c:	69109704 	0x69109704
     b40:	05000000 	bltz	t0,b44 <sigill_handler-0x3ff4bc>
     b44:	00657450 	0x657450
     b48:	69109804 	0x69109804
     b4c:	06000000 	bltz	s0,b50 <sigill_handler-0x3ff4b0>
     b50:	00000415 	0x415
     b54:	08080598 	j	201660 <sigill_handler-0x1fe9a0>
     b58:	000000fb 	0xfb
     b5c:	00043207 	0x43207
     b60:	100a0500 	beq	zero,t2,1f64 <sigill_handler-0x3fe09c>
     b64:	000000fb 	0xfb
     b68:	03e90700 	0x3e90700
     b6c:	0d050000 	jal	4140000 <end+0x3d36000>
     b70:	00007510 	0x7510
     b74:	68088000 	0x68088000
     b78:	0e050069 	jal	81401a4 <end+0x7d361a4>
     b7c:	00007510 	0x7510
     b80:	6c088400 	0x6c088400
     b84:	0f05006f 	jal	c1401bc <end+0xbd361bc>
     b88:	00007510 	0x7510
     b8c:	8f078800 	lw	a3,-30720(t8)
     b90:	05000002 	bltz	t0,b9c <sigill_handler-0x3ff464>
     b94:	00751010 	0x751010
     b98:	078c0000 	teqi	gp,0
     b9c:	00000268 	0x268
     ba0:	75101105 	jalx	4404414 <end+0x3ffa414>
     ba4:	90000000 	lbu	zero,0(zero)
     ba8:	0002d907 	0x2d907
     bac:	10120500 	beq	zero,s2,1fb0 <sigill_handler-0x3fe050>
     bb0:	00000075 	0x75
     bb4:	75090094 	jalx	4240250 <end+0x3e36250>
     bb8:	0b000000 	j	c000000 <end+0xbbf6000>
     bbc:	0a000001 	j	8000004 <end+0x7bf6004>
     bc0:	0000002c 	0x2c
     bc4:	7f06001f 	0x7f06001f
     bc8:	04000000 	bltz	zero,bcc <sigill_handler-0x3ff434>
     bcc:	26100606 	addiu	s0,s0,1542
     bd0:	08000001 	j	4 <sigill_handler-0x3ffffc>
     bd4:	00676973 	tltu	v1,a3,0x1a5
     bd8:	5d0b0706 	0x5d0b0706
     bdc:	00000000 	nop
     be0:	007f0400 	0x7f0400
     be4:	08060000 	j	180000 <sigill_handler-0x280000>
     be8:	00010b03 	sra	at,at,0xc
     bec:	058c0600 	teqi	t4,1536
     bf0:	06080000 	tgei	s0,0
     bf4:	015a080a 	movz	at,t2,k0
     bf8:	b6070000 	0xb6070000
     bfc:	06000001 	bltz	s0,c04 <sigill_handler-0x3ff3fc>
     c00:	0165100b 	movn	v0,t3,a1
     c04:	07000000 	bltz	t8,c08 <sigill_handler-0x3ff3f8>
     c08:	00000088 	0x88
     c0c:	26100c06 	addiu	s0,s0,3078
     c10:	04000001 	bltz	zero,c18 <sigill_handler-0x3ff3e8>
     c14:	01650b00 	0x1650b00
     c18:	250c0000 	addiu	t4,t0,0
     c1c:	00000000 	nop
     c20:	015a040d 	break	0x15a,0x10
     c24:	080e0000 	j	380000 <sigill_handler-0x80000>
     c28:	8f021707 	lw	v0,5895(t8)
     c2c:	07000001 	bltz	t8,c34 <sigill_handler-0x3ff3cc>
     c30:	000003ca 	0x3ca
     c34:	c6021707 	lwc1	$f2,5895(s0)
     c38:	00000002 	srl	zero,zero,0x0
     c3c:	0003a907 	0x3a907
     c40:	02170700 	0x2170700
     c44:	000002cc 	syscall	0xb
     c48:	450f0004 	bc1tl	$fcc3,c5c <sigill_handler-0x3ff3a4>
     c4c:	f800766e 	sdc2	$0,30318(zero)
     c50:	08150701 	j	541c04 <end+0x137c04>
     c54:	000002bc 	0x2bc
     c58:	0003b107 	0x3b107
     c5c:	13160700 	beq	t8,s6,2860 <sigill_handler-0x3fd7a0>
     c60:	00000094 	0x94
     c64:	03700700 	0x3700700
     c68:	17070000 	bne	t8,a3,c6c <sigill_handler-0x3ff394>
     c6c:	00016b12 	0x16b12
     c70:	a8079800 	swl	a3,-26624(zero)
     c74:	07000002 	bltz	t8,c80 <sigill_handler-0x3ff380>
     c78:	005d0818 	0x5d0818
     c7c:	07a00000 	bltz	sp,c80 <sigill_handler-0x3ff380>
     c80:	0000035c 	0x35c
     c84:	5d081907 	0x5d081907
     c88:	a4000000 	sh	zero,0(zero)
     c8c:	0003f407 	0x3f407
     c90:	081a0700 	j	681c00 <end+0x277c00>
     c94:	0000005d 	0x5d
     c98:	05cb07a8 	tltiu	t6,1960
     c9c:	1b070000 	0x1b070000
     ca0:	00005d08 	0x5d08
     ca4:	9607ac00 	lhu	a3,-21504(s0)
     ca8:	07000003 	bltz	t8,cb8 <sigill_handler-0x3ff348>
     cac:	02f6071c 	0x2f6071c
     cb0:	07b00000 	bltzal	sp,cb4 <sigill_handler-0x3ff34c>
     cb4:	00000345 	0x345
     cb8:	d2131d07 	0xd2131d07
     cbc:	b4000002 	0xb4000002
     cc0:	00030b07 	0x30b07
     cc4:	081e0700 	j	781c00 <end+0x377c00>
     cc8:	0000005d 	0x5d
     ccc:	040207bc 	bltzl	zero,2bc0 <sigill_handler-0x3fd440>
     cd0:	21070000 	addi	a3,t0,0
     cd4:	00005d08 	0x5d08
     cd8:	1f07c000 	0x1f07c000
     cdc:	07000004 	bltz	t8,cf0 <sigill_handler-0x3ff310>
     ce0:	005d0822 	sub	at,v0,sp
     ce4:	07c40000 	0x7c40000
     ce8:	000002e1 	0x2e1
     cec:	5d082307 	0x5d082307
     cf0:	c8000000 	lwc2	$0,0(zero)
     cf4:	0002af07 	0x2af07
     cf8:	08240700 	j	901c00 <end+0x4f7c00>
     cfc:	0000005d 	0x5d
     d00:	033807cc 	syscall	0xce01f
     d04:	25070000 	addiu	a3,t0,0
     d08:	00005d08 	0x5d08
     d0c:	7207d000 	0x7207d000
     d10:	07000002 	bltz	t8,d1c <sigill_handler-0x3ff2e4>
     d14:	005d0828 	0x5d0828
     d18:	07d40000 	0x7d40000
     d1c:	0000044d 	break	0x0,0x11
     d20:	5d082b07 	0x5d082b07
     d24:	d8000000 	ldc2	$0,0(zero)
     d28:	00036507 	0x36507
     d2c:	0b2e0700 	j	cb81c00 <end+0xc777c00>
     d30:	00000126 	0x126
     d34:	037907dc 	0x37907dc
     d38:	2f070000 	sltiu	a3,t8,0
     d3c:	0001260b 	0x1260b
     d40:	2107e000 	addi	a3,t0,-8192
     d44:	07000003 	bltz	t8,d54 <sigill_handler-0x3ff2ac>
     d48:	01260b30 	tge	t1,a2,0x2c
     d4c:	07e40000 	0x7e40000
     d50:	0000048a 	0x48a
     d54:	5d083107 	0x5d083107
     d58:	e8000000 	swc2	$0,0(zero)
     d5c:	00038907 	0x38907
     d60:	08320700 	j	c81c00 <end+0x877c00>
     d64:	0000005d 	0x5d
     d68:	031307ec 	0x31307ec
     d6c:	33070000 	andi	a3,t8,0x0
     d70:	0002fc13 	0x2fc13
     d74:	1000f000 	b	ffffcd78 <end+0xffbf2d78>
     d78:	0000018f 	sync	0x6
     d7c:	0002bc11 	0x2bc11
     d80:	8f040d00 	lw	a0,3328(t8)
     d84:	0d000001 	jal	4000004 <end+0x3bf6004>
     d88:	0002c604 	0x2c604
     d8c:	07080e00 	tgei	t8,3584
     d90:	02f6021d 	0x2f6021d
     d94:	b8070000 	swr	a3,0(zero)
     d98:	07000003 	bltz	t8,da8 <sigill_handler-0x3ff258>
     d9c:	02c6021d 	0x2c6021d
     da0:	07000000 	bltz	t8,da4 <sigill_handler-0x3ff25c>
     da4:	000003a0 	0x3a0
     da8:	cc021d07 	pref	0x2,7431(zero)
     dac:	04000002 	bltz	zero,db8 <sigill_handler-0x3ff248>
     db0:	7c040d00 	0x7c040d00
     db4:	09000000 	j	4000000 <end+0x3bf6000>
     db8:	00000132 	tlt	zero,zero,0x4
     dbc:	0000030c 	syscall	0xc
     dc0:	00002c0a 	0x2c0a
     dc4:	03002000 	0x3002000
     dc8:	007a0601 	0x7a0601
     dcc:	04120000 	bltzall	zero,dd0 <sigill_handler-0x3ff230>
     dd0:	2c040713 	sltiu	a0,zero,1811
     dd4:	08000000 	j	0 <sigill_handler-0x400000>
     dd8:	03b40606 	0x3b40606
     ddc:	96140000 	lhu	s4,0(s0)
     de0:	00000005 	0x5
     de4:	00052314 	0x52314
     de8:	69140100 	0x69140100
     dec:	02000005 	0x2000005
     df0:	0004f314 	0x4f314
     df4:	18140300 	0x18140300
     df8:	04000006 	bltz	zero,e14 <sigill_handler-0x3ff1ec>
     dfc:	00050d14 	0x50d14
     e00:	02140500 	0x2140500
     e04:	06000006 	bltz	s0,e20 <sigill_handler-0x3ff1e0>
     e08:	0005d614 	0x5d614
     e0c:	dc140700 	0xdc140700
     e10:	08000004 	j	10 <sigill_handler-0x3ffff0>
     e14:	0004b814 	0x4b814
     e18:	c3140900 	ll	s4,2304(t8)
     e1c:	0a000005 	j	8000014 <end+0x7bf6014>
     e20:	0005b114 	0x5b114
     e24:	4d140b00 	0x4d140b00
     e28:	0c000005 	jal	14 <sigill_handler-0x3fffec>
     e2c:	00053214 	0x53214
     e30:	9d140d00 	0x9d140d00
     e34:	0e000004 	jal	8000010 <end+0x7bf6010>
     e38:	0005f814 	0x5f814
     e3c:	aa140f00 	swl	s4,3840(s0)
     e40:	10000004 	b	e54 <sigill_handler-0x3ff1ac>
     e44:	0004c414 	0x4c414
     e48:	fd141100 	0xfd141100
     e4c:	12000004 	beqz	s0,e60 <sigill_handler-0x3ff1a0>
     e50:	00058814 	0x58814
     e54:	76141300 	jalx	8504c00 <end+0x80fac00>
     e58:	14000005 	bnez	zero,e70 <sigill_handler-0x3ff190>
     e5c:	0005e714 	0x5e714
     e60:	a8141500 	swl	s4,5376(zero)
     e64:	16000005 	bnez	s0,e7c <sigill_handler-0x3ff184>
     e68:	00054314 	0x54314
     e6c:	15001700 	bnez	t0,6a70 <sigill_handler-0x3f9590>
     e70:	00766e65 	0x766e65
     e74:	c0231302 	ll	v1,4866(at)
     e78:	0d000003 	jal	400000c <end+0x3bf600c>
     e7c:	0002c104 	0x2c104
     e80:	04bf1600 	0x4bf1600
     e84:	89010000 	lwl	at,0(t0)
     e88:	00002505 	0x2505
     e8c:	400ff000 	mfc0	t7,c0_errorepc
     e90:	00025000 	sll	t2,v0,0x0
     e94:	b29c0100 	0xb29c0100
     e98:	17000004 	bnez	t8,eac <sigill_handler-0x3ff154>
     e9c:	000005a2 	0x5a2
     ea0:	5d088a01 	0x5d088a01
     ea4:	02000000 	0x2000000
     ea8:	69186491 	0x69186491
     eac:	088b0100 	j	22c0400 <end+0x1eb6400>
     eb0:	0000005d 	0x5d
     eb4:	40101c19 	0x40101c19
     eb8:	00003000 	sll	a2,zero,0x0
     ebc:	00041500 	sll	v0,a0,0x14
     ec0:	725f1a00 	0x725f1a00
     ec4:	038f0100 	0x38f0100
     ec8:	00000025 	move	zero,zero
     ecc:	005c9102 	0x5c9102
     ed0:	40106819 	0x40106819
     ed4:	00003000 	sll	a2,zero,0x0
     ed8:	00043100 	sll	a2,a0,0x4
     edc:	725f1a00 	0x725f1a00
     ee0:	03930100 	0x3930100
     ee4:	00000025 	move	zero,zero
     ee8:	00609102 	0x609102
     eec:	40110419 	0x40110419
     ef0:	00009400 	sll	s2,zero,0x10
     ef4:	00044d00 	sll	t1,a0,0x14
     ef8:	61761a00 	0x61761a00
     efc:	0da10100 	jal	6840400 <end+0x6436400>
     f00:	00000069 	0x69
     f04:	00589102 	0x589102
     f08:	40119819 	0x40119819
     f0c:	00003000 	sll	a2,zero,0x0
     f10:	00046900 	sll	t5,a0,0x4
     f14:	725f1a00 	0x725f1a00
     f18:	02ad0100 	0x2ad0100
     f1c:	00000025 	move	zero,zero
     f20:	00689102 	0x689102
     f24:	4011c819 	0x4011c819
     f28:	00003000 	sll	a2,zero,0x0
     f2c:	00048500 	sll	s0,a0,0x14
     f30:	725f1a00 	0x725f1a00
     f34:	02ae0100 	0x2ae0100
     f38:	00000025 	move	zero,zero
     f3c:	006c9102 	0x6c9102
     f40:	4011f819 	0x4011f819
     f44:	00002c00 	sll	a1,zero,0x10
     f48:	0004a100 	sll	s4,a0,0x4
     f4c:	725f1a00 	0x725f1a00
     f50:	02af0100 	0x2af0100
     f54:	00000025 	move	zero,zero
     f58:	00709102 	0x709102
     f5c:	0006de1b 	0x6de1b
     f60:	40109800 	mfc0	s0,c0_watchhi
     f64:	00002000 	sll	a0,zero,0x0
     f68:	0a990100 	j	a640400 <end+0xa236400>
     f6c:	05571c00 	0x5571c00
     f70:	7a010000 	0x7a010000
     f74:	00002505 	0x2505
     f78:	400fb400 	0x400fb400
     f7c:	00003c00 	sll	a3,zero,0x10
     f80:	1d9c0100 	0x1d9c0100
     f84:	00000493 	0x493
     f88:	b0276001 	0xb0276001
     f8c:	0400400d 	bltz	zero,10fc4 <sigill_handler-0x3ef03c>
     f90:	01000002 	0x1000002
     f94:	0005d69c 	0x5d69c
     f98:	66741e00 	0x66741e00
     f9c:	43600100 	c0	0x1600100
     fa0:	000005d6 	0x5d6
     fa4:	1f009102 	bgtz	t8,fffe53b0 <end+0xffbdb3b0>
     fa8:	00000331 	tgeu	zero,zero,0xc
     fac:	5d4d6001 	0x5d4d6001
     fb0:	02000000 	0x2000000
     fb4:	b91f0491 	swr	ra,1169(t0)
     fb8:	01000001 	movf	zero,t0,$fcc0
     fbc:	01655c60 	0x1655c60
     fc0:	91020000 	lbu	v0,0(t0)
     fc4:	008b1f08 	0x8b1f08
     fc8:	60010000 	0x60010000
     fcc:	00005d71 	tgeu	zero,zero,0x175
     fd0:	0c910200 	jal	2440800 <end+0x2036800>
     fd4:	0100721a 	0x100721a
     fd8:	00250662 	0x250662
     fdc:	91020000 	lbu	v0,0(t0)
     fe0:	0088176c 	0x88176c
     fe4:	63010000 	0x63010000
     fe8:	0001260b 	0x1260b
     fec:	70910200 	0x70910200
     ff0:	0004ea17 	0x4ea17
     ff4:	0b640100 	j	d900400 <end+0xd4f6400>
     ff8:	00000126 	0x126
     ffc:	20749102 	addi	s4,v1,-28414
    1000:	00000048 	0x48
    1004:	000005c1 	0x5c1
    1008:	0005e217 	0x5e217
    100c:	09680100 	j	5a00400 <end+0x55f6400>
    1010:	00000313 	0x313
    1014:	20609102 	addi	zero,v1,-28414
    1018:	00000060 	0x60
    101c:	00000582 	srl	zero,zero,0x16
    1020:	00725f1a 	0x725f1a
    1024:	25036701 	addiu	v1,t0,26369
    1028:	02000000 	0x2000000
    102c:	01215c91 	0x1215c91
    1030:	01000005 	0x1000005
    1034:	00250367 	0x250367
    1038:	00220000 	0x220000
    103c:	00782000 	0x782000
    1040:	059a0000 	0x59a0000
    1044:	5f1a0000 	0x5f1a0000
    1048:	69010072 	0x69010072
    104c:	00002503 	sra	a0,zero,0x14
    1050:	64910200 	0x64910200
    1054:	0e902300 	jal	a408c00 <end+0x9ffec00>
    1058:	00300040 	0x300040
    105c:	5f1a0000 	0x5f1a0000
    1060:	6c010072 	0x6c010072
    1064:	00002503 	sra	a0,zero,0x14
    1068:	68910200 	0x68910200
    106c:	00050121 	0x50121
    1070:	03670100 	0x3670100
    1074:	00000025 	move	zero,zero
    1078:	00000022 	neg	zero,zero
    107c:	00009024 	and	s2,zero,zero
    1080:	725f1a00 	0x725f1a00
    1084:	03730100 	0x3730100
    1088:	00000025 	move	zero,zero
    108c:	00589102 	0x589102
    1090:	94040d00 	lhu	a0,3328(zero)
    1094:	25000000 	addiu	zero,t0,0
    1098:	00000610 	0x610
    109c:	580d4701 	0x580d4701
    10a0:	5800400c 	blezl	zero,110d4 <sigill_handler-0x3eef2c>
    10a4:	01000001 	movf	zero,t0,$fcc0
    10a8:	0006459c 	0x6459c
    10ac:	05701f00 	bltzal	t3,8cb0 <sigill_handler-0x3f7350>
    10b0:	47010000 	c1	0x1010000
    10b4:	00005d1b 	0x5d1b
    10b8:	00910200 	0x910200
    10bc:	6e70761e 	0x6e70761e
    10c0:	28470100 	slti	a3,v0,256
    10c4:	0000005d 	0x5d
    10c8:	18049102 	0x18049102
    10cc:	48010072 	0x48010072
    10d0:	00002506 	0x2506
    10d4:	0c6e2600 	jal	1b89800 <end+0x177f800>
    10d8:	49010000 	bc2t	10dc <sigill_handler-0x3fef24>
    10dc:	00005d08 	0x5d08
    10e0:	03401700 	0x3401700
    10e4:	4a010000 	c2	0x10000
    10e8:	00005d08 	0x5d08
    10ec:	74910200 	jalx	2440800 <end+0x2036800>
    10f0:	6574701a 	0x6574701a
    10f4:	074e0100 	tnei	k0,256
    10f8:	00000645 	0x645
    10fc:	00709102 	0x709102
    1100:	0088040d 	break	0x88,0x10
    1104:	381d0000 	xori	sp,zero,0x0
    1108:	01000006 	srlv	zero,zero,t0
    110c:	0ab02710 	j	ac09c40 <end+0xa7ffc40>
    1110:	01a80040 	0x1a80040
    1114:	9c010000 	0x9c010000
    1118:	000006de 	0x6de
    111c:	0066741e 	0x66741e
    1120:	d6431001 	ldc1	$f3,4097(s2)
    1124:	02000005 	0x2000005
    1128:	761a0091 	jalx	8680244 <end+0x8276244>
    112c:	11010061 	beq	t0,at,12b4 <sigill_handler-0x3fed4c>
    1130:	00005d08 	0x5d08
    1134:	60910200 	0x60910200
    1138:	00034017 	0x34017
    113c:	08120100 	j	480400 <end+0x76400>
    1140:	0000005d 	0x5d
    1144:	1a649102 	0x1a649102
    1148:	2e010072 	sltiu	at,s0,114
    114c:	00002506 	0x2506
    1150:	74910200 	jalx	2440800 <end+0x2036800>
    1154:	00000020 	add	zero,zero,zero
    1158:	0006b100 	sll	s6,a2,0x4
    115c:	725f1a00 	0x725f1a00
    1160:	02220100 	0x2220100
    1164:	00000025 	move	zero,zero
    1168:	00689102 	0x689102
    116c:	00001820 	add	v1,zero,zero
    1170:	0006c900 	sll	t9,a2,0x4
    1174:	725f1a00 	0x725f1a00
    1178:	02290100 	0x2290100
    117c:	00000025 	move	zero,zero
    1180:	006c9102 	0x6c9102
    1184:	00003024 	and	a2,zero,zero
    1188:	725f1a00 	0x725f1a00
    118c:	022c0100 	0x22c0100
    1190:	00000025 	move	zero,zero
    1194:	00709102 	0x709102
    1198:	06282700 	tgei	s1,9984
    119c:	3b020000 	xori	v0,t8,0x0
    11a0:	00002532 	tlt	zero,zero,0x94
    11a4:	25000300 	addiu	zero,t0,768
    11a8:	04000007 	bltz	zero,11c8 <sigill_handler-0x3fee38>
    11ac:	00063700 	sll	a2,a2,0x1c
    11b0:	90010400 	lbu	at,1024(zero)
    11b4:	0c000000 	jal	0 <sigill_handler-0x400000>
    11b8:	000007c2 	srl	zero,zero,0x1f
    11bc:	00000049 	0x49
    11c0:	00401240 	0x401240
    11c4:	000005f4 	teq	zero,zero,0x17
    11c8:	00000669 	0x669
    11cc:	69050402 	0x69050402
    11d0:	0300746e 	0x300746e
    11d4:	002d0704 	0x2d0704
    11d8:	01030000 	0x1030000
    11dc:	00007306 	0x7306
    11e0:	05020300 	bltzl	t0,1de4 <sigill_handler-0x3fe21c>
    11e4:	000001ac 	0x1ac
    11e8:	00050803 	sra	at,a1,0x0
    11ec:	03000000 	0x3000000
    11f0:	00710801 	movt	at,v1,$fcc4
    11f4:	02030000 	0x2030000
    11f8:	00018c07 	0x18c07
    11fc:	07080300 	tgei	t8,768
    1200:	00000023 	negu	zero,zero
    1204:	00001d04 	0x1d04
    1208:	16090400 	bne	s0,t1,220c <sigill_handler-0x3fddf4>
    120c:	0000002c 	0x2c
    1210:	28070403 	slti	a3,zero,1027
    1214:	05000000 	bltz	t0,1218 <sigill_handler-0x3fede8>
    1218:	00000415 	0x415
    121c:	08080298 	j	200a60 <sigill_handler-0x1ff5a0>
    1220:	000000d7 	0xd7
    1224:	00043206 	0x43206
    1228:	100a0200 	beq	zero,t2,1a2c <sigill_handler-0x3fe5d4>
    122c:	000000d7 	0xd7
    1230:	03e90600 	0x3e90600
    1234:	0d020000 	jal	4080000 <end+0x3c76000>
    1238:	00006910 	0x6910
    123c:	68078000 	0x68078000
    1240:	0e020069 	jal	80801a4 <end+0x7c761a4>
    1244:	00006910 	0x6910
    1248:	6c078400 	0x6c078400
    124c:	0f02006f 	jal	c0801bc <end+0xbc761bc>
    1250:	00006910 	0x6910
    1254:	8f068800 	lw	a2,-30720(t8)
    1258:	02000002 	0x2000002
    125c:	00691010 	0x691010
    1260:	068c0000 	teqi	s4,0
    1264:	00000268 	0x268
    1268:	69101102 	0x69101102
    126c:	90000000 	lbu	zero,0(zero)
    1270:	0002d906 	0x2d906
    1274:	10120200 	beq	zero,s2,1a78 <sigill_handler-0x3fe588>
    1278:	00000069 	0x69
    127c:	69080094 	0x69080094
    1280:	e7000000 	swc1	$f0,0(t8)
    1284:	09000000 	j	4000000 <end+0x3bf6000>
    1288:	0000002c 	0x2c
    128c:	7f05001f 	0x7f05001f
    1290:	04000000 	bltz	zero,1294 <sigill_handler-0x3fed6c>
    1294:	02100603 	0x2100603
    1298:	07000001 	bltz	t8,12a0 <sigill_handler-0x3fed60>
    129c:	00676973 	tltu	v1,a3,0x1a5
    12a0:	5d0b0703 	0x5d0b0703
    12a4:	00000000 	nop
    12a8:	007f0400 	0x7f0400
    12ac:	08030000 	j	c0000 <sigill_handler-0x340000>
    12b0:	0000e703 	sra	gp,zero,0x1c
    12b4:	01020a00 	0x1020a00
    12b8:	8c050000 	lw	a1,0(zero)
    12bc:	08000005 	j	14 <sigill_handler-0x3fffec>
    12c0:	3b080a03 	xori	t0,t8,0xa03
    12c4:	06000001 	bltz	s0,12cc <sigill_handler-0x3fed34>
    12c8:	000001b6 	tne	zero,zero,0x6
    12cc:	4b100b03 	c2	0x1100b03
    12d0:	00000001 	movf	zero,zero,$fcc0
    12d4:	00008806 	srlv	s1,zero,zero
    12d8:	100c0300 	beq	zero,t4,1edc <sigill_handler-0x3fe124>
    12dc:	00000102 	srl	zero,zero,0x4
    12e0:	130a0004 	beq	t8,t2,12f4 <sigill_handler-0x3fed0c>
    12e4:	0b000001 	j	c000004 <end+0xbbf6004>
    12e8:	0000014b 	0x14b
    12ec:	0000250c 	syscall	0x94
    12f0:	040d0000 	0x40d0000
    12f4:	00000140 	sll	zero,zero,0x5
    12f8:	7a060103 	0x7a060103
    12fc:	0a000000 	j	8000000 <end+0x7bf6000>
    1300:	00000151 	0x151
    1304:	040d040e 	0x40d040e
    1308:	00000165 	0x165
    130c:	0407100f 	0x407100f
    1310:	0000002c 	0x2c
    1314:	05060605 	0x5060605
    1318:	11000002 	beqz	t0,1324 <sigill_handler-0x3fecdc>
    131c:	00000596 	0x596
    1320:	05231100 	bgezl	t1,5724 <sigill_handler-0x3fa8dc>
    1324:	11010000 	beq	t0,at,1328 <sigill_handler-0x3fecd8>
    1328:	00000569 	0x569
    132c:	04f31102 	bgezall	a3,5738 <sigill_handler-0x3fa8c8>
    1330:	11030000 	beq	t0,v1,1334 <sigill_handler-0x3feccc>
    1334:	00000618 	0x618
    1338:	050d1104 	0x50d1104
    133c:	11050000 	beq	t0,a1,1340 <sigill_handler-0x3fecc0>
    1340:	00000602 	srl	zero,zero,0x18
    1344:	05d61106 	0x5d61106
    1348:	11070000 	beq	t0,a3,134c <sigill_handler-0x3fecb4>
    134c:	000004dc 	0x4dc
    1350:	04b81108 	0x4b81108
    1354:	11090000 	beq	t0,t1,1358 <sigill_handler-0x3feca8>
    1358:	000005c3 	sra	zero,zero,0x17
    135c:	05b1110a 	bgezal	t5,5788 <sigill_handler-0x3fa878>
    1360:	110b0000 	beq	t0,t3,1364 <sigill_handler-0x3fec9c>
    1364:	0000054d 	break	0x0,0x15
    1368:	0532110c 	bltzall	t1,579c <sigill_handler-0x3fa864>
    136c:	110d0000 	beq	t0,t5,1370 <sigill_handler-0x3fec90>
    1370:	0000049d 	0x49d
    1374:	05f8110e 	0x5f8110e
    1378:	110f0000 	beq	t0,t7,137c <sigill_handler-0x3fec84>
    137c:	000004aa 	0x4aa
    1380:	04c41110 	0x4c41110
    1384:	11110000 	beq	t0,s1,1388 <sigill_handler-0x3fec78>
    1388:	000004fd 	0x4fd
    138c:	05881112 	tgei	t4,4370
    1390:	11130000 	beq	t0,s3,1394 <sigill_handler-0x3fec6c>
    1394:	00000576 	tne	zero,zero,0x15
    1398:	05e71114 	0x5e71114
    139c:	11150000 	beq	t0,s5,13a0 <sigill_handler-0x3fec60>
    13a0:	000005a8 	0x5a8
    13a4:	05431116 	bgezl	t2,5800 <sigill_handler-0x3fa800>
    13a8:	00170000 	sll	zero,s7,0x0
    13ac:	0007e512 	0x7e512
    13b0:	055e0100 	0x55e0100
    13b4:	00000025 	move	zero,zero
    13b8:	004017f0 	tge	v0,zero,0x5f
    13bc:	00000044 	0x44
    13c0:	023e9c01 	0x23e9c01
    13c4:	70130000 	madd	zero,s3
    13c8:	01000005 	0x1000005
    13cc:	005d205e 	0x5d205e
    13d0:	91020000 	lbu	v0,0(t0)
    13d4:	0ec51300 	jal	b144c00 <end+0xad3ac00>
    13d8:	5e010000 	0x5e010000
    13dc:	00005d2d 	0x5d2d
    13e0:	04910200 	bgezal	a0,1be4 <sigill_handler-0x3fe41c>
    13e4:	068b1200 	tltiu	s4,4608
    13e8:	5a010000 	0x5a010000
    13ec:	00002505 	0x2505
    13f0:	4017ac00 	0x4017ac00
    13f4:	00004400 	sll	t0,zero,0x10
    13f8:	779c0100 	jalx	e700400 <end+0xe2f6400>
    13fc:	13000002 	beqz	t8,1408 <sigill_handler-0x3febf8>
    1400:	00000570 	tge	zero,zero,0x15
    1404:	5d215a01 	0x5d215a01
    1408:	02000000 	0x2000000
    140c:	e2130091 	sc	s3,145(s0)
    1410:	01000005 	0x1000005
    1414:	02972f5a 	0x2972f5a
    1418:	91020000 	lbu	v0,0(t0)
    141c:	910b0004 	lbu	t3,4(t0)
    1420:	0c000002 	jal	8 <sigill_handler-0x3ffff8>
    1424:	0000005d 	0x5d
    1428:	00005d0c 	syscall	0x174
    142c:	014b0c00 	0x14b0c00
    1430:	910c0000 	lbu	t4,0(t0)
    1434:	00000002 	srl	zero,zero,0x0
    1438:	0070040d 	break	0x70,0x10
    143c:	040d0000 	0x40d0000
    1440:	00000277 	0x277
    1444:	00072112 	0x72112
    1448:	05560100 	0x5560100
    144c:	00000025 	move	zero,zero
    1450:	00401768 	0x401768
    1454:	00000044 	0x44
    1458:	02d69c01 	0x2d69c01
    145c:	70130000 	madd	zero,s3
    1460:	01000005 	0x1000005
    1464:	005d1856 	0x5d1856
    1468:	91020000 	lbu	v0,0(t0)
    146c:	69731400 	0x69731400
    1470:	56010067 	bnel	s0,at,1610 <sigill_handler-0x3fe9f0>
    1474:	00002523 	0x2523
    1478:	04910200 	bgezal	a0,1c7c <sigill_handler-0x3fe384>
    147c:	07b01200 	bltzal	sp,5c80 <sigill_handler-0x3fa380>
    1480:	52010000 	beql	s0,at,1484 <sigill_handler-0x3feb7c>
    1484:	00002505 	0x2505
    1488:	40171c00 	0x40171c00
    148c:	00004c00 	sll	t1,zero,0x10
    1490:	1e9c0100 	0x1e9c0100
    1494:	13000003 	beqz	t8,14a4 <sigill_handler-0x3feb5c>
    1498:	00000331 	tgeu	zero,zero,0xc
    149c:	251b5201 	addiu	k1,t0,20993
    14a0:	02000000 	0x2000000
    14a4:	d2130091 	0xd2130091
    14a8:	01000002 	0x1000002
    14ac:	031e3b52 	0x31e3b52
    14b0:	91020000 	lbu	v0,0(t0)
    14b4:	043c1304 	0x43c1304
    14b8:	52010000 	beql	s0,at,14bc <sigill_handler-0x3feb44>
    14bc:	00032455 	0x32455
    14c0:	08910200 	j	2440800 <end+0x2036800>
    14c4:	3b040d00 	xori	a0,t8,0xd00
    14c8:	0d000001 	jal	4000004 <end+0x3bf6004>
    14cc:	00011304 	0x11304
    14d0:	076a1200 	tlti	k1,4608
    14d4:	4e010000 	c3	0x10000
    14d8:	00002505 	0x2505
    14dc:	4016d000 	mfc0	s6,c0_errctl
    14e0:	00004c00 	sll	t1,zero,0x10
    14e4:	729c0100 	0x729c0100
    14e8:	13000003 	beqz	t8,14f8 <sigill_handler-0x3feb08>
    14ec:	0000042c 	0x42c
    14f0:	251d4e01 	addiu	sp,t0,19969
    14f4:	02000000 	0x2000000
    14f8:	89130091 	lwl	s3,145(t0)
    14fc:	01000002 	0x1000002
    1500:	0372354e 	0x372354e
    1504:	91020000 	lbu	v0,0(t0)
    1508:	046e1304 	tnei	v1,4868
    150c:	4e010000 	c3	0x10000
    1510:	00037847 	0x37847
    1514:	08910200 	j	2440800 <end+0x2036800>
    1518:	0e040d00 	jal	8103400 <end+0x7cf9400>
    151c:	0d000001 	jal	4000004 <end+0x3bf6004>
    1520:	00010204 	0x10204
    1524:	06421200 	bltzl	s2,5d28 <sigill_handler-0x3fa2d8>
    1528:	49010000 	bc2t	152c <sigill_handler-0x3fead4>
    152c:	00002505 	0x2505
    1530:	40168400 	0x40168400
    1534:	00004c00 	sll	t1,zero,0x10
    1538:	c59c0100 	lwc1	$f28,256(t4)
    153c:	14000003 	bnez	zero,154c <sigill_handler-0x3feab4>
    1540:	01006176 	tne	t0,zero,0x185
    1544:	015d1c49 	0x15d1c49
    1548:	91020000 	lbu	v0,0(t0)
    154c:	65641400 	0x65641400
    1550:	49010076 	bc2t	172c <sigill_handler-0x3fe8d4>
    1554:	00005d26 	0x5d26
    1558:	04910200 	bgezal	a0,1d5c <sigill_handler-0x3fe2a4>
    155c:	0009c713 	0x9c713
    1560:	31490100 	andi	t1,t2,0x100
    1564:	0000005d 	0x5d
    1568:	00089102 	srl	s2,t0,0x4
    156c:	00072e12 	0x72e12
    1570:	05440100 	0x5440100
    1574:	00000025 	move	zero,zero
    1578:	00401638 	0x401638
    157c:	0000004c 	syscall	0x1
    1580:	040c9c01 	teqi	zero,-25599
    1584:	76140000 	jalx	8500000 <end+0x80f6000>
    1588:	44010061 	0x44010061
    158c:	00015d1d 	0x15d1d
    1590:	00910200 	0x910200
    1594:	76656414 	jalx	9959050 <end+0x954f050>
    1598:	27440100 	addiu	a0,k0,256
    159c:	0000005d 	0x5d
    15a0:	13049102 	beq	t8,a0,fffe59ac <end+0xffbdb9ac>
    15a4:	000009c7 	0x9c7
    15a8:	5d324401 	0x5d324401
    15ac:	02000000 	0x2000000
    15b0:	15000891 	bnez	t0,37f8 <sigill_handler-0x3fc808>
    15b4:	00000746 	0x746
    15b8:	25054001 	addiu	a1,t0,16385
    15bc:	04000000 	bltz	zero,15c0 <sigill_handler-0x3fea40>
    15c0:	34004016 	li	zero,0x4016
    15c4:	01000000 	0x1000000
    15c8:	07d4129c 	0x7d4129c
    15cc:	3c010000 	lui	at,0x0
    15d0:	00002505 	0x2505
    15d4:	4015c800 	mfc0	s5,c0_perfcnt
    15d8:	00003c00 	sll	a3,zero,0x10
    15dc:	4c9c0100 	0x4c9c0100
    15e0:	13000004 	beqz	t8,15f4 <sigill_handler-0x3fea0c>
    15e4:	000002b7 	0x2b7
    15e8:	5d1c3c01 	0x5d1c3c01
    15ec:	02000001 	movf	zero,s0,$fcc0
    15f0:	12000091 	beqz	s0,1838 <sigill_handler-0x3fe7c8>
    15f4:	000006a1 	0x6a1
    15f8:	25053801 	addiu	a1,t0,14337
    15fc:	70000000 	madd	zero,zero
    1600:	58004015 	blezl	zero,11658 <sigill_handler-0x3ee9a8>
    1604:	01000000 	0x1000000
    1608:	0004a39c 	0x4a39c
    160c:	05701300 	bltzal	t3,6210 <sigill_handler-0x3f9df0>
    1610:	38010000 	xori	at,zero,0x0
    1614:	00005d20 	0x5d20
    1618:	00910200 	0x910200
    161c:	00040a13 	0x40a13
    1620:	2d380100 	sltiu	t8,t1,256
    1624:	0000005d 	0x5d
    1628:	13049102 	beq	t8,a0,fffe5a34 <end+0xffbdba34>
    162c:	0000077e 	0x77e
    1630:	5f403801 	bgtzl	k0,f638 <sigill_handler-0x3f09c8>
    1634:	02000001 	movf	zero,s0,$fcc0
    1638:	40130891 	0x40130891
    163c:	01000003 	0x1000003
    1640:	005d4d38 	0x5d4d38
    1644:	91020000 	lbu	v0,0(t0)
    1648:	1316000c 	beq	t8,s6,167c <sigill_handler-0x3fe984>
    164c:	01000007 	srav	zero,zero,t0
    1650:	15280633 	bne	t1,t0,2f20 <sigill_handler-0x3fd0e0>
    1654:	00480040 	0x480040
    1658:	9c010000 	0x9c010000
    165c:	000004d6 	0x4d6
    1660:	67736d14 	0x67736d14
    1664:	20330100 	addi	s3,at,256
    1668:	000004d6 	0x4d6
    166c:	17009102 	bnez	t8,fffe5a78 <end+0xffbdba78>
    1670:	34010072 	li	at,0x72
    1674:	00002506 	0x2506
    1678:	70910200 	0x70910200
    167c:	58040d00 	0x58040d00
    1680:	12000001 	beqz	s0,1688 <sigill_handler-0x3fe978>
    1684:	000006e6 	0x6e6
    1688:	25052f01 	addiu	a1,t0,12033
    168c:	e4000000 	swc1	$f0,0(zero)
    1690:	44004014 	0x44004014
    1694:	01000000 	0x1000000
    1698:	0005149c 	0x5149c
    169c:	05701300 	bltzal	t3,62a0 <sigill_handler-0x3f9d60>
    16a0:	2f010000 	sltiu	at,t8,0
    16a4:	00005d21 	0x5d21
    16a8:	00910200 	0x910200
    16ac:	00667414 	0x667414
    16b0:	913a2f01 	lbu	k0,12033(t1)
    16b4:	02000002 	0x2000002
    16b8:	12000491 	beqz	s0,2900 <sigill_handler-0x3fd700>
    16bc:	000006fc 	0x6fc
    16c0:	25052b01 	addiu	a1,t0,11009
    16c4:	a0000000 	sb	zero,0(zero)
    16c8:	44004014 	0x44004014
    16cc:	01000000 	0x1000000
    16d0:	00054d9c 	0x54d9c
    16d4:	05701300 	bltzal	t3,62d8 <sigill_handler-0x3f9d28>
    16d8:	2b010000 	slti	at,t8,0
    16dc:	00005d22 	0x5d22
    16e0:	00910200 	0x910200
    16e4:	0003ed13 	0x3ed13
    16e8:	2f2b0100 	sltiu	t3,t9,256
    16ec:	0000005d 	0x5d
    16f0:	00049102 	srl	s2,a0,0x4
    16f4:	0006b612 	0x6b612
    16f8:	05270100 	0x5270100
    16fc:	00000025 	move	zero,zero
    1700:	0040145c 	0x40145c
    1704:	00000044 	0x44
    1708:	05859c01 	0x5859c01
    170c:	70130000 	madd	zero,s3
    1710:	01000005 	0x1000005
    1714:	005d1d27 	0x5d1d27
    1718:	91020000 	lbu	v0,0(t0)
    171c:	61761400 	0x61761400
    1720:	2a270100 	slti	a3,s1,256
    1724:	0000015d 	0x15d
    1728:	00049102 	srl	s2,a0,0x4
    172c:	0006d612 	0x6d612
    1730:	05230100 	bgezl	t1,1b34 <sigill_handler-0x3fe4cc>
    1734:	00000025 	move	zero,zero
    1738:	004013fc 	0x4013fc
    173c:	00000060 	0x60
    1740:	05eb9c01 	tltiu	t7,-25599
    1744:	40130000 	mfc0	s3,c0_index
    1748:	01000007 	srav	zero,zero,t0
    174c:	005d1b23 	0x5d1b23
    1750:	91020000 	lbu	v0,0(t0)
    1754:	077e1300 	0x77e1300
    1758:	23010000 	addi	at,t8,0
    175c:	00015d28 	0x15d28
    1760:	04910200 	bgezal	a0,1f64 <sigill_handler-0x3fe09c>
    1764:	00076413 	0x76413
    1768:	35230100 	ori	v1,t1,0x100
    176c:	0000005d 	0x5d
    1770:	13089102 	beq	t8,t0,fffe5b7c <end+0xffbdbb7c>
    1774:	000002b7 	0x2b7
    1778:	5d422301 	0x5d422301
    177c:	02000001 	movf	zero,s0,$fcc0
    1780:	40130c91 	0x40130c91
    1784:	01000003 	0x1000003
    1788:	005d4f23 	0x5d4f23
    178c:	91020000 	lbu	v0,0(t0)
    1790:	84120010 	lh	s2,16(zero)
    1794:	01000007 	srav	zero,zero,t0
    1798:	0025051f 	0x25051f
    179c:	13b00000 	beq	sp,s0,17a0 <sigill_handler-0x3fe860>
    17a0:	004c0040 	0x4c0040
    17a4:	9c010000 	0x9c010000
    17a8:	00000632 	tlt	zero,zero,0x18
    17ac:	00057013 	0x57013
    17b0:	1d1f0100 	0x1d1f0100
    17b4:	0000005d 	0x5d
    17b8:	14009102 	bnez	zero,fffe5bc4 <end+0xffbdbbc4>
    17bc:	01006176 	tne	t0,zero,0x185
    17c0:	015d2a1f 	0x15d2a1f
    17c4:	91020000 	lbu	v0,0(t0)
    17c8:	03401304 	0x3401304
    17cc:	1f010000 	0x1f010000
    17d0:	00005d34 	teq	zero,zero,0x174
    17d4:	08910200 	j	2440800 <end+0x2036800>
    17d8:	07961200 	0x7961200
    17dc:	1b010000 	0x1b010000
    17e0:	00002505 	0x2505
    17e4:	40136c00 	0x40136c00
    17e8:	00004400 	sll	t0,zero,0x10
    17ec:	6b9c0100 	0x6b9c0100
    17f0:	13000006 	beqz	t8,180c <sigill_handler-0x3fe7f4>
    17f4:	00000570 	tge	zero,zero,0x15
    17f8:	5d251b01 	0x5d251b01
    17fc:	02000000 	0x2000000
    1800:	e2130091 	sc	s3,145(s0)
    1804:	01000005 	0x1000005
    1808:	0676331b 	0x676331b
    180c:	91020000 	lbu	v0,0(t0)
    1810:	760b0004 	jalx	82c0010 <end+0x7eb6010>
    1814:	0c000006 	jal	18 <sigill_handler-0x3fffe8>
    1818:	00000291 	0x291
    181c:	6b040d00 	0x6b040d00
    1820:	12000006 	beqz	s0,183c <sigill_handler-0x3fe7c4>
    1824:	00000677 	0x677
    1828:	25051701 	addiu	a1,t0,5889
    182c:	30000000 	andi	zero,zero,0x0
    1830:	3c004013 	lui	zero,0x4013
    1834:	01000000 	0x1000000
    1838:	0006a69c 	0x6a69c
    183c:	05701300 	bltzal	t3,6440 <sigill_handler-0x3f9bc0>
    1840:	17010000 	bne	t8,at,1844 <sigill_handler-0x3fe7bc>
    1844:	00005d1f 	0x5d1f
    1848:	00910200 	0x910200
    184c:	06c81800 	tgei	s6,6144
    1850:	13010000 	beq	t8,at,1854 <sigill_handler-0x3fe7ac>
    1854:	4012f806 	mfc0	s2,$31,6
    1858:	00003800 	sll	a3,zero,0x0
    185c:	159c0100 	bne	t4,gp,1c60 <sigill_handler-0x3fe3a0>
    1860:	00000653 	0x653
    1864:	5d070f01 	0x5d070f01
    1868:	c4000000 	lwc1	$f0,0(zero)
    186c:	34004012 	li	zero,0x4012
    1870:	01000000 	0x1000000
    1874:	0664129c 	0x664129c
    1878:	0b010000 	j	c040000 <end+0xbc36000>
    187c:	00002505 	0x2505
    1880:	40128000 	mfc0	s2,c0_config
    1884:	00004400 	sll	t0,zero,0x10
    1888:	079c0100 	0x79c0100
    188c:	14000007 	bnez	zero,18ac <sigill_handler-0x3fe754>
    1890:	00727473 	tltu	v1,s2,0x1d1
    1894:	5f240b01 	0x5f240b01
    1898:	02000001 	movf	zero,s0,$fcc0
    189c:	6e140091 	0x6e140091
    18a0:	01006d75 	0x1006d75
    18a4:	005d2f0b 	0x5d2f0b
    18a8:	91020000 	lbu	v0,0(t0)
    18ac:	54190004 	bnel	zero,t9,18c0 <sigill_handler-0x3fe740>
    18b0:	01000007 	srav	zero,zero,t0
    18b4:	12400607 	beqz	s2,30d4 <sigill_handler-0x3fcf2c>
    18b8:	00400040 	0x400040
    18bc:	9c010000 	0x9c010000
    18c0:	00686314 	0x686314
    18c4:	251a0701 	addiu	k0,t0,1793
    18c8:	02000000 	0x2000000
    18cc:	00000091 	0x91
    18d0:	000003d6 	0x3d6
    18d4:	07bd0004 	0x7bd0004
    18d8:	01040000 	0x1040000
    18dc:	00000090 	0x90
    18e0:	0007ff0c 	syscall	0x1ffc
    18e4:	00004900 	sll	t1,zero,0x4
    18e8:	40184000 	mfc0	t8,c0_badvaddr
    18ec:	00016400 	sll	t4,at,0x10
    18f0:	0007dc00 	sll	k1,a3,0x10
    18f4:	05040200 	0x5040200
    18f8:	00746e69 	0x746e69
    18fc:	2d070403 	sltiu	a3,t0,1027
    1900:	03000000 	0x3000000
    1904:	00730601 	0x730601
    1908:	02030000 	0x2030000
    190c:	0001ac05 	0x1ac05
    1910:	05080300 	tgei	t0,768
    1914:	00000000 	nop
    1918:	71080103 	0x71080103
    191c:	03000000 	0x3000000
    1920:	018c0702 	0x18c0702
    1924:	08030000 	j	c0000 <sigill_handler-0x340000>
    1928:	00002307 	0x2307
    192c:	001d0400 	sll	zero,sp,0x10
    1930:	09020000 	j	4080000 <end+0x3c76000>
    1934:	00002c16 	0x2c16
    1938:	04750400 	0x4750400
    193c:	0a020000 	j	8080000 <end+0x7c76000>
    1940:	00007517 	0x7517
    1944:	07040300 	0x7040300
    1948:	00000028 	0x28
    194c:	65645005 	0x65645005
    1950:	10970600 	beq	a0,s7,3154 <sigill_handler-0x3fceac>
    1954:	00000069 	0x69
    1958:	00041506 	0x41506
    195c:	08039800 	j	e6000 <sigill_handler-0x31a000>
    1960:	0000ef08 	0xef08
    1964:	04320700 	bltzall	at,3568 <sigill_handler-0x3fca98>
    1968:	0a030000 	j	80c0000 <end+0x7cb6000>
    196c:	0000ef10 	0xef10
    1970:	e9070000 	swc2	$7,0(t0)
    1974:	03000003 	0x3000003
    1978:	0075100d 	break	0x75,0x40
    197c:	08800000 	j	2000000 <end+0x1bf6000>
    1980:	03006968 	0x3006968
    1984:	0075100e 	0x75100e
    1988:	08840000 	j	2100000 <end+0x1cf6000>
    198c:	03006f6c 	0x3006f6c
    1990:	0075100f 	0x75100f
    1994:	07880000 	tgei	gp,0
    1998:	0000028f 	sync	0xa
    199c:	75101003 	jalx	440400c <end+0x3ffa00c>
    19a0:	8c000000 	lw	zero,0(zero)
    19a4:	00026807 	srav	t5,v0,zero
    19a8:	10110300 	beq	zero,s1,25ac <sigill_handler-0x3fda54>
    19ac:	00000075 	0x75
    19b0:	02d90790 	0x2d90790
    19b4:	12030000 	beq	s0,v1,19b8 <sigill_handler-0x3fe648>
    19b8:	00007510 	0x7510
    19bc:	09009400 	j	4025000 <end+0x3c1b000>
    19c0:	00000075 	0x75
    19c4:	000000ff 	0xff
    19c8:	00002c0a 	0x2c0a
    19cc:	06001f00 	bltz	s0,95d0 <sigill_handler-0x3f6a30>
    19d0:	0000007f 	0x7f
    19d4:	10060404 	beq	zero,a2,29e8 <sigill_handler-0x3fd618>
    19d8:	0000011a 	0x11a
    19dc:	67697308 	0x67697308
    19e0:	0b070400 	j	c1c1000 <end+0xbdb7000>
    19e4:	0000005d 	0x5d
    19e8:	7f040000 	0x7f040000
    19ec:	04000000 	bltz	zero,19f0 <sigill_handler-0x3fe610>
    19f0:	00ff0308 	0xff0308
    19f4:	8c060000 	lw	a2,0(zero)
    19f8:	08000005 	j	14 <sigill_handler-0x3fffec>
    19fc:	4e080a04 	c3	0x80a04
    1a00:	07000001 	bltz	t8,1a08 <sigill_handler-0x3fe5f8>
    1a04:	000001b6 	tne	zero,zero,0x6
    1a08:	59100b04 	0x59100b04
    1a0c:	00000001 	movf	zero,zero,$fcc0
    1a10:	00008807 	srav	s1,zero,zero
    1a14:	100c0400 	beq	zero,t4,2a18 <sigill_handler-0x3fd5e8>
    1a18:	0000011a 	0x11a
    1a1c:	590b0004 	0x590b0004
    1a20:	0c000001 	jal	4 <sigill_handler-0x3ffffc>
    1a24:	00000025 	move	zero,zero
    1a28:	4e040d00 	c3	0x40d00
    1a2c:	0e000001 	jal	8000004 <end+0x7bf6004>
    1a30:	02170508 	0x2170508
    1a34:	00000183 	sra	zero,zero,0x6
    1a38:	0003ca07 	0x3ca07
    1a3c:	02170500 	0x2170500
    1a40:	000002ba 	0x2ba
    1a44:	03a90700 	0x3a90700
    1a48:	17050000 	bne	t8,a1,1a4c <sigill_handler-0x3fe5b4>
    1a4c:	0002c002 	srl	t8,v0,0x0
    1a50:	0f000400 	jal	c001000 <end+0xbbf7000>
    1a54:	00766e45 	0x766e45
    1a58:	150501f8 	bne	t0,a1,223c <sigill_handler-0x3fddc4>
    1a5c:	0002b008 	0x2b008
    1a60:	03b10700 	0x3b10700
    1a64:	16050000 	bne	s0,a1,1a68 <sigill_handler-0x3fe598>
    1a68:	00008813 	0x8813
    1a6c:	70070000 	madd	zero,a3
    1a70:	05000003 	bltz	t0,1a80 <sigill_handler-0x3fe580>
    1a74:	015f1217 	0x15f1217
    1a78:	07980000 	0x7980000
    1a7c:	000002a8 	0x2a8
    1a80:	5d081805 	0x5d081805
    1a84:	a0000000 	sb	zero,0(zero)
    1a88:	00035c07 	0x35c07
    1a8c:	08190500 	j	641400 <end+0x237400>
    1a90:	0000005d 	0x5d
    1a94:	03f407a4 	0x3f407a4
    1a98:	1a050000 	0x1a050000
    1a9c:	00005d08 	0x5d08
    1aa0:	cb07a800 	lwc2	$7,-22528(t8)
    1aa4:	05000005 	bltz	t0,1abc <sigill_handler-0x3fe544>
    1aa8:	005d081b 	0x5d081b
    1aac:	07ac0000 	teqi	sp,0
    1ab0:	00000396 	0x396
    1ab4:	ea071c05 	swc2	$7,7173(s0)
    1ab8:	b0000002 	0xb0000002
    1abc:	00034507 	0x34507
    1ac0:	131d0500 	beq	t8,sp,2ec4 <sigill_handler-0x3fd13c>
    1ac4:	000002c6 	0x2c6
    1ac8:	030b07b4 	teq	t8,t3,0x1e
    1acc:	1e050000 	0x1e050000
    1ad0:	00005d08 	0x5d08
    1ad4:	0207bc00 	0x207bc00
    1ad8:	05000004 	bltz	t0,1aec <sigill_handler-0x3fe514>
    1adc:	005d0821 	addu	at,v0,sp
    1ae0:	07c00000 	bltz	s8,1ae4 <sigill_handler-0x3fe51c>
    1ae4:	0000041f 	0x41f
    1ae8:	5d082205 	0x5d082205
    1aec:	c4000000 	lwc1	$f0,0(zero)
    1af0:	0002e107 	0x2e107
    1af4:	08230500 	j	8c1400 <end+0x4b7400>
    1af8:	0000005d 	0x5d
    1afc:	02af07c8 	0x2af07c8
    1b00:	24050000 	li	a1,0
    1b04:	00005d08 	0x5d08
    1b08:	3807cc00 	xori	a3,zero,0xcc00
    1b0c:	05000003 	bltz	t0,1b1c <sigill_handler-0x3fe4e4>
    1b10:	005d0825 	or	at,v0,sp
    1b14:	07d00000 	bltzal	s8,1b18 <sigill_handler-0x3fe4e8>
    1b18:	00000272 	tlt	zero,zero,0x9
    1b1c:	5d082805 	0x5d082805
    1b20:	d4000000 	ldc1	$f0,0(zero)
    1b24:	00044d07 	0x44d07
    1b28:	082b0500 	j	ac1400 <end+0x6b7400>
    1b2c:	0000005d 	0x5d
    1b30:	036507d8 	0x36507d8
    1b34:	2e050000 	sltiu	a1,s0,0
    1b38:	00011a0b 	0x11a0b
    1b3c:	7907dc00 	0x7907dc00
    1b40:	05000003 	bltz	t0,1b50 <sigill_handler-0x3fe4b0>
    1b44:	011a0b2f 	0x11a0b2f
    1b48:	07e00000 	bltz	ra,1b4c <sigill_handler-0x3fe4b4>
    1b4c:	00000321 	0x321
    1b50:	1a0b3005 	0x1a0b3005
    1b54:	e4000001 	swc1	$f0,1(zero)
    1b58:	00048a07 	0x48a07
    1b5c:	08310500 	j	c41400 <end+0x837400>
    1b60:	0000005d 	0x5d
    1b64:	038907e8 	0x38907e8
    1b68:	32050000 	andi	a1,s0,0x0
    1b6c:	00005d08 	0x5d08
    1b70:	1307ec00 	beq	t8,a3,ffffcb74 <end+0xffbf2b74>
    1b74:	05000003 	bltz	t0,1b84 <sigill_handler-0x3fe47c>
    1b78:	02f01333 	tltu	s7,s0,0x4c
    1b7c:	00f00000 	0xf00000
    1b80:	00018310 	0x18310
    1b84:	02b01100 	0x2b01100
    1b88:	040d0000 	0x40d0000
    1b8c:	00000183 	sra	zero,zero,0x6
    1b90:	02ba040d 	break	0x2ba,0x10
    1b94:	080e0000 	j	380000 <sigill_handler-0x80000>
    1b98:	ea021d05 	swc2	$2,7429(s0)
    1b9c:	07000002 	bltz	t8,1ba8 <sigill_handler-0x3fe458>
    1ba0:	000003b8 	0x3b8
    1ba4:	ba021d05 	swr	v0,7429(s0)
    1ba8:	00000002 	srl	zero,zero,0x0
    1bac:	0003a007 	srav	s4,v1,zero
    1bb0:	021d0500 	0x21d0500
    1bb4:	000002c0 	sll	zero,zero,0xb
    1bb8:	040d0004 	0x40d0004
    1bbc:	0000007c 	0x7c
    1bc0:	00012609 	0x12609
    1bc4:	00030000 	sll	zero,v1,0x0
    1bc8:	002c0a00 	0x2c0a00
    1bcc:	00200000 	0x200000
    1bd0:	7a060103 	0x7a060103
    1bd4:	12000000 	beqz	s0,1bd8 <sigill_handler-0x3fe428>
    1bd8:	0f040d04 	jal	c103410 <end+0xbcf9410>
    1bdc:	13000003 	beqz	t8,1bec <sigill_handler-0x3fe414>
    1be0:	766e6514 	jalx	9b99450 <end+0x978f450>
    1be4:	23130700 	addi	s3,t8,1792
    1be8:	0000031c 	0x31c
    1bec:	02b5040d 	break	0x2b5,0x10
    1bf0:	a1150000 	sb	s5,0(t0)
    1bf4:	01000004 	sllv	zero,zero,t0
    1bf8:	005d0718 	0x5d0718
    1bfc:	18e80000 	0x18e80000
    1c00:	00bc0040 	0xbc0040
    1c04:	9c010000 	0x9c010000
    1c08:	00000377 	0x377
    1c0c:	0007fa16 	0x7fa16
    1c10:	17180100 	bne	t8,t8,2014 <sigill_handler-0x3fdfec>
    1c14:	00000377 	0x377
    1c18:	16009102 	bnez	s0,fffe6024 <end+0xffbdc024>
    1c1c:	000002b7 	0x2b7
    1c20:	07231801 	bgezl	t9,7c28 <sigill_handler-0x3f83d8>
    1c24:	02000003 	0x2000003
    1c28:	40160491 	0x40160491
    1c2c:	01000003 	0x1000003
    1c30:	03773118 	0x3773118
    1c34:	91020000 	lbu	v0,0(t0)
    1c38:	00721708 	0x721708
    1c3c:	25061901 	addiu	a2,t0,6401
    1c40:	02000000 	0x2000000
    1c44:	0d007091 	jal	401c244 <end+0x3c12244>
    1c48:	00005d04 	0x5d04
    1c4c:	08091800 	j	246000 <sigill_handler-0x1ba000>
    1c50:	0c010000 	jal	40000 <sigill_handler-0x3c0000>
    1c54:	40184006 	mfc0	t8,$8,6
    1c58:	0000a800 	sll	s5,zero,0x0
    1c5c:	169c0100 	bne	s4,gp,2060 <sigill_handler-0x3fdfa0>
    1c60:	000007fa 	0x7fa
    1c64:	5d150c01 	0x5d150c01
    1c68:	02000000 	0x2000000
    1c6c:	76190091 	jalx	8640244 <end+0x8236244>
    1c70:	01006c61 	0x1006c61
    1c74:	005d210c 	syscall	0x17484
    1c78:	91020000 	lbu	v0,0(t0)
    1c7c:	077e1604 	0x77e1604
    1c80:	0c010000 	jal	40000 <sigill_handler-0x3c0000>
    1c84:	00030932 	tlt	zero,v1,0x24
    1c88:	08910200 	j	2440800 <end+0x2036800>
    1c8c:	00034016 	0x34016
    1c90:	3f0c0100 	0x3f0c0100
    1c94:	0000005d 	0x5d
    1c98:	170c9102 	bne	t8,t4,fffe60a4 <end+0xffbdc0a4>
    1c9c:	0d010072 	jal	40401c8 <end+0x3c361c8>
    1ca0:	00002506 	0x2506
    1ca4:	70910200 	0x70910200
    1ca8:	0a980000 	j	a600000 <end+0xa1f6000>
    1cac:	00040000 	sll	zero,a0,0x0
    1cb0:	0000091b 	0x91b
    1cb4:	00900104 	0x900104
    1cb8:	bf0c0000 	cache	0xc,0(t8)
    1cbc:	49000008 	bc2f	1ce0 <sigill_handler-0x3fe320>
    1cc0:	b0000000 	0xb0000000
    1cc4:	e4004019 	swc1	$f0,16409(zero)
    1cc8:	a700000b 	sh	zero,11(t8)
    1ccc:	02000008 	jr	s0
    1cd0:	6e690504 	0x6e690504
    1cd4:	04030074 	bgezl	zero,1ea8 <sigill_handler-0x3fe158>
    1cd8:	00002d07 	0x2d07
    1cdc:	06010300 	bgez	s0,28e0 <sigill_handler-0x3fd720>
    1ce0:	00000073 	tltu	zero,zero,0x1
    1ce4:	ac050203 	sw	a1,515(zero)
    1ce8:	03000001 	movf	zero,t8,$fcc0
    1cec:	00000508 	0x508
    1cf0:	01030000 	0x1030000
    1cf4:	00007108 	0x7108
    1cf8:	07020300 	bltzl	t8,28fc <sigill_handler-0x3fd704>
    1cfc:	0000018c 	syscall	0x6
    1d00:	23070803 	addi	a3,t8,2051
    1d04:	04000000 	bltz	zero,1d08 <sigill_handler-0x3fe2f8>
    1d08:	0000001d 	0x1d
    1d0c:	2c160902 	sltiu	s6,zero,2306
    1d10:	04000000 	bltz	zero,1d14 <sigill_handler-0x3fe2ec>
    1d14:	00000475 	0x475
    1d18:	75170a02 	jalx	45c2808 <end+0x41b8808>
    1d1c:	03000000 	0x3000000
    1d20:	00280704 	0x280704
    1d24:	50050000 	beql	zero,a1,1d28 <sigill_handler-0x3fe2d8>
    1d28:	03006564 	0x3006564
    1d2c:	00691097 	0x691097
    1d30:	50050000 	beql	zero,a1,1d34 <sigill_handler-0x3fe2cc>
    1d34:	03006574 	teq	t8,zero,0x195
    1d38:	00691098 	0x691098
    1d3c:	15060000 	bne	t0,a2,1d40 <sigill_handler-0x3fe2c0>
    1d40:	98000004 	lwr	zero,4(zero)
    1d44:	fb080804 	sdc2	$8,2052(t8)
    1d48:	07000000 	bltz	t8,1d4c <sigill_handler-0x3fe2b4>
    1d4c:	00000432 	tlt	zero,zero,0x10
    1d50:	fb100a04 	sdc2	$16,2564(t8)
    1d54:	00000000 	nop
    1d58:	0003e907 	0x3e907
    1d5c:	100d0400 	beq	zero,t5,2d60 <sigill_handler-0x3fd2a0>
    1d60:	00000075 	0x75
    1d64:	69680880 	0x69680880
    1d68:	100e0400 	beq	zero,t6,2d6c <sigill_handler-0x3fd294>
    1d6c:	00000075 	0x75
    1d70:	6f6c0884 	0x6f6c0884
    1d74:	100f0400 	beq	zero,t7,2d78 <sigill_handler-0x3fd288>
    1d78:	00000075 	0x75
    1d7c:	028f0788 	0x28f0788
    1d80:	10040000 	beq	zero,a0,1d84 <sigill_handler-0x3fe27c>
    1d84:	00007510 	0x7510
    1d88:	68078c00 	0x68078c00
    1d8c:	04000002 	bltz	zero,1d98 <sigill_handler-0x3fe268>
    1d90:	00751011 	0x751011
    1d94:	07900000 	bltzal	gp,1d98 <sigill_handler-0x3fe268>
    1d98:	000002d9 	0x2d9
    1d9c:	75101204 	jalx	4404810 <end+0x3ffa810>
    1da0:	94000000 	lhu	zero,0(zero)
    1da4:	00750900 	0x750900
    1da8:	010b0000 	0x10b0000
    1dac:	2c0a0000 	sltiu	t2,zero,0
    1db0:	1f000000 	bgtz	t8,1db4 <sigill_handler-0x3fe24c>
    1db4:	007f0600 	0x7f0600
    1db8:	05040000 	0x5040000
    1dbc:	01261006 	srlv	v0,a2,t1
    1dc0:	73080000 	madd	t8,t0
    1dc4:	05006769 	bltz	t0,1bb6c <sigill_handler-0x3e4494>
    1dc8:	005d0b07 	0x5d0b07
    1dcc:	00000000 	nop
    1dd0:	00007f04 	0x7f04
    1dd4:	03080500 	0x3080500
    1dd8:	0000010b 	0x10b
    1ddc:	00058c06 	0x58c06
    1de0:	0a050800 	j	8142000 <end+0x7d38000>
    1de4:	00015a08 	0x15a08
    1de8:	01b60700 	0x1b60700
    1dec:	0b050000 	j	c140000 <end+0xbd36000>
    1df0:	00016510 	0x16510
    1df4:	88070000 	lwl	a3,0(zero)
    1df8:	05000000 	bltz	t0,1dfc <sigill_handler-0x3fe204>
    1dfc:	0126100c 	syscall	0x49840
    1e00:	00040000 	sll	zero,a0,0x0
    1e04:	0001650b 	0x1650b
    1e08:	00250c00 	0x250c00
    1e0c:	0d000000 	jal	4000000 <end+0x3bf6000>
    1e10:	00015a04 	0x15a04
    1e14:	06080e00 	tgei	s0,3584
    1e18:	018f0217 	0x18f0217
    1e1c:	ca070000 	lwc2	$7,0(s0)
    1e20:	06000003 	bltz	s0,1e30 <sigill_handler-0x3fe1d0>
    1e24:	02c60217 	0x2c60217
    1e28:	07000000 	bltz	t8,1e2c <sigill_handler-0x3fe1d4>
    1e2c:	000003a9 	0x3a9
    1e30:	cc021706 	pref	0x2,5894(zero)
    1e34:	04000002 	bltz	zero,1e40 <sigill_handler-0x3fe1c0>
    1e38:	6e450f00 	0x6e450f00
    1e3c:	01f80076 	tne	t7,t8,0x1
    1e40:	bc081506 	cache	0x8,5382(zero)
    1e44:	07000002 	bltz	t8,1e50 <sigill_handler-0x3fe1b0>
    1e48:	000003b1 	tgeu	zero,zero,0xe
    1e4c:	94131606 	lhu	s3,5638(zero)
    1e50:	00000000 	nop
    1e54:	00037007 	srav	t6,v1,zero
    1e58:	12170600 	beq	s0,s7,365c <sigill_handler-0x3fc9a4>
    1e5c:	0000016b 	0x16b
    1e60:	02a80798 	0x2a80798
    1e64:	18060000 	0x18060000
    1e68:	00005d08 	0x5d08
    1e6c:	5c07a000 	0x5c07a000
    1e70:	06000003 	bltz	s0,1e80 <sigill_handler-0x3fe180>
    1e74:	005d0819 	0x5d0819
    1e78:	07a40000 	0x7a40000
    1e7c:	000003f4 	teq	zero,zero,0xf
    1e80:	5d081a06 	0x5d081a06
    1e84:	a8000000 	swl	zero,0(zero)
    1e88:	0005cb07 	0x5cb07
    1e8c:	081b0600 	j	6c1800 <end+0x2b7800>
    1e90:	0000005d 	0x5d
    1e94:	039607ac 	0x39607ac
    1e98:	1c060000 	0x1c060000
    1e9c:	0002f607 	0x2f607
    1ea0:	4507b000 	bc1tl	$fcc1,fffedea4 <end+0xffbe3ea4>
    1ea4:	06000003 	bltz	s0,1eb4 <sigill_handler-0x3fe14c>
    1ea8:	02d2131d 	0x2d2131d
    1eac:	07b40000 	0x7b40000
    1eb0:	0000030b 	0x30b
    1eb4:	5d081e06 	0x5d081e06
    1eb8:	bc000000 	cache	0x0,0(zero)
    1ebc:	00040207 	0x40207
    1ec0:	08210600 	j	841800 <end+0x437800>
    1ec4:	0000005d 	0x5d
    1ec8:	041f07c0 	0x41f07c0
    1ecc:	22060000 	addi	a2,s0,0
    1ed0:	00005d08 	0x5d08
    1ed4:	e107c400 	sc	a3,-15360(t0)
    1ed8:	06000002 	bltz	s0,1ee4 <sigill_handler-0x3fe11c>
    1edc:	005d0823 	subu	at,v0,sp
    1ee0:	07c80000 	tgei	s8,0
    1ee4:	000002af 	0x2af
    1ee8:	5d082406 	0x5d082406
    1eec:	cc000000 	pref	0x0,0(zero)
    1ef0:	00033807 	srav	a3,v1,zero
    1ef4:	08250600 	j	941800 <end+0x537800>
    1ef8:	0000005d 	0x5d
    1efc:	027207d0 	0x27207d0
    1f00:	28060000 	slti	a2,zero,0
    1f04:	00005d08 	0x5d08
    1f08:	4d07d400 	0x4d07d400
    1f0c:	06000004 	bltz	s0,1f20 <sigill_handler-0x3fe0e0>
    1f10:	005d082b 	sltu	at,v0,sp
    1f14:	07d80000 	0x7d80000
    1f18:	00000365 	0x365
    1f1c:	260b2e06 	addiu	t3,s0,11782
    1f20:	dc000001 	0xdc000001
    1f24:	00037907 	0x37907
    1f28:	0b2f0600 	j	cbc1800 <end+0xc7b7800>
    1f2c:	00000126 	0x126
    1f30:	032107e0 	0x32107e0
    1f34:	30060000 	andi	a2,zero,0x0
    1f38:	0001260b 	0x1260b
    1f3c:	8a07e400 	lwl	a3,-7168(s0)
    1f40:	06000004 	bltz	s0,1f54 <sigill_handler-0x3fe0ac>
    1f44:	005d0831 	tgeu	v0,sp,0x20
    1f48:	07e80000 	tgei	ra,0
    1f4c:	00000389 	0x389
    1f50:	5d083206 	0x5d083206
    1f54:	ec000000 	0xec000000
    1f58:	00031307 	0x31307
    1f5c:	13330600 	beq	t9,s3,3760 <sigill_handler-0x3fc8a0>
    1f60:	000002fc 	0x2fc
    1f64:	8f1000f0 	lw	s0,240(t8)
    1f68:	11000001 	beqz	t0,1f70 <sigill_handler-0x3fe090>
    1f6c:	000002bc 	0x2bc
    1f70:	018f040d 	break	0x18f,0x10
    1f74:	040d0000 	0x40d0000
    1f78:	000002c6 	0x2c6
    1f7c:	1d06080e 	0x1d06080e
    1f80:	0002f602 	srl	s8,v0,0x18
    1f84:	03b80700 	0x3b80700
    1f88:	1d060000 	0x1d060000
    1f8c:	0002c602 	srl	t8,v0,0x18
    1f90:	a0070000 	sb	a3,0(zero)
    1f94:	06000003 	bltz	s0,1fa4 <sigill_handler-0x3fe05c>
    1f98:	02cc021d 	0x2cc021d
    1f9c:	00040000 	sll	zero,a0,0x0
    1fa0:	007c040d 	break	0x7c,0x10
    1fa4:	32090000 	andi	t1,s0,0x0
    1fa8:	0c000001 	jal	4 <sigill_handler-0x3ffffc>
    1fac:	0a000003 	j	800000c <end+0x7bf600c>
    1fb0:	0000002c 	0x2c
    1fb4:	1c090020 	0x1c090020
    1fb8:	1c000003 	bgtz	zero,1fc8 <sigill_handler-0x3fe038>
    1fbc:	0a000003 	j	800000c <end+0x7bf600c>
    1fc0:	0000002c 	0x2c
    1fc4:	0103007f 	0x103007f
    1fc8:	00007a06 	0x7a06
    1fcc:	031c1000 	0x31c1000
    1fd0:	44120000 	mfc1	s2,$f0
    1fd4:	1c007665 	bgtz	zero,1f96c <sigill_handler-0x3e0694>
    1fd8:	91081807 	lbu	t0,6151(t0)
    1fdc:	07000003 	bltz	t8,1fec <sigill_handler-0x3fe014>
    1fe0:	0000087e 	0x87e
    1fe4:	25061907 	addiu	a2,t0,6407
    1fe8:	00000000 	nop
    1fec:	00088507 	0x88507
    1ff0:	081a0700 	j	681c00 <end+0x277c00>
    1ff4:	00000391 	0x391
    1ff8:	08c80704 	j	3201c10 <end+0x2df7c10>
    1ffc:	1b070000 	0x1b070000
    2000:	0003f108 	0x3f108
    2004:	8e070800 	lw	a3,2048(s0)
    2008:	07000008 	bltz	t8,202c <sigill_handler-0x3fdfd4>
    200c:	041c081c 	0x41c081c
    2010:	070c0000 	teqi	t8,0
    2014:	00000863 	0x863
    2018:	31081d07 	andi	t0,t0,0x1d07
    201c:	10000004 	b	2030 <sigill_handler-0x3fdfd0>
    2020:	0008ef07 	0x8ef07
    2024:	081e0700 	j	781c00 <end+0x377c00>
    2028:	00000493 	0x493
    202c:	082e0714 	j	b81c50 <end+0x777c50>
    2030:	1f070000 	0x1f070000
    2034:	0004ad08 	0x4ad08
    2038:	0d001800 	jal	4006000 <end+0x3bfc000>
    203c:	00031c04 	0x31c04
    2040:	00251300 	0x251300
    2044:	03b50000 	0x3b50000
    2048:	b50c0000 	0xb50c0000
    204c:	0c000003 	jal	c <sigill_handler-0x3ffff4>
    2050:	000003ef 	0x3ef
    2054:	00005d0c 	syscall	0x174
    2058:	005d0c00 	0x5d0c00
    205c:	0d000000 	jal	4000000 <end+0x3bf6000>
    2060:	0003bb04 	0x3bb04
    2064:	64461200 	0x64461200
    2068:	23070c00 	addi	a3,t8,3072
    206c:	0003ef08 	0x3ef08
    2070:	087b0700 	j	1ec1c00 <end+0x1ab7c00>
    2074:	24070000 	li	a3,0
    2078:	00005d08 	0x5d08
    207c:	05070000 	0x5070000
    2080:	07000009 	bltz	t8,20a8 <sigill_handler-0x3fdf58>
    2084:	005d0825 	or	at,v0,sp
    2088:	07040000 	0x7040000
    208c:	000008d9 	0x8d9
    2090:	5d082607 	0x5d082607
    2094:	08000000 	j	0 <sigill_handler-0x400000>
    2098:	0d041400 	jal	4105000 <end+0x3cfb000>
    209c:	00039704 	0x39704
    20a0:	00251300 	0x251300
    20a4:	04150000 	0x4150000
    20a8:	b50c0000 	0xb50c0000
    20ac:	0c000003 	jal	c <sigill_handler-0x3ffff4>
    20b0:	00000415 	0x415
    20b4:	00005d0c 	syscall	0x174
    20b8:	005d0c00 	0x5d0c00
    20bc:	0d000000 	jal	4000000 <end+0x3bf6000>
    20c0:	00041b04 	0x41b04
    20c4:	040d1500 	0x40d1500
    20c8:	000003f7 	0x3f7
    20cc:	00002513 	0x2513
    20d0:	00043100 	sll	a2,a0,0x4
    20d4:	03b50c00 	0x3b50c00
    20d8:	0d000000 	jal	4000000 <end+0x3bf6000>
    20dc:	00042204 	0x42204
    20e0:	00251300 	0x251300
    20e4:	044b0000 	tltiu	v0,0
    20e8:	b50c0000 	0xb50c0000
    20ec:	0c000003 	jal	c <sigill_handler-0x3ffff4>
    20f0:	0000044b 	0x44b
    20f4:	51040d00 	beql	t0,a0,54f8 <sigill_handler-0x3fab08>
    20f8:	06000004 	bltz	s0,210c <sigill_handler-0x3fdef4>
    20fc:	0000086d 	0x86d
    2100:	082a078c 	j	a81e30 <end+0x677e30>
    2104:	00000493 	0x493
    2108:	0008d107 	0x8d107
    210c:	072b0700 	tltiu	t9,1792
    2110:	0000030c 	syscall	0xc
    2114:	08980700 	j	2601c00 <end+0x21f7c00>
    2118:	2c070000 	sltiu	a3,zero,0
    211c:	00005d08 	0x5d08
    2120:	0f078000 	jal	c1e0000 <end+0xbdd6000>
    2124:	07000009 	bltz	t8,214c <sigill_handler-0x3fdeb4>
    2128:	005d082d 	0x5d082d
    212c:	07840000 	0x7840000
    2130:	000008f8 	0x8f8
    2134:	b30e2e07 	0xb30e2e07
    2138:	88000004 	lwl	zero,4(zero)
    213c:	37040d00 	ori	a0,t8,0xd00
    2140:	13000004 	beqz	t8,2154 <sigill_handler-0x3fdeac>
    2144:	00000025 	move	zero,zero
    2148:	000004ad 	0x4ad
    214c:	0003b50c 	syscall	0xed4
    2150:	005d0c00 	0x5d0c00
    2154:	0d000000 	jal	4000000 <end+0x3bf6000>
    2158:	00049904 	0x49904
    215c:	28040d00 	slti	a0,zero,3328
    2160:	16000003 	bnez	s0,2170 <sigill_handler-0x3fde90>
    2164:	00000918 	0x918
    2168:	28133e07 	slti	s3,zero,15879
    216c:	16000003 	bnez	s0,217c <sigill_handler-0x3fde84>
    2170:	00000854 	0x854
    2174:	28133f07 	slti	s3,zero,16135
    2178:	16000003 	bnez	s0,2188 <sigill_handler-0x3fde78>
    217c:	000008e7 	0x8e7
    2180:	28134007 	slti	s3,zero,16391
    2184:	17000003 	bnez	t8,2194 <sigill_handler-0x3fde6c>
    2188:	00766e65 	0x766e65
    218c:	e9231308 	swc2	$3,4872(t1)
    2190:	0d000004 	jal	4000010 <end+0x3bf6010>
    2194:	0002c104 	0x2c104
    2198:	04b30900 	bgezall	a1,459c <sigill_handler-0x3fba64>
    219c:	04ff0000 	0x4ff0000
    21a0:	2c0a0000 	sltiu	t2,zero,0
    21a4:	03000000 	0x3000000
    21a8:	08461800 	j	1186000 <end+0xd7c000>
    21ac:	06010000 	bgez	s0,21b0 <sigill_handler-0x3fde50>
    21b0:	0004ef14 	0x4ef14
    21b4:	00030500 	sll	zero,v1,0x14
    21b8:	19004070 	blez	t0,1237c <sigill_handler-0x3edc84>
    21bc:	00000a0b 	0xa0b
    21c0:	05011c01 	bgez	t0,91c8 <sigill_handler-0x3f6e38>
    21c4:	00000025 	move	zero,zero
    21c8:	00402514 	0x402514
    21cc:	00000080 	sll	zero,zero,0x2
    21d0:	056a9c01 	tlti	t3,-25599
    21d4:	671a0000 	0x671a0000
    21d8:	0100000a 	movz	zero,t0,zero
    21dc:	6a16011c 	0x6a16011c
    21e0:	02000005 	0x2000005
    21e4:	0b1a0091 	j	c680244 <end+0xc276244>
    21e8:	0100000a 	movz	zero,t0,zero
    21ec:	4b29011c 	c2	0x129011c
    21f0:	02000004 	sllv	zero,zero,s0
    21f4:	661b0491 	0x661b0491
    21f8:	1d010064 	0x1d010064
    21fc:	00250601 	0x250601
    2200:	91020000 	lbu	v0,0(t0)
    2204:	00721b70 	tge	v1,s2,0x6d
    2208:	0a011d01 	j	8047404 <end+0x7c3d404>
    220c:	00000025 	move	zero,zero
    2210:	00749102 	0x749102
    2214:	0323040d 	break	0x323,0x10
    2218:	ff190000 	0xff190000
    221c:	01000008 	jr	t0
    2220:	2505010c 	addiu	a1,t0,268
    2224:	44000000 	mfc1	zero,$f0
    2228:	d0004024 	0xd0004024
    222c:	01000000 	0x1000000
    2230:	0005d99c 	0x5d99c
    2234:	08b31a00 	j	2cc6800 <end+0x28bc800>
    2238:	0c010000 	jal	40000 <sigill_handler-0x3c0000>
    223c:	00250f01 	0x250f01
    2240:	91020000 	lbu	v0,0(t0)
    2244:	0a0b1a00 	j	82c6800 <end+0x7ebc800>
    2248:	0c010000 	jal	40000 <sigill_handler-0x3c0000>
    224c:	044b2301 	tltiu	v0,8961
    2250:	91020000 	lbu	v0,0(t0)
    2254:	00721b04 	0x721b04
    2258:	06010d01 	bgez	s0,5660 <sigill_handler-0x3fa9a0>
    225c:	00000025 	move	zero,zero
    2260:	1b689102 	0x1b689102
    2264:	00766564 	0x766564
    2268:	0e010e01 	jal	8043804 <end+0x7c39804>
    226c:	000004b3 	tltu	zero,zero,0x12
    2270:	1b6c9102 	0x1b6c9102
    2274:	01006466 	0x1006466
    2278:	b50d010f 	0xb50d010f
    227c:	02000003 	0x2000003
    2280:	19007091 	blez	t0,1e4c8 <sigill_handler-0x3e1b38>
    2284:	00000832 	tlt	zero,zero,0x20
    2288:	05010001 	bgez	t0,2290 <sigill_handler-0x3fdd70>
    228c:	00000025 	move	zero,zero
    2290:	004023d4 	0x4023d4
    2294:	00000070 	tge	zero,zero,0x1
    2298:	06329c01 	bltzall	s1,fffe92a0 <end+0xffbdf2a0>
    229c:	b31a0000 	0xb31a0000
    22a0:	01000008 	jr	t0
    22a4:	250e0100 	addiu	t6,t0,256
    22a8:	02000000 	0x2000000
    22ac:	081a0091 	j	680244 <end+0x276244>
    22b0:	01000009 	jalr	zero,t0
    22b4:	5d1b0100 	0x5d1b0100
    22b8:	02000000 	0x2000000
    22bc:	721b0491 	0x721b0491
    22c0:	01010100 	0x1010100
    22c4:	00002506 	0x2506
    22c8:	70910200 	0x70910200
    22cc:	0064661b 	0x64661b
    22d0:	0d010201 	jal	4040804 <end+0x3c36804>
    22d4:	000003b5 	0x3b5
    22d8:	00749102 	0x749102
    22dc:	0009b61c 	0x9b61c
    22e0:	05eb0100 	tltiu	t7,256
    22e4:	00000025 	move	zero,zero
    22e8:	004022d0 	0x4022d0
    22ec:	00000104 	0x104
    22f0:	06a29c01 	bltzl	s5,fffe92f8 <end+0xffbdf2f8>
    22f4:	b31d0000 	0xb31d0000
    22f8:	01000008 	jr	t0
    22fc:	00250feb 	0x250feb
    2300:	91020000 	lbu	v0,0(t0)
    2304:	75621e00 	jalx	5887800 <end+0x547d800>
    2308:	eb010066 	swc2	$1,102(t8)
    230c:	00041522 	0x41522
    2310:	04910200 	bgezal	a0,2b14 <sigill_handler-0x3fd4ec>
    2314:	01006e1e 	0x1006e1e
    2318:	005d2deb 	0x5d2deb
    231c:	91020000 	lbu	v0,0(t0)
    2320:	00721f08 	0x721f08
    2324:	2506ec01 	addiu	a2,t0,-5119
    2328:	02000000 	0x2000000
    232c:	641f6891 	0x641f6891
    2330:	01007665 	0x1007665
    2334:	04b30eed 	bgezall	a1,5eec <sigill_handler-0x3fa114>
    2338:	91020000 	lbu	v0,0(t0)
    233c:	64661f6c 	0x64661f6c
    2340:	0dee0100 	jal	7b80400 <end+0x7776400>
    2344:	000003b5 	0x3b5
    2348:	00709102 	0x709102
    234c:	0008371c 	0x8371c
    2350:	05d90100 	0x5d90100
    2354:	00000025 	move	zero,zero
    2358:	00402208 	0x402208
    235c:	000000c8 	0xc8
    2360:	07049c01 	0x7049c01
    2364:	b31d0000 	0xb31d0000
    2368:	01000008 	jr	t0
    236c:	00250fd9 	0x250fd9
    2370:	91020000 	lbu	v0,0(t0)
    2374:	75621e00 	jalx	5887800 <end+0x547d800>
    2378:	d9010066 	ldc2	$1,102(t0)
    237c:	0003ef1c 	0x3ef1c
    2380:	04910200 	bgezal	a0,2b84 <sigill_handler-0x3fd47c>
    2384:	01006e1e 	0x1006e1e
    2388:	005d27d9 	0x5d27d9
    238c:	91020000 	lbu	v0,0(t0)
    2390:	006d1f08 	0x6d1f08
    2394:	2506da01 	addiu	a2,t0,-9727
    2398:	02000000 	0x2000000
    239c:	741f7491 	jalx	7dd244 <end+0x3d3244>
    23a0:	0100746f 	0x100746f
    23a4:	002509da 	0x2509da
    23a8:	91020000 	lbu	v0,0(t0)
    23ac:	d11c0070 	0xd11c0070
    23b0:	01000009 	jalr	zero,t0
    23b4:	002505bb 	0x2505bb
    23b8:	20f40000 	addi	s4,a3,0
    23bc:	01140040 	0x1140040
    23c0:	9c010000 	0x9c010000
    23c4:	000007a8 	0x7a8
    23c8:	0008b31d 	0x8b31d
    23cc:	0ebb0100 	jal	aec0400 <end+0xaab6400>
    23d0:	00000025 	move	zero,zero
    23d4:	1e009102 	bgtz	s0,fffe67e0 <end+0xffbdc7e0>
    23d8:	00667562 	0x667562
    23dc:	ef1bbb01 	0xef1bbb01
    23e0:	02000003 	0x2000003
    23e4:	6e1e0491 	0x6e1e0491
    23e8:	26bb0100 	addiu	k1,s5,256
    23ec:	0000005d 	0x5d
    23f0:	1f089102 	0x1f089102
    23f4:	bc010072 	cache	0x1,114(zero)
    23f8:	00002506 	0x2506
    23fc:	68910200 	0x68910200
    2400:	7665641f 	jalx	995907c <end+0x954f07c>
    2404:	0ec00100 	jal	b000400 <end+0xabf6400>
    2408:	000004b3 	tltu	zero,zero,0x12
    240c:	1f6c9102 	0x1f6c9102
    2410:	01006466 	0x1006466
    2414:	03b50dc1 	0x3b50dc1
    2418:	91020000 	lbu	v0,0(t0)
    241c:	21102070 	addi	s0,t0,8304
    2420:	00300040 	0x300040
    2424:	078f0000 	0x78f0000
    2428:	5f1f0000 	0x5f1f0000
    242c:	c3010072 	ll	at,114(t8)
    2430:	00002502 	srl	a0,zero,0x14
    2434:	60910200 	0x60910200
    2438:	21402100 	addi	zero,t2,8448
    243c:	00380040 	0x380040
    2440:	5f1f0000 	0x5f1f0000
    2444:	c4010072 	lwc1	$f1,114(zero)
    2448:	00002502 	srl	a0,zero,0x14
    244c:	64910200 	0x64910200
    2450:	64220000 	0x64220000
    2454:	01007075 	0x1007075
    2458:	00250580 	0x250580
    245c:	1e580000 	0x1e580000
    2460:	029c0040 	0x29c0040
    2464:	9c010000 	0x9c010000
    2468:	00000884 	0x884
    246c:	0008b01d 	0x8b01d
    2470:	0d800100 	jal	6000400 <end+0x5bf6400>
    2474:	00000025 	move	zero,zero
    2478:	1d009102 	bgtz	t0,fffe6884 <end+0xffbdc884>
    247c:	0000081a 	0x81a
    2480:	251b8001 	addiu	k1,t0,-32767
    2484:	02000000 	0x2000000
    2488:	691f0491 	0x691f0491
    248c:	06810100 	bgez	s4,2890 <sigill_handler-0x3fd770>
    2490:	00000025 	move	zero,zero
    2494:	1f509102 	0x1f509102
    2498:	81010072 	lb	at,114(t0)
    249c:	00002509 	0x2509
    24a0:	54910200 	bnel	a0,s1,2ca4 <sigill_handler-0x3fd35c>
    24a4:	61766f1f 	0x61766f1f
    24a8:	08820100 	j	2080400 <end+0x1c76400>
    24ac:	000003ef 	0x3ef
    24b0:	1f5c9102 	0x1f5c9102
    24b4:	0061766e 	0x61766e
    24b8:	ef0e8201 	0xef0e8201
    24bc:	02000003 	0x2000003
    24c0:	701f6091 	0x701f6091
    24c4:	01006574 	teq	t0,zero,0x195
    24c8:	005d0883 	0x5d0883
    24cc:	91020000 	lbu	v0,0(t0)
    24d0:	08a01864 	j	2806190 <end+0x23fc190>
    24d4:	84010000 	lh	at,0(zero)
    24d8:	0003b50d 	break	0x3,0x2d4
    24dc:	70910200 	0x70910200
    24e0:	0008b918 	0x8b918
    24e4:	15840100 	bne	t4,a0,28e8 <sigill_handler-0x3fd718>
    24e8:	000003b5 	0x3b5
    24ec:	23589102 	addi	t8,k0,-28414
    24f0:	00727265 	0x727265
    24f4:	2001a901 	addi	at,zero,-22271
    24f8:	20004020 	addi	zero,zero,16416
    24fc:	00402020 	add	a0,v0,zero
    2500:	00000040 	ssnop
    2504:	0000086c 	0x86c
    2508:	0100721f 	0x100721f
    250c:	002502ab 	0x2502ab
    2510:	91020000 	lbu	v0,0(t0)
    2514:	6c210068 	0x6c210068
    2518:	4c004020 	0x4c004020
    251c:	1f000000 	bgtz	t8,2520 <sigill_handler-0x3fdae0>
    2520:	ae010072 	sw	at,114(s0)
    2524:	00002503 	sra	a0,zero,0x14
    2528:	6c910200 	0x6c910200
    252c:	20240000 	addi	a0,at,0
    2530:	01000009 	jalr	zero,t0
    2534:	1df4066c 	0x1df4066c
    2538:	00640040 	0x640040
    253c:	9c010000 	0x9c010000
    2540:	000008a8 	0x8a8
    2544:	0100691f 	0x100691f
    2548:	0025066d 	0x25066d
    254c:	91020000 	lbu	v0,0(t0)
    2550:	3a1c0070 	xori	gp,s0,0x70
    2554:	0100000b 	movn	zero,t0,zero
    2558:	0025055e 	0x25055e
    255c:	1d380000 	0x1d380000
    2560:	00bc0040 	0xbc0040
    2564:	9c010000 	0x9c010000
    2568:	000008fc 	0x8fc
    256c:	0008b31d 	0x8b31d
    2570:	0f5e0100 	jal	d780400 <end+0xd376400>
    2574:	00000025 	move	zero,zero
    2578:	1f009102 	bgtz	t8,fffe6984 <end+0xffbdc984>
    257c:	5f010072 	0x5f010072
    2580:	00002506 	0x2506
    2584:	68910200 	0x68910200
    2588:	7665641f 	jalx	995907c <end+0x954f07c>
    258c:	0e600100 	jal	9800400 <end+0x93f6400>
    2590:	000004b3 	tltu	zero,zero,0x12
    2594:	1f6c9102 	0x1f6c9102
    2598:	01006466 	0x1006466
    259c:	03b50d61 	0x3b50d61
    25a0:	91020000 	lbu	v0,0(t0)
    25a4:	4d250070 	0x4d250070
    25a8:	01000008 	jr	t0
    25ac:	0025055a 	0x25055a
    25b0:	1d000000 	bgtz	t0,25b4 <sigill_handler-0x3fda4c>
    25b4:	00380040 	0x380040
    25b8:	9c010000 	0x9c010000
    25bc:	00000925 	0x925
    25c0:	0064661e 	0x64661e
    25c4:	25105a01 	addiu	s0,t0,23041
    25c8:	02000000 	0x2000000
    25cc:	25000091 	addiu	zero,t0,145
    25d0:	0000085c 	0x85c
    25d4:	25055601 	addiu	a1,t0,22017
    25d8:	cc000000 	pref	0x0,0(zero)
    25dc:	3400401c 	li	zero,0x401c
    25e0:	01000000 	0x1000000
    25e4:	00094e9c 	0x94e9c
    25e8:	64661e00 	0x64661e00
    25ec:	17560100 	bne	k0,s6,29f0 <sigill_handler-0x3fd610>
    25f0:	000003b5 	0x3b5
    25f4:	00009102 	srl	s2,zero,0x4
    25f8:	0008121c 	0x8121c
    25fc:	07520100 	bltzall	k0,2a00 <sigill_handler-0x3fd600>
    2600:	000003ef 	0x3ef
    2604:	00401c8c 	syscall	0x10072
    2608:	00000040 	ssnop
    260c:	09779c01 	j	5de7004 <end+0x59dd004>
    2610:	661e0000 	0x661e0000
    2614:	52010064 	beql	s0,at,27a8 <sigill_handler-0x3fd858>
    2618:	0003b51a 	0x3b51a
    261c:	00910200 	0x910200
    2620:	08a62500 	j	2989400 <end+0x257f400>
    2624:	41010000 	0x41010000
    2628:	00002505 	0x2505
    262c:	401bf000 	mfc0	k1,c0_errorepc
    2630:	00009c00 	sll	s3,zero,0x10
    2634:	bd9c0100 	cache	0x1c,256(t4)
    2638:	1d000009 	bgtz	t0,2660 <sigill_handler-0x3fd9a0>
    263c:	000008b3 	tltu	zero,zero,0x22
    2640:	25134101 	addiu	s3,t0,16641
    2644:	02000000 	0x2000000
    2648:	661e0091 	0x661e0091
    264c:	41010064 	0x41010064
    2650:	0009bd26 	0x9bd26
    2654:	04910200 	bgezal	a0,2e58 <sigill_handler-0x3fd1a8>
    2658:	0061761f 	0x61761f
    265c:	5d084201 	0x5d084201
    2660:	02000000 	0x2000000
    2664:	0d007091 	jal	401c244 <end+0x3c12244>
    2668:	0003b504 	0x3b504
    266c:	08722400 	j	1c89000 <end+0x187f000>
    2670:	37010000 	ori	at,t8,0x0
    2674:	401b8006 	mfc0	k1,$16,6
    2678:	00007000 	sll	t6,zero,0x0
    267c:	ff9c0100 	0xff9c0100
    2680:	1e000009 	bgtz	s0,26a8 <sigill_handler-0x3fd958>
    2684:	01006466 	0x1006466
    2688:	03b51a37 	0x3b51a37
    268c:	91020000 	lbu	v0,0(t0)
    2690:	1b942100 	0x1b942100
    2694:	00400040 	0x400040
    2698:	721f0000 	madd	s0,ra
    269c:	02380100 	0x2380100
    26a0:	00000025 	move	zero,zero
    26a4:	00709102 	0x709102
    26a8:	083d2500 	j	f49400 <end+0xb3f400>
    26ac:	22010000 	addi	at,s0,0
    26b0:	00002505 	0x2505
    26b4:	401a9c00 	0x401a9c00
    26b8:	0000e400 	sll	gp,zero,0x10
    26bc:	459c0100 	0x459c0100
    26c0:	1e00000a 	bgtz	s0,26ec <sigill_handler-0x3fd914>
    26c4:	01006466 	0x1006466
    26c8:	09bd1a22 	j	6f46888 <end+0x6b3c888>
    26cc:	91020000 	lbu	v0,0(t0)
    26d0:	61761f00 	0x61761f00
    26d4:	08230100 	j	8c0400 <end+0x4b6400>
    26d8:	0000005d 	0x5d
    26dc:	18749102 	0x18749102
    26e0:	000008e2 	0x8e2
    26e4:	5d082401 	0x5d082401
    26e8:	02000000 	0x2000000
    26ec:	1c007091 	bgtz	zero,1e934 <sigill_handler-0x3e16cc>
    26f0:	00000823 	negu	at,zero
    26f4:	25050c01 	addiu	a1,t0,3073
    26f8:	b0000000 	0xb0000000
    26fc:	ec004019 	0xec004019
    2700:	01000000 	0x1000000
    2704:	000a959c 	0xa959c
    2708:	087e1d00 	j	1f87400 <end+0x1b7d400>
    270c:	0c010000 	jal	40000 <sigill_handler-0x3c0000>
    2710:	00002514 	0x2514
    2714:	00910200 	0x910200
    2718:	7665641e 	jalx	9959078 <end+0x954f078>
    271c:	290c0100 	slti	t4,t0,256
    2720:	00000a95 	0xa95
    2724:	21049102 	addi	a0,t0,-28414
    2728:	004019c8 	0x4019c8
    272c:	0000008c 	syscall	0x2
    2730:	0100691f 	0x100691f
    2734:	00250b0d 	break	0x25,0x2c
    2738:	91020000 	lbu	v0,0(t0)
    273c:	0d000070 	jal	40001c0 <end+0x3bf61c0>
    2740:	0004b304 	0x4b304
    2744:	013d0000 	0x13d0000
    2748:	00040000 	sll	zero,a0,0x0
    274c:	00000b5a 	0xb5a
    2750:	00900104 	0x900104
    2754:	490c0000 	bc2f	$cc3,2758 <sigill_handler-0x3fd8a8>
    2758:	49000009 	bc2f	2780 <sigill_handler-0x3fd880>
    275c:	a0000000 	sb	zero,0(zero)
    2760:	bc004025 	cache	0x0,16421(zero)
    2764:	89000000 	lwl	zero,0(t0)
    2768:	0200000c 	syscall	0x80000
    276c:	6e690504 	0x6e690504
    2770:	04030074 	bgezl	zero,2944 <sigill_handler-0x3fd6bc>
    2774:	00002d07 	0x2d07
    2778:	06010300 	bgez	s0,337c <sigill_handler-0x3fcc84>
    277c:	00000073 	tltu	zero,zero,0x1
    2780:	ac050203 	sw	a1,515(zero)
    2784:	03000001 	movf	zero,t8,$fcc0
    2788:	00000508 	0x508
    278c:	01030000 	0x1030000
    2790:	00007108 	0x7108
    2794:	07020300 	bltzl	t8,3398 <sigill_handler-0x3fcc68>
    2798:	0000018c 	syscall	0x6
    279c:	23070803 	addi	a3,t8,2051
    27a0:	04000000 	bltz	zero,27a4 <sigill_handler-0x3fd85c>
    27a4:	0000093c 	0x93c
    27a8:	4f180802 	c3	0x1180802
    27ac:	04000000 	bltz	zero,27b0 <sigill_handler-0x3fd850>
    27b0:	0000001d 	0x1d
    27b4:	2c160902 	sltiu	s6,zero,2306
    27b8:	04000000 	bltz	zero,27bc <sigill_handler-0x3fd844>
    27bc:	00000475 	0x475
    27c0:	81170a02 	lb	s7,2562(t0)
    27c4:	03000000 	0x3000000
    27c8:	00280704 	0x280704
    27cc:	50050000 	beql	zero,a1,27d0 <sigill_handler-0x3fd830>
    27d0:	03006564 	0x3006564
    27d4:	00751097 	0x751097
    27d8:	50050000 	beql	zero,a1,27dc <sigill_handler-0x3fd824>
    27dc:	03006574 	teq	t8,zero,0x195
    27e0:	00751098 	0x751098
    27e4:	01030000 	0x1030000
    27e8:	00007a06 	0x7a06
    27ec:	07040600 	0x7040600
    27f0:	00000944 	0x944
    27f4:	080e040c 	j	381030 <sigill_handler-0x7efd0>
    27f8:	000000d1 	0xd1
    27fc:	00095708 	0x95708
    2800:	140f0400 	bne	zero,t7,3804 <sigill_handler-0x3fc7fc>
    2804:	00000101 	0x101
    2808:	095f0800 	j	57c2000 <end+0x53b8000>
    280c:	16040000 	bne	s0,a0,2810 <sigill_handler-0x3fd7f0>
    2810:	00005d0a 	0x5d0a
    2814:	09000800 	j	4002000 <end+0x3bf8000>
    2818:	0000a904 	0xa904
    281c:	04080a00 	tgei	zero,2560
    2820:	00fb090c 	syscall	0x3ec24
    2824:	ca080000 	lwc2	$8,0(s0)
    2828:	04000003 	bltz	zero,2838 <sigill_handler-0x3fd7c8>
    282c:	00d1090c 	syscall	0x34424
    2830:	08000000 	j	0 <sigill_handler-0x400000>
    2834:	000003a9 	0x3a9
    2838:	fb090c04 	sdc2	$9,3076(t8)
    283c:	04000000 	bltz	zero,2840 <sigill_handler-0x3fd7c0>
    2840:	d1040900 	0xd1040900
    2844:	04000000 	bltz	zero,2848 <sigill_handler-0x3fd7b8>
    2848:	0000092a 	0x92a
    284c:	d71a0c04 	ldc1	$f26,3076(t8)
    2850:	0b000000 	j	c000000 <end+0xbbf6000>
    2854:	00000966 	0x966
    2858:	25050e01 	addiu	a1,t0,3585
    285c:	a0000000 	sb	zero,0(zero)
    2860:	bc004025 	cache	0x0,16421(zero)
    2864:	01000000 	0x1000000
    2868:	00760c9c 	0x760c9c
    286c:	a7130e01 	sh	s3,3585(t8)
    2870:	02000000 	0x2000000
    2874:	700d0091 	0x700d0091
    2878:	01006574 	teq	t0,zero,0x195
    287c:	0069080f 	0x69080f
    2880:	91020000 	lbu	v0,0(t0)
    2884:	41000070 	0x41000070
    2888:	04000007 	bltz	zero,28a8 <sigill_handler-0x3fd758>
    288c:	000c2100 	sll	a0,t4,0x4
    2890:	90010400 	lbu	at,1024(zero)
    2894:	0c000000 	jal	0 <sigill_handler-0x400000>
    2898:	0000097b 	0x97b
    289c:	00000049 	0x49
    28a0:	00402660 	0x402660
    28a4:	00000928 	0x928
    28a8:	00000d20 	0xd20
    28ac:	73060102 	0x73060102
    28b0:	02000000 	0x2000000
    28b4:	01ac0502 	0x1ac0502
    28b8:	04030000 	bgezl	zero,28bc <sigill_handler-0x3fd744>
    28bc:	746e6905 	jalx	1b9a414 <end+0x1790414>
    28c0:	05080200 	tgei	t0,512
    28c4:	00000000 	nop
    28c8:	71080102 	0x71080102
    28cc:	02000000 	0x2000000
    28d0:	018c0702 	0x18c0702
    28d4:	f6040000 	sdc1	$f4,0(s0)
    28d8:	03000009 	jalr	zero,t8
    28dc:	005b1934 	teq	v0,k1,0x64
    28e0:	04020000 	bltzl	zero,28e4 <sigill_handler-0x3fd71c>
    28e4:	00002d07 	0x2d07
    28e8:	07080200 	tgei	t8,512
    28ec:	00000023 	negu	zero,zero
    28f0:	00099a05 	0x99a05
    28f4:	04010000 	b	28f8 <sigill_handler-0x3fd708>
    28f8:	d4081a02 	ldc1	$f8,6658(zero)
    28fc:	06000000 	bltz	s0,2900 <sigill_handler-0x3fd700>
    2900:	00000a10 	0xa10
    2904:	d4071b02 	ldc1	$f7,6914(zero)
    2908:	00000000 	nop
    290c:	0009c506 	0x9c506
    2910:	0b1c0200 	j	c700800 <end+0xc2f6800>
    2914:	0000004f 	sync	0x1
    2918:	099f0680 	j	67c1a00 <end+0x63b7a00>
    291c:	1d020000 	0x1d020000
    2920:	00004f0b 	0x4f0b
    2924:	d6068400 	ldc1	$f6,-31744(s0)
    2928:	02000009 	jalr	zero,s0
    292c:	00f00b1e 	0xf00b1e
    2930:	06880000 	tgei	s4,0
    2934:	000009a6 	0x9a6
    2938:	4f0b1f02 	c3	0x10b1f02
    293c:	b0000000 	0xb0000000
    2940:	00096e06 	0x96e06
    2944:	0f210200 	jal	c840800 <end+0xc436800>
    2948:	00000100 	sll	zero,zero,0x4
    294c:	0a1706b4 	j	85c1ad0 <end+0x81b7ad0>
    2950:	22020000 	addi	v0,s0,0
    2954:	00010607 	0x10607
    2958:	0700b800 	bltz	t8,ffff095c <end+0xffbe695c>
    295c:	000000e4 	0xe4
    2960:	000000e4 	0xe4
    2964:	00005b08 	0x5b08
    2968:	02007f00 	0x2007f00
    296c:	007a0601 	0x7a0601
    2970:	e4090000 	swc1	$f9,0(zero)
    2974:	07000000 	bltz	t8,2978 <sigill_handler-0x3fd688>
    2978:	0000004f 	sync	0x1
    297c:	00000100 	sll	zero,zero,0x4
    2980:	00005b08 	0x5b08
    2984:	0a000900 	j	8002400 <end+0x7bf8400>
    2988:	00006904 	0x6904
    298c:	00e40700 	0xe40700
    2990:	01160000 	0x1160000
    2994:	5b080000 	0x5b080000
    2998:	47000000 	c1	0x1000000
    299c:	001d0400 	sll	zero,sp,0x10
    29a0:	09040000 	j	4100000 <end+0x3cf6000>
    29a4:	00005b16 	0x5b16
    29a8:	04750400 	0x4750400
    29ac:	0a040000 	j	8100000 <end+0x7cf6000>
    29b0:	00012e17 	0x12e17
    29b4:	07040200 	0x7040200
    29b8:	00000028 	0x28
    29bc:	6564500b 	0x6564500b
    29c0:	10970500 	beq	a0,s7,3dc4 <sigill_handler-0x3fc23c>
    29c4:	00000122 	0x122
    29c8:	6574500b 	0x6574500b
    29cc:	10980500 	beq	a0,t8,3dd0 <sigill_handler-0x3fc230>
    29d0:	00000122 	0x122
    29d4:	7665440c 	jalx	9951030 <end+0x9547030>
    29d8:	18061c00 	0x18061c00
    29dc:	0001b608 	0x1b608
    29e0:	087e0600 	j	1f81800 <end+0x1b77800>
    29e4:	19060000 	0x19060000
    29e8:	00003306 	0x3306
    29ec:	85060000 	lh	a2,0(t0)
    29f0:	06000008 	bltz	s0,2a14 <sigill_handler-0x3fd5ec>
    29f4:	01b6081a 	0x1b6081a
    29f8:	06040000 	0x6040000
    29fc:	000008c8 	0x8c8
    2a00:	16081b06 	bne	s0,t0,961c <sigill_handler-0x3f69e4>
    2a04:	08000002 	j	8 <sigill_handler-0x3ffff8>
    2a08:	00088e06 	0x88e06
    2a0c:	081c0600 	j	701800 <end+0x2f7800>
    2a10:	00000241 	0x241
    2a14:	0863060c 	j	18c1830 <end+0x14b7830>
    2a18:	1d060000 	0x1d060000
    2a1c:	00025608 	0x25608
    2a20:	ef061000 	0xef061000
    2a24:	06000008 	bltz	s0,2a48 <sigill_handler-0x3fd5b8>
    2a28:	02b8081e 	0x2b8081e
    2a2c:	06140000 	0x6140000
    2a30:	0000082e 	0x82e
    2a34:	d2081f06 	0xd2081f06
    2a38:	18000002 	blez	zero,2a44 <sigill_handler-0x3fd5bc>
    2a3c:	e4040a00 	swc1	$f4,2560(zero)
    2a40:	0d000000 	jal	4000000 <end+0x3bf6000>
    2a44:	00000033 	tltu	zero,zero
    2a48:	000001da 	0x1da
    2a4c:	0001da0e 	0x1da0e
    2a50:	02140e00 	0x2140e00
    2a54:	160e0000 	bne	s0,t6,2a58 <sigill_handler-0x3fd5a8>
    2a58:	0e000001 	jal	8000004 <end+0x7bf6004>
    2a5c:	00000116 	0x116
    2a60:	e0040a00 	sc	a0,2560(zero)
    2a64:	0c000001 	jal	4 <sigill_handler-0x3ffffc>
    2a68:	0c006446 	jal	19118 <sigill_handler-0x3e6ee8>
    2a6c:	14082306 	bne	zero,t0,b688 <sigill_handler-0x3f4978>
    2a70:	06000002 	bltz	s0,2a7c <sigill_handler-0x3fd584>
    2a74:	0000087b 	0x87b
    2a78:	16082406 	bne	s0,t0,ba94 <sigill_handler-0x3f456c>
    2a7c:	00000001 	movf	zero,zero,$fcc0
    2a80:	00090506 	0x90506
    2a84:	08250600 	j	941800 <end+0x537800>
    2a88:	00000116 	0x116
    2a8c:	08d90604 	j	3641810 <end+0x3237810>
    2a90:	26060000 	addiu	a2,s0,0
    2a94:	00011608 	0x11608
    2a98:	0f000800 	jal	c002000 <end+0xbbf8000>
    2a9c:	bc040a04 	cache	0x4,2564(zero)
    2aa0:	0d000001 	jal	4000004 <end+0x3bf6004>
    2aa4:	00000033 	tltu	zero,zero
    2aa8:	0000023a 	0x23a
    2aac:	0001da0e 	0x1da0e
    2ab0:	023a0e00 	0x23a0e00
    2ab4:	160e0000 	bne	s0,t6,2ab8 <sigill_handler-0x3fd548>
    2ab8:	0e000001 	jal	8000004 <end+0x7bf6004>
    2abc:	00000116 	0x116
    2ac0:	40040a00 	0x40040a00
    2ac4:	10000002 	b	2ad0 <sigill_handler-0x3fd530>
    2ac8:	021c040a 	0x21c040a
    2acc:	330d0000 	andi	t5,t8,0x0
    2ad0:	56000000 	bnezl	s0,2ad4 <sigill_handler-0x3fd52c>
    2ad4:	0e000002 	jal	8000008 <end+0x7bf6008>
    2ad8:	000001da 	0x1da
    2adc:	47040a00 	c1	0x1040a00
    2ae0:	0d000002 	jal	4000008 <end+0x3bf6008>
    2ae4:	00000033 	tltu	zero,zero
    2ae8:	00000270 	tge	zero,zero,0x9
    2aec:	0001da0e 	0x1da0e
    2af0:	02700e00 	0x2700e00
    2af4:	0a000000 	j	8000000 <end+0x7bf6000>
    2af8:	00027604 	0x27604
    2afc:	086d1100 	j	1b44400 <end+0x173a400>
    2b00:	068c0000 	teqi	s4,0
    2b04:	02b8082a 	slt	at,s5,t8
    2b08:	d1060000 	0xd1060000
    2b0c:	06000008 	bltz	s0,2b30 <sigill_handler-0x3fd4d0>
    2b10:	00d4072b 	0xd4072b
    2b14:	06000000 	bltz	s0,2b18 <sigill_handler-0x3fd4e8>
    2b18:	00000898 	0x898
    2b1c:	16082c06 	bne	s0,t0,db38 <sigill_handler-0x3f24c8>
    2b20:	80000001 	lb	zero,1(zero)
    2b24:	00090f06 	0x90f06
    2b28:	082d0600 	j	b41800 <end+0x737800>
    2b2c:	00000116 	0x116
    2b30:	08f80684 	j	3e01a10 <end+0x39f7a10>
    2b34:	2e060000 	sltiu	a2,s0,0
    2b38:	0002d80e 	0x2d80e
    2b3c:	0a008800 	j	8022000 <end+0x7c18000>
    2b40:	00025c04 	0x25c04
    2b44:	00330d00 	0x330d00
    2b48:	02d20000 	0x2d20000
    2b4c:	da0e0000 	ldc2	$14,0(s0)
    2b50:	0e000001 	jal	8000004 <end+0x7bf6004>
    2b54:	00000116 	0x116
    2b58:	be040a00 	cache	0x4,2560(s0)
    2b5c:	0a000002 	j	8000008 <end+0x7bf6008>
    2b60:	00014d04 	0x14d04
    2b64:	09ff0500 	j	7fc1400 <end+0x7bb7400>
    2b68:	01100000 	0x1100000
    2b6c:	08320604 	j	c81810 <end+0x877810>
    2b70:	00000316 	0x316
    2b74:	0009e906 	0x9e906
    2b78:	0c330600 	jal	cc1800 <end+0x8b7800>
    2b7c:	000001e0 	0x1e0
    2b80:	09bc0600 	j	6f01800 <end+0x6af7800>
    2b84:	34060000 	li	a2,0x0
    2b88:	00011608 	0x11608
    2b8c:	74120c00 	jalx	483000 <end+0x79000>
    2b90:	06000009 	bltz	s0,2bb8 <sigill_handler-0x3fd448>
    2b94:	00690e35 	0x690e35
    2b98:	10040000 	beq	zero,a0,2b9c <sigill_handler-0x3fd464>
    2b9c:	08541300 	j	1504c00 <end+0x10fac00>
    2ba0:	3f060000 	0x3f060000
    2ba4:	00014d13 	0x14d13
    2ba8:	03161400 	0x3161400
    2bac:	0d010000 	jal	4040000 <end+0x3c36000>
    2bb0:	1003050c 	beq	zero,v1,3fe4 <sigill_handler-0x3fc01c>
    2bb4:	15004070 	bnez	t0,12d78 <sigill_handler-0x3ed288>
    2bb8:	00000ade 	0xade
    2bbc:	05010301 	bgez	t0,37c4 <sigill_handler-0x3fc83c>
    2bc0:	00000033 	tltu	zero,zero
    2bc4:	00402f58 	0x402f58
    2bc8:	00000030 	tge	zero,zero
    2bcc:	6d169c01 	0x6d169c01
    2bd0:	0100000b 	movn	zero,t0,zero
    2bd4:	003305fa 	0x3305fa
    2bd8:	2f200000 	sltiu	zero,t9,0
    2bdc:	00380040 	0x380040
    2be0:	9c010000 	0x9c010000
    2be4:	00000371 	tgeu	zero,zero,0xd
    2be8:	000a6717 	0xa6717
    2bec:	18fa0100 	0x18fa0100
    2bf0:	00000371 	tgeu	zero,zero,0xd
    2bf4:	00009102 	srl	s2,zero,0x4
    2bf8:	00eb040a 	0xeb040a
    2bfc:	df160000 	0xdf160000
    2c00:	01000009 	jalr	zero,t0
    2c04:	003305c6 	0x3305c6
    2c08:	2ca40000 	sltiu	a0,a1,0
    2c0c:	027c0040 	0x27c0040
    2c10:	9c010000 	0x9c010000
    2c14:	00000429 	0x429
    2c18:	0008b317 	0x8b317
    2c1c:	13c60100 	beq	s8,a2,3020 <sigill_handler-0x3fcfe0>
    2c20:	00000033 	tltu	zero,zero
    2c24:	17009102 	bnez	t8,fffe7030 <end+0xffbdd030>
    2c28:	000009c7 	0x9c7
    2c2c:	1620c601 	bnez	s1,ffff4434 <end+0xffbea434>
    2c30:	02000001 	movf	zero,s0,$fcc0
    2c34:	69180491 	0x69180491
    2c38:	06c70100 	0x6c70100
    2c3c:	00000033 	tltu	zero,zero
    2c40:	18589102 	0x18589102
    2c44:	c7010072 	lwc1	$f1,114(t8)
    2c48:	00003309 	0x3309
    2c4c:	5c910200 	0x5c910200
    2c50:	00646618 	0x646618
    2c54:	da0dc801 	ldc2	$13,-14335(s0)
    2c58:	02000001 	movf	zero,s0,$fcc0
    2c5c:	66187491 	0x66187491
    2c60:	11c90100 	beq	t6,t1,3064 <sigill_handler-0x3fcf9c>
    2c64:	00000429 	0x429
    2c68:	19609102 	blez	t3,fffe7074 <end+0xffbdd074>
    2c6c:	000009ee 	0x9ee
    2c70:	1608ca01 	bne	s0,t0,ffff5478 <end+0xffbeb478>
    2c74:	02000001 	movf	zero,s0,$fcc0
    2c78:	be196891 	cache	0x19,26769(s0)
    2c7c:	01000009 	jalr	zero,t0
    2c80:	011611ca 	0x11611ca
    2c84:	91020000 	lbu	v0,0(t0)
    2c88:	61761864 	0x61761864
    2c8c:	08e10100 	j	3840400 <end+0x3436400>
    2c90:	00000214 	0x214
    2c94:	1a6c9102 	0x1a6c9102
    2c98:	00402df4 	teq	v0,zero,0xb7
    2c9c:	00000038 	0x38
    2ca0:	00725f18 	0x725f18
    2ca4:	3308e601 	andi	t0,t8,0xe601
    2ca8:	02000000 	0x2000000
    2cac:	00007091 	0x7091
    2cb0:	02de040a 	0x2de040a
    2cb4:	061b0000 	0x61b0000
    2cb8:	0100000a 	movz	zero,t0,zero
    2cbc:	00330cb9 	0x330cb9
    2cc0:	2c1c0000 	sltiu	gp,zero,0
    2cc4:	00880040 	0x880040
    2cc8:	9c010000 	0x9c010000
    2ccc:	00000473 	tltu	zero,zero,0x11
    2cd0:	0064661c 	0x64661c
    2cd4:	da21b901 	ldc2	$1,-18175(s1)
    2cd8:	02000001 	movf	zero,s0,$fcc0
    2cdc:	731c0091 	0x731c0091
    2ce0:	b9010074 	swr	at,116(t0)
    2ce4:	00027032 	tlt	zero,v0,0x1c0
    2ce8:	04910200 	bgezal	a0,34ec <sigill_handler-0x3fcb14>
    2cec:	01006618 	0x1006618
    2cf0:	042911ba 	tgeiu	at,4538
    2cf4:	91020000 	lbu	v0,0(t0)
    2cf8:	b11b0070 	0xb11b0070
    2cfc:	01000009 	jalr	zero,t0
    2d00:	00330ca0 	0x330ca0
    2d04:	2b280000 	slti	t0,t9,0
    2d08:	00f40040 	0xf40040
    2d0c:	9c010000 	0x9c010000
    2d10:	000004f0 	tge	zero,zero,0x13
    2d14:	0064661c 	0x64661c
    2d18:	da22a001 	ldc2	$2,-24575(s1)
    2d1c:	02000001 	movf	zero,s0,$fcc0
    2d20:	621c0091 	0x621c0091
    2d24:	01006675 	0x1006675
    2d28:	023a32a0 	0x23a32a0
    2d2c:	91020000 	lbu	v0,0(t0)
    2d30:	006e1c04 	0x6e1c04
    2d34:	163da001 	bne	s1,sp,fffead3c <end+0xffbe0d3c>
    2d38:	02000001 	movf	zero,s0,$fcc0
    2d3c:	08170891 	j	5c2244 <end+0x1b8244>
    2d40:	01000009 	jalr	zero,t0
    2d44:	011646a0 	0x11646a0
    2d48:	91020000 	lbu	v0,0(t0)
    2d4c:	0072180c 	syscall	0x1c860
    2d50:	3306a101 	andi	a2,t8,0xa101
    2d54:	02000000 	0x2000000
    2d58:	74187091 	jalx	61c244 <end+0x212244>
    2d5c:	0100746f 	0x100746f
    2d60:	011608a2 	0x11608a2
    2d64:	91020000 	lbu	v0,0(t0)
    2d68:	0066186c 	0x66186c
    2d6c:	2911a301 	slti	s1,t0,-23807
    2d70:	02000004 	sllv	zero,zero,s0
    2d74:	16006891 	bnez	s0,1cfbc <sigill_handler-0x3e3044>
    2d78:	00000991 	0x991
    2d7c:	33058301 	andi	a1,t8,0x8301
    2d80:	f8000000 	sdc2	$0,0(zero)
    2d84:	30004029 	andi	zero,zero,0x4029
    2d88:	01000001 	movf	zero,t0,$fcc0
    2d8c:	0005619c 	0x5619c
    2d90:	08b31700 	j	2cc5c00 <end+0x28bbc00>
    2d94:	83010000 	lb	at,0(t8)
    2d98:	00003312 	0x3312
    2d9c:	00910200 	0x910200
    2da0:	00090817 	0x90817
    2da4:	1f830100 	0x1f830100
    2da8:	00000116 	0x116
    2dac:	1c049102 	0x1c049102
    2db0:	006b6c62 	0x6b6c62
    2db4:	612e8301 	0x612e8301
    2db8:	02000005 	0x2000005
    2dbc:	72180891 	0x72180891
    2dc0:	06840100 	0x6840100
    2dc4:	00000033 	tltu	zero,zero
    2dc8:	18689102 	0x18689102
    2dcc:	01006176 	tne	t0,zero,0x185
    2dd0:	02140885 	0x2140885
    2dd4:	91020000 	lbu	v0,0(t0)
    2dd8:	6466186c 	0x6466186c
    2ddc:	0d860100 	jal	6180400 <end+0x5d76400>
    2de0:	000001da 	0x1da
    2de4:	00709102 	0x709102
    2de8:	0214040a 	0x214040a
    2dec:	cc1b0000 	pref	0x1b,0(zero)
    2df0:	01000009 	jalr	zero,t0
    2df4:	00330c6c 	0x330c6c
    2df8:	29300000 	slti	s0,t1,0
    2dfc:	00c80040 	0xc80040
    2e00:	9c010000 	0x9c010000
    2e04:	000005d7 	0x5d7
    2e08:	0064661c 	0x64661c
    2e0c:	da216c01 	ldc2	$1,27649(s1)
    2e10:	02000001 	movf	zero,s0,$fcc0
    2e14:	621c0091 	0x621c0091
    2e18:	01006675 	0x1006675
    2e1c:	02142b6c 	0x2142b6c
    2e20:	91020000 	lbu	v0,0(t0)
    2e24:	006e1c04 	0x6e1c04
    2e28:	16366c01 	bne	s1,s6,1de30 <sigill_handler-0x3e21d0>
    2e2c:	02000001 	movf	zero,s0,$fcc0
    2e30:	08170891 	j	5c2244 <end+0x1b8244>
    2e34:	01000009 	jalr	zero,t0
    2e38:	01163f6c 	0x1163f6c
    2e3c:	91020000 	lbu	v0,0(t0)
    2e40:	09c7190c 	j	71c6430 <end+0x6dbc430>
    2e44:	6d010000 	0x6d010000
    2e48:	00011608 	0x11608
    2e4c:	74910200 	jalx	2440800 <end+0x2036800>
    2e50:	01006618 	0x1006618
    2e54:	0429116e 	tgeiu	at,4462
    2e58:	91020000 	lbu	v0,0(t0)
    2e5c:	861b0070 	lh	k1,112(s0)
    2e60:	01000009 	jalr	zero,t0
    2e64:	0033053f 	0x33053f
    2e68:	27a40000 	addiu	a0,sp,0
    2e6c:	018c0040 	0x18c0040
    2e70:	9c010000 	0x9c010000
    2e74:	00000655 	0x655
    2e78:	0064661c 	0x64661c
    2e7c:	da1b3f01 	ldc2	$27,16129(s0)
    2e80:	02000001 	movf	zero,s0,$fcc0
    2e84:	72180091 	0x72180091
    2e88:	06400100 	bltz	s2,328c <sigill_handler-0x3fcd74>
    2e8c:	00000033 	tltu	zero,zero
    2e90:	18749102 	0x18749102
    2e94:	00646666 	0x646666
    2e98:	29114101 	slti	s1,t0,16641
    2e9c:	02000004 	sllv	zero,zero,s0
    2ea0:	76186491 	jalx	8619244 <end+0x820f244>
    2ea4:	42010061 	c0	0x10061
    2ea8:	00021408 	0x21408
    2eac:	70910200 	0x70910200
    2eb0:	0009c719 	0x9c719
    2eb4:	08430100 	j	10c0400 <end+0xcb6400>
    2eb8:	00000116 	0x116
    2ebc:	196c9102 	0x196c9102
    2ec0:	000009be 	0x9be
    2ec4:	160e4301 	bne	s0,t6,13acc <sigill_handler-0x3ec534>
    2ec8:	02000001 	movf	zero,s0,$fcc0
    2ecc:	69186891 	0x69186891
    2ed0:	08440100 	j	1100400 <end+0xcf6400>
    2ed4:	00000116 	0x116
    2ed8:	00609102 	0x609102
    2edc:	000ab21d 	0xab21d
    2ee0:	051c0100 	0x51c0100
    2ee4:	00000033 	tltu	zero,zero
    2ee8:	00402660 	0x402660
    2eec:	00000144 	0x144
    2ef0:	67179c01 	0x67179c01
    2ef4:	0100000a 	movz	zero,t0,zero
    2ef8:	0371161c 	0x371161c
    2efc:	91020000 	lbu	v0,0(t0)
    2f00:	08dd1700 	j	3745c00 <end+0x333bc00>
    2f04:	1c010000 	0x1c010000
    2f08:	00003320 	0x3320
    2f0c:	04910200 	bgezal	a0,3710 <sigill_handler-0x3fc8f0>
    2f10:	0100721e 	0x100721e
    2f14:	0033061d 	0x33061d
    2f18:	66180000 	0x66180000
    2f1c:	21010064 	addi	at,t0,100
    2f20:	0001da0d 	break	0x1,0x368
    2f24:	70910200 	0x70910200
    2f28:	00617618 	0x617618
    2f2c:	b6082a01 	0xb6082a01
    2f30:	02000001 	movf	zero,s0,$fcc0
    2f34:	66185c91 	0x66185c91
    2f38:	01006466 	0x1006466
    2f3c:	0429112b 	tgeiu	at,4395
    2f40:	91020000 	lbu	v0,0(t0)
    2f44:	09c71960 	j	71c6580 <end+0x6dbc580>
    2f48:	2c010000 	sltiu	at,zero,0
    2f4c:	00011608 	0x11608
    2f50:	64910200 	0x64910200
    2f54:	0009be19 	0x9be19
    2f58:	0e2c0100 	jal	8b00400 <end+0x86f6400>
    2f5c:	00000116 	0x116
    2f60:	1f689102 	0x1f689102
    2f64:	00402678 	0x402678
    2f68:	0000002c 	0x2c
    2f6c:	000006f8 	0x6f8
    2f70:	00725f18 	0x725f18
    2f74:	33022301 	andi	v0,t8,0x2301
    2f78:	02000000 	0x2000000
    2f7c:	1f005491 	bgtz	t8,181c4 <sigill_handler-0x3e7e3c>
    2f80:	004026a4 	0x4026a4
    2f84:	00000038 	0x38
    2f88:	00000714 	0x714
    2f8c:	00725f18 	0x725f18
    2f90:	33022601 	andi	v0,t8,0x2601
    2f94:	02000000 	0x2000000
    2f98:	1a005891 	blez	s0,191e0 <sigill_handler-0x3e6e20>
    2f9c:	00402710 	0x402710
    2fa0:	0000006c 	0x6c
    2fa4:	01006918 	0x1006918
    2fa8:	00330b33 	tltu	at,s3,0x2c
    2fac:	91020000 	lbu	v0,0(t0)
    2fb0:	271c1a50 	addiu	gp,t8,6736
    2fb4:	00400040 	0x400040
    2fb8:	5f180000 	0x5f180000
    2fbc:	35010072 	ori	at,t0,0x72
    2fc0:	00003303 	sra	a2,zero,0xc
    2fc4:	6c910200 	0x6c910200
    2fc8:	00000000 	nop
    2fcc:	0000072a 	0x72a
    2fd0:	0dff0004 	jal	7fc0010 <end+0x7bb6010>
    2fd4:	01040000 	0x1040000
    2fd8:	00000090 	0x90
    2fdc:	000a320c 	syscall	0x28c8
    2fe0:	00004900 	sll	t1,zero,0x4
    2fe4:	402f9000 	0x402f9000
    2fe8:	00040000 	sll	zero,a0,0x0
    2fec:	00103400 	sll	a2,s0,0x10
    2ff0:	05040200 	0x5040200
    2ff4:	00746e69 	0x746e69
    2ff8:	2d070403 	sltiu	a3,t0,1027
    2ffc:	03000000 	0x3000000
    3000:	00730601 	0x730601
    3004:	02030000 	0x2030000
    3008:	0001ac05 	0x1ac05
    300c:	05080300 	tgei	t0,768
    3010:	00000000 	nop
    3014:	71080103 	0x71080103
    3018:	03000000 	0x3000000
    301c:	018c0702 	0x18c0702
    3020:	08030000 	j	c0000 <sigill_handler-0x340000>
    3024:	00002307 	0x2307
    3028:	0ad10400 	j	b441000 <end+0xb037000>
    302c:	07020000 	bltzl	t8,3030 <sigill_handler-0x3fcfd0>
    3030:	00004817 	0x4817
    3034:	001d0400 	sll	zero,sp,0x10
    3038:	09020000 	j	4080000 <end+0x3c76000>
    303c:	00002c16 	0x2c16
    3040:	04750400 	0x4750400
    3044:	0a020000 	j	8080000 <end+0x7c76000>
    3048:	00008117 	0x8117
    304c:	07040300 	0x7040300
    3050:	00000028 	0x28
    3054:	65645005 	0x65645005
    3058:	10970800 	beq	a0,s7,505c <sigill_handler-0x3fafa4>
    305c:	00000075 	0x75
    3060:	00041506 	0x41506
    3064:	08039800 	j	e6000 <sigill_handler-0x31a000>
    3068:	0000fb08 	0xfb08
    306c:	04320700 	bltzall	at,4c70 <sigill_handler-0x3fb390>
    3070:	0a030000 	j	80c0000 <end+0x7cb6000>
    3074:	0000fb10 	0xfb10
    3078:	e9070000 	swc2	$7,0(t0)
    307c:	03000003 	0x3000003
    3080:	0081100d 	break	0x81,0x40
    3084:	08800000 	j	2000000 <end+0x1bf6000>
    3088:	03006968 	0x3006968
    308c:	0081100e 	0x81100e
    3090:	08840000 	j	2100000 <end+0x1cf6000>
    3094:	03006f6c 	0x3006f6c
    3098:	0081100f 	0x81100f
    309c:	07880000 	tgei	gp,0
    30a0:	0000028f 	sync	0xa
    30a4:	81101003 	lb	s0,4099(t0)
    30a8:	8c000000 	lw	zero,0(zero)
    30ac:	00026807 	srav	t5,v0,zero
    30b0:	10110300 	beq	zero,s1,3cb4 <sigill_handler-0x3fc34c>
    30b4:	00000081 	0x81
    30b8:	02d90790 	0x2d90790
    30bc:	12030000 	beq	s0,v1,30c0 <sigill_handler-0x3fcf40>
    30c0:	00008110 	0x8110
    30c4:	09009400 	j	4025000 <end+0x3c1b000>
    30c8:	00000081 	0x81
    30cc:	0000010b 	0x10b
    30d0:	00002c0a 	0x2c0a
    30d4:	06001f00 	bltz	s0,acd8 <sigill_handler-0x3f5328>
    30d8:	0000007f 	0x7f
    30dc:	10060404 	beq	zero,a2,40f0 <sigill_handler-0x3fbf10>
    30e0:	00000126 	0x126
    30e4:	67697308 	0x67697308
    30e8:	0b070400 	j	c1c1000 <end+0xbdb7000>
    30ec:	00000069 	0x69
    30f0:	7f040000 	0x7f040000
    30f4:	04000000 	bltz	zero,30f8 <sigill_handler-0x3fcf08>
    30f8:	010b0308 	0x10b0308
    30fc:	8c060000 	lw	a2,0(zero)
    3100:	08000005 	j	14 <sigill_handler-0x3fffec>
    3104:	5a080a04 	0x5a080a04
    3108:	07000001 	bltz	t8,3110 <sigill_handler-0x3fcef0>
    310c:	000001b6 	tne	zero,zero,0x6
    3110:	65100b04 	0x65100b04
    3114:	00000001 	movf	zero,zero,$fcc0
    3118:	00008807 	srav	s1,zero,zero
    311c:	100c0400 	beq	zero,t4,4120 <sigill_handler-0x3fbee0>
    3120:	00000126 	0x126
    3124:	650b0004 	0x650b0004
    3128:	0c000001 	jal	4 <sigill_handler-0x3ffffc>
    312c:	00000025 	move	zero,zero
    3130:	5a040d00 	0x5a040d00
    3134:	0e000001 	jal	8000004 <end+0x7bf6004>
    3138:	02170508 	0x2170508
    313c:	0000018f 	sync	0x6
    3140:	0003ca07 	0x3ca07
    3144:	02170500 	0x2170500
    3148:	000002bc 	0x2bc
    314c:	03a90700 	0x3a90700
    3150:	17050000 	bne	t8,a1,3154 <sigill_handler-0x3fceac>
    3154:	0002c202 	srl	t8,v0,0x8
    3158:	0f000400 	jal	c001000 <end+0xbbf7000>
    315c:	00766e45 	0x766e45
    3160:	150501f8 	bne	t0,a1,3944 <sigill_handler-0x3fc6bc>
    3164:	0002bc08 	0x2bc08
    3168:	03b10700 	0x3b10700
    316c:	16050000 	bne	s0,a1,3170 <sigill_handler-0x3fce90>
    3170:	00009413 	0x9413
    3174:	70070000 	madd	zero,a3
    3178:	05000003 	bltz	t0,3188 <sigill_handler-0x3fce78>
    317c:	016b1217 	0x16b1217
    3180:	07980000 	0x7980000
    3184:	000002a8 	0x2a8
    3188:	69081805 	0x69081805
    318c:	a0000000 	sb	zero,0(zero)
    3190:	00035c07 	0x35c07
    3194:	08190500 	j	641400 <end+0x237400>
    3198:	00000069 	0x69
    319c:	03f407a4 	0x3f407a4
    31a0:	1a050000 	0x1a050000
    31a4:	00006908 	0x6908
    31a8:	cb07a800 	lwc2	$7,-22528(t8)
    31ac:	05000005 	bltz	t0,31c4 <sigill_handler-0x3fce3c>
    31b0:	0069081b 	0x69081b
    31b4:	07ac0000 	teqi	sp,0
    31b8:	00000396 	0x396
    31bc:	ec071c05 	0xec071c05
    31c0:	b0000002 	0xb0000002
    31c4:	00034507 	0x34507
    31c8:	131d0500 	beq	t8,sp,45cc <sigill_handler-0x3fba34>
    31cc:	000002c8 	0x2c8
    31d0:	030b07b4 	teq	t8,t3,0x1e
    31d4:	1e050000 	0x1e050000
    31d8:	00006908 	0x6908
    31dc:	0207bc00 	0x207bc00
    31e0:	05000004 	bltz	t0,31f4 <sigill_handler-0x3fce0c>
    31e4:	00690821 	addu	at,v1,t1
    31e8:	07c00000 	bltz	s8,31ec <sigill_handler-0x3fce14>
    31ec:	0000041f 	0x41f
    31f0:	69082205 	0x69082205
    31f4:	c4000000 	lwc1	$f0,0(zero)
    31f8:	0002e107 	0x2e107
    31fc:	08230500 	j	8c1400 <end+0x4b7400>
    3200:	00000069 	0x69
    3204:	02af07c8 	0x2af07c8
    3208:	24050000 	li	a1,0
    320c:	00006908 	0x6908
    3210:	3807cc00 	xori	a3,zero,0xcc00
    3214:	05000003 	bltz	t0,3224 <sigill_handler-0x3fcddc>
    3218:	00690825 	or	at,v1,t1
    321c:	07d00000 	bltzal	s8,3220 <sigill_handler-0x3fcde0>
    3220:	00000272 	tlt	zero,zero,0x9
    3224:	69082805 	0x69082805
    3228:	d4000000 	ldc1	$f0,0(zero)
    322c:	00044d07 	0x44d07
    3230:	082b0500 	j	ac1400 <end+0x6b7400>
    3234:	00000069 	0x69
    3238:	036507d8 	0x36507d8
    323c:	2e050000 	sltiu	a1,s0,0
    3240:	0001260b 	0x1260b
    3244:	7907dc00 	0x7907dc00
    3248:	05000003 	bltz	t0,3258 <sigill_handler-0x3fcda8>
    324c:	01260b2f 	0x1260b2f
    3250:	07e00000 	bltz	ra,3254 <sigill_handler-0x3fcdac>
    3254:	00000321 	0x321
    3258:	260b3005 	addiu	t3,s0,12293
    325c:	e4000001 	swc1	$f0,1(zero)
    3260:	00048a07 	0x48a07
    3264:	08310500 	j	c41400 <end+0x837400>
    3268:	00000069 	0x69
    326c:	038907e8 	0x38907e8
    3270:	32050000 	andi	a1,s0,0x0
    3274:	00006908 	0x6908
    3278:	1307ec00 	beq	t8,a3,ffffe27c <end+0xffbf427c>
    327c:	05000003 	bltz	t0,328c <sigill_handler-0x3fcd74>
    3280:	02f21333 	tltu	s7,s2,0x4c
    3284:	00f00000 	0xf00000
    3288:	018f040d 	break	0x18f,0x10
    328c:	040d0000 	0x40d0000
    3290:	000002bc 	0x2bc
    3294:	1d05080e 	0x1d05080e
    3298:	0002ec02 	srl	sp,v0,0x10
    329c:	03b80700 	0x3b80700
    32a0:	1d050000 	0x1d050000
    32a4:	0002bc02 	srl	s7,v0,0x10
    32a8:	a0070000 	sb	a3,0(zero)
    32ac:	05000003 	bltz	t0,32bc <sigill_handler-0x3fcd44>
    32b0:	02c2021d 	0x2c2021d
    32b4:	00040000 	sll	zero,a0,0x0
    32b8:	0088040d 	break	0x88,0x10
    32bc:	32090000 	andi	t1,s0,0x0
    32c0:	02000001 	movf	zero,s0,$fcc0
    32c4:	0a000003 	j	800000c <end+0x7bf600c>
    32c8:	0000002c 	0x2c
    32cc:	01030020 	add	zero,t0,v1
    32d0:	00007a06 	0x7a06
    32d4:	03021000 	0x3021000
    32d8:	07110000 	bgezal	t8,32dc <sigill_handler-0x3fcd24>
    32dc:	00002c04 	0x2c04
    32e0:	06090600 	tgeiu	s0,1536
    32e4:	0000034d 	break	0x0,0xd
    32e8:	000b2312 	0xb2312
    32ec:	59120000 	0x59120000
    32f0:	0100000a 	movz	zero,t0,zero
    32f4:	000ac212 	0xac212
    32f8:	ff120200 	0xff120200
    32fc:	0300000a 	movz	zero,t8,zero
    3300:	000a3e12 	0xa3e12
    3304:	0b120400 	j	c481000 <end+0xc077000>
    3308:	0500000b 	bltz	t0,3338 <sigill_handler-0x3fccc8>
    330c:	000b4612 	0xb4612
    3310:	a0120600 	sb	s2,1536(zero)
    3314:	0700000a 	bltz	t8,3340 <sigill_handler-0x3fccc0>
    3318:	0a271300 	j	89c4c00 <end+0x85bac00>
    331c:	04040000 	0x4040000
    3320:	77081406 	jalx	c205018 <end+0xbdfb018>
    3324:	07000003 	bltz	t8,3334 <sigill_handler-0x3fcccc>
    3328:	00000a63 	0xa63
    332c:	77071506 	jalx	c1c5418 <end+0xbdbb418>
    3330:	00000003 	sra	zero,zero,0x0
    3334:	000b5d14 	0xb5d14
    3338:	08160600 	j	581800 <end+0x177800>
    333c:	00000069 	0x69
    3340:	09000400 	j	4001000 <end+0x3bf7000>
    3344:	00000302 	srl	zero,zero,0xc
    3348:	00000388 	0x388
    334c:	00002c15 	0x2c15
    3350:	0003ff00 	sll	ra,v1,0x1c
    3354:	000a9606 	0xa9606
    3358:	19060800 	0x19060800
    335c:	0003b008 	0x3b008
    3360:	0b180700 	j	c601c00 <end+0xc1f7c00>
    3364:	1a060000 	0x1a060000
    3368:	00002506 	0x2506
    336c:	b7070000 	0xb7070000
    3370:	0600000a 	bltz	s0,339c <sigill_handler-0x3fcc64>
    3374:	0069081b 	0x69081b
    3378:	00040000 	sll	zero,a0,0x0
    337c:	000ae306 	0xae306
    3380:	1e060800 	0x1e060800
    3384:	0003d808 	0x3d808
    3388:	0b180700 	j	c601c00 <end+0xc1f7c00>
    338c:	1f060000 	0x1f060000
    3390:	00002506 	0x2506
    3394:	6c070000 	0x6c070000
    3398:	0600000a 	bltz	s0,33c4 <sigill_handler-0x3fcc3c>
    339c:	00690820 	add	at,v1,t1
    33a0:	00040000 	sll	zero,a0,0x0
    33a4:	000a7e06 	0xa7e06
    33a8:	23060400 	addi	a2,t8,1024
    33ac:	0003f308 	0x3f308
    33b0:	0b180700 	j	c601c00 <end+0xc1f7c00>
    33b4:	24060000 	li	a2,0
    33b8:	00002506 	0x2506
    33bc:	06000000 	bltz	s0,33c0 <sigill_handler-0x3fcc40>
    33c0:	00000b51 	0xb51
    33c4:	08270608 	j	9c1820 <end+0x5b7820>
    33c8:	0000041b 	0x41b
    33cc:	000b1807 	srav	v1,t3,zero
    33d0:	06280600 	tgei	s1,1536
    33d4:	00000025 	move	zero,zero
    33d8:	0ab70700 	j	adc1c00 <end+0xa9b7c00>
    33dc:	29060000 	slti	a2,t0,0
    33e0:	00006908 	0x6908
    33e4:	13000400 	beqz	t8,43e8 <sigill_handler-0x3fbc18>
    33e8:	00000af2 	tlt	zero,zero,0x2b
    33ec:	2c060400 	sltiu	a2,zero,1024
    33f0:	00043708 	0x43708
    33f4:	0a630700 	j	98c1c00 <end+0x94b7c00>
    33f8:	2d060000 	sltiu	a2,t0,0
    33fc:	00037707 	0x37707
    3400:	0d000000 	jal	4000000 <end+0x3bf6000>
    3404:	00043d04 	0x43d04
    3408:	64461600 	0x64461600
    340c:	23070c00 	addi	a3,t8,3072
    3410:	00047108 	0x47108
    3414:	087b0700 	j	1ec1c00 <end+0x1ab7c00>
    3418:	24070000 	li	a3,0
    341c:	00006908 	0x6908
    3420:	05070000 	0x5070000
    3424:	07000009 	bltz	t8,344c <sigill_handler-0x3fcbb4>
    3428:	00690825 	or	at,v1,t1
    342c:	07040000 	0x7040000
    3430:	000008d9 	0x8d9
    3434:	69082607 	0x69082607
    3438:	08000000 	j	0 <sigill_handler-0x400000>
    343c:	09041700 	j	4105c00 <end+0x3cfbc00>
    3440:	0000005d 	0x5d
    3444:	00000484 	0x484
    3448:	00002c15 	0x2c15
    344c:	000fff00 	sll	ra,t7,0x1c
    3450:	000a7518 	0xa7518
    3454:	08070100 	j	1c0400 <sigill_handler-0x23fc00>
    3458:	00000473 	tltu	zero,zero,0x11
    345c:	03051000 	0x3051000
    3460:	00409000 	0x409000
    3464:	000ad819 	0xad819
    3468:	05880100 	tgei	t4,256
    346c:	00000025 	move	zero,zero
    3470:	0040334c 	syscall	0x100cd
    3474:	00000044 	0x44
    3478:	671a9c01 	0x671a9c01
    347c:	0100000b 	movn	zero,t0,zero
    3480:	00250572 	tlt	at,a1,0x15
    3484:	32b00000 	andi	s0,s5,0x0
    3488:	009c0040 	0x9c0040
    348c:	9c010000 	0x9c010000
    3490:	000004f6 	tne	zero,zero,0x13
    3494:	000a671b 	0xa671b
    3498:	1e720100 	0x1e720100
    349c:	000004f6 	tne	zero,zero,0x13
    34a0:	1c009102 	bgtz	zero,fffe78ac <end+0xffbdd8ac>
    34a4:	006e656c 	0x6e656c
    34a8:	25067601 	addiu	a2,t0,30209
    34ac:	02000000 	0x2000000
    34b0:	721c7091 	0x721c7091
    34b4:	01007165 	0x1007165
    34b8:	04fc177b 	0x4fc177b
    34bc:	91020000 	lbu	v0,0(t0)
    34c0:	040d0074 	0x40d0074
    34c4:	00000309 	0x309
    34c8:	041b040d 	0x41b040d
    34cc:	8a1a0000 	lwl	k0,0(s0)
    34d0:	0100000a 	movz	zero,t0,zero
    34d4:	00250567 	0x250567
    34d8:	32440000 	andi	a0,s2,0x0
    34dc:	006c0040 	0x6c0040
    34e0:	9c010000 	0x9c010000
    34e4:	0000054a 	0x54a
    34e8:	0009be1b 	0x9be1b
    34ec:	17670100 	bne	k1,a3,38f0 <sigill_handler-0x3fc710>
    34f0:	00000069 	0x69
    34f4:	1b009102 	blez	t8,fffe7900 <end+0xffbdd900>
    34f8:	00000908 	0x908
    34fc:	69256701 	0x69256701
    3500:	02000000 	0x2000000
    3504:	721c0491 	0x721c0491
    3508:	01007165 	0x1007165
    350c:	054a1668 	tlti	t2,5736
    3510:	91020000 	lbu	v0,0(t0)
    3514:	040d0070 	0x40d0070
    3518:	000003f3 	tltu	zero,zero,0xf
    351c:	000b341a 	0xb341a
    3520:	055d0100 	0x55d0100
    3524:	00000025 	move	zero,zero
    3528:	004031e8 	0x4031e8
    352c:	0000005c 	0x5c
    3530:	05899c01 	tgeiu	t4,-25599
    3534:	be1b0000 	cache	0x1b,0(s0)
    3538:	01000009 	jalr	zero,t0
    353c:	0069175d 	0x69175d
    3540:	91020000 	lbu	v0,0(t0)
    3544:	65721c00 	0x65721c00
    3548:	5e010071 	0x5e010071
    354c:	00058916 	0x58916
    3550:	70910200 	0x70910200
    3554:	d8040d00 	ldc2	$4,3328(zero)
    3558:	1a000003 	blez	s0,3568 <sigill_handler-0x3fca98>
    355c:	00000a4a 	0xa4a
    3560:	25055201 	addiu	a1,t0,20993
    3564:	7c000000 	0x7c000000
    3568:	6c004031 	0x6c004031
    356c:	01000000 	0x1000000
    3570:	0005d79c 	0x5d79c
    3574:	09be1b00 	j	6f86c00 <end+0x6b7cc00>
    3578:	52010000 	beql	s0,at,357c <sigill_handler-0x3fca84>
    357c:	0000691a 	0x691a
    3580:	00910200 	0x910200
    3584:	0009c71b 	0x9c71b
    3588:	28520100 	slti	s2,v0,256
    358c:	00000069 	0x69
    3590:	1c049102 	0x1c049102
    3594:	00716572 	tlt	v1,s1,0x195
    3598:	d7195301 	ldc1	$f25,21249(t8)
    359c:	02000005 	0x2000005
    35a0:	0d007091 	jal	401c244 <end+0x3c12244>
    35a4:	0003b004 	sllv	s6,v1,zero
    35a8:	0a1d1a00 	j	8746800 <end+0x833c800>
    35ac:	3c010000 	lui	at,0x0
    35b0:	00002505 	0x2505
    35b4:	4030a400 	0x4030a400
    35b8:	0000d800 	sll	k1,zero,0x0
    35bc:	509c0100 	beql	a0,gp,39c0 <sigill_handler-0x3fc640>
    35c0:	1b000006 	blez	t8,35dc <sigill_handler-0x3fca24>
    35c4:	000009be 	0x9be
    35c8:	69153c01 	0x69153c01
    35cc:	02000000 	0x2000000
    35d0:	081b0091 	j	6c0244 <end+0x2b6244>
    35d4:	01000009 	jalr	zero,t0
    35d8:	0069233c 	0x69233c
    35dc:	91020000 	lbu	v0,0(t0)
    35e0:	02b71b04 	0x2b71b04
    35e4:	3c010000 	lui	at,0x0
    35e8:	00047131 	tgeu	zero,a0,0x1c4
    35ec:	08910200 	j	2440800 <end+0x2036800>
    35f0:	0100721c 	0x100721c
    35f4:	0025063d 	0x25063d
    35f8:	91020000 	lbu	v0,0(t0)
    35fc:	03401d6c 	0x3401d6c
    3600:	3e010000 	0x3e010000
    3604:	00006908 	0x6908
    3608:	70910200 	0x70910200
    360c:	7165721c 	0x7165721c
    3610:	143f0100 	bne	at,ra,3a14 <sigill_handler-0x3fc5ec>
    3614:	00000650 	0x650
    3618:	00689102 	0x689102
    361c:	0388040d 	break	0x388,0x10
    3620:	ac1a0000 	sw	k0,0(zero)
    3624:	0100000a 	movz	zero,t0,zero
    3628:	00250524 	0x250524
    362c:	30040000 	andi	a0,zero,0x0
    3630:	00a00040 	0xa00040
    3634:	9c010000 	0x9c010000
    3638:	000006bb 	0x6bb
    363c:	000a671b 	0xa671b
    3640:	1c240100 	0x1c240100
    3644:	000004f6 	tne	zero,zero,0x13
    3648:	1b009102 	blez	t8,fffe7a54 <end+0xffbdda54>
    364c:	000008dc 	0x8dc
    3650:	69282401 	0x69282401
    3654:	02000000 	0x2000000
    3658:	661e0491 	0x661e0491
    365c:	24010064 	li	at,100
    3660:	0004373a 	0x4373a
    3664:	08910200 	j	2440800 <end+0x2036800>
    3668:	0003401d 	0x3401d
    366c:	08250100 	j	940400 <end+0x536400>
    3670:	00000069 	0x69
    3674:	1c749102 	0x1c749102
    3678:	00716572 	tlt	v1,s1,0x195
    367c:	bb152601 	swr	s5,9729(t8)
    3680:	02000006 	srlv	zero,zero,s0
    3684:	0d007091 	jal	401c244 <end+0x3c12244>
    3688:	00034d04 	0x34d04
    368c:	0b401f00 	j	d007c00 <end+0xcbfdc00>
    3690:	16010000 	bne	s0,at,3694 <sigill_handler-0x3fc96c>
    3694:	0000250c 	syscall	0x94
    3698:	402f9000 	0x402f9000
    369c:	00007400 	sll	t6,zero,0x10
    36a0:	279c0100 	addiu	gp,gp,256
    36a4:	1b000007 	blez	t8,36c4 <sigill_handler-0x3fc93c>
    36a8:	00000c1c 	0xc1c
    36ac:	69181601 	0x69181601
    36b0:	02000000 	0x2000000
    36b4:	2e1b0091 	sltiu	k1,s0,145
    36b8:	0100000b 	movn	zero,t0,zero
    36bc:	04712416 	bgezal	v1,c718 <sigill_handler-0x3f38e8>
    36c0:	91020000 	lbu	v0,0(t0)
    36c4:	02b71b04 	0x2b71b04
    36c8:	16010000 	bne	s0,at,36cc <sigill_handler-0x3fc934>
    36cc:	00047131 	tgeu	zero,a0,0x1c4
    36d0:	08910200 	j	2440800 <end+0x2036800>
    36d4:	0003401b 	0x3401b
    36d8:	3f160100 	0x3f160100
    36dc:	00000727 	0x727
    36e0:	1d0c9102 	0x1d0c9102
    36e4:	000007fa 	0x7fa
    36e8:	69081701 	0x69081701
    36ec:	02000000 	0x2000000
    36f0:	0d007091 	jal	401c244 <end+0x3c12244>
    36f4:	00006904 	0x6904
    36f8:	03c90000 	0x3c90000
    36fc:	00040000 	sll	zero,a0,0x0
    3700:	00000fdb 	0xfdb
    3704:	00900104 	0x900104
    3708:	9e0c0000 	0x9e0c0000
    370c:	4900000b 	bc2f	373c <sigill_handler-0x3fc8c4>
    3710:	90000000 	lbu	zero,0(zero)
    3714:	00004033 	tltu	zero,zero,0x100
    3718:	95000003 	lhu	zero,3(t0)
    371c:	02000011 	mthi	s0
    3720:	6e690504 	0x6e690504
    3724:	04030074 	bgezl	zero,38f8 <sigill_handler-0x3fc708>
    3728:	00002d07 	0x2d07
    372c:	06010300 	bgez	s0,4330 <sigill_handler-0x3fbcd0>
    3730:	00000073 	tltu	zero,zero,0x1
    3734:	ac050203 	sw	a1,515(zero)
    3738:	03000001 	movf	zero,t8,$fcc0
    373c:	00000508 	0x508
    3740:	01030000 	0x1030000
    3744:	00007108 	0x7108
    3748:	07020300 	bltzl	t8,434c <sigill_handler-0x3fbcb4>
    374c:	0000018c 	syscall	0x6
    3750:	23070803 	addi	a3,t8,2051
    3754:	04000000 	bltz	zero,3758 <sigill_handler-0x3fc8a8>
    3758:	0000001d 	0x1d
    375c:	2c160903 	sltiu	s6,zero,2307
    3760:	03000000 	0x3000000
    3764:	00280704 	0x280704
    3768:	80050000 	lb	a1,0(zero)
    376c:	80000000 	lb	zero,0(zero)
    3770:	06000000 	bltz	s0,3774 <sigill_handler-0x3fc88c>
    3774:	0000002c 	0x2c
    3778:	0103007f 	0x103007f
    377c:	00007a06 	0x7a06
    3780:	65440700 	0x65440700
    3784:	021c0076 	tne	s0,gp,0x1
    3788:	00f00818 	0xf00818
    378c:	7e080000 	0x7e080000
    3790:	02000008 	jr	s0
    3794:	00250619 	0x250619
    3798:	08000000 	j	0 <sigill_handler-0x400000>
    379c:	00000885 	0x885
    37a0:	f0081a02 	0xf0081a02
    37a4:	04000000 	bltz	zero,37a8 <sigill_handler-0x3fc858>
    37a8:	0008c808 	0x8c808
    37ac:	081b0200 	j	6c0800 <end+0x2b6800>
    37b0:	00000150 	0x150
    37b4:	088e0808 	j	2382020 <end+0x1f78020>
    37b8:	1c020000 	0x1c020000
    37bc:	00017b08 	0x17b08
    37c0:	63080c00 	0x63080c00
    37c4:	02000008 	jr	s0
    37c8:	0190081d 	0x190081d
    37cc:	08100000 	j	400000 <sigill_handler>
    37d0:	000008ef 	0x8ef
    37d4:	f2081e02 	0xf2081e02
    37d8:	14000001 	bnez	zero,37e0 <sigill_handler-0x3fc820>
    37dc:	00082e08 	0x82e08
    37e0:	081f0200 	j	7c0800 <end+0x3b6800>
    37e4:	0000020c 	syscall	0x8
    37e8:	04090018 	tgeiu	zero,24
    37ec:	00000080 	sll	zero,zero,0x2
    37f0:	0000250a 	0x250a
    37f4:	00011400 	sll	v0,at,0x10
    37f8:	01140b00 	0x1140b00
    37fc:	4e0b0000 	c3	0xb0000
    3800:	0b000001 	j	c000004 <end+0xbbf6004>
    3804:	0000005d 	0x5d
    3808:	00005d0b 	0x5d0b
    380c:	04090000 	tgeiu	zero,0
    3810:	0000011a 	0x11a
    3814:	00644607 	0x644607
    3818:	0823020c 	j	8c0830 <end+0x4b6830>
    381c:	0000014e 	0x14e
    3820:	00087b08 	0x87b08
    3824:	08240200 	j	900800 <end+0x4f6800>
    3828:	0000005d 	0x5d
    382c:	09050800 	j	4142000 <end+0x3d38000>
    3830:	25020000 	addiu	v0,t0,0
    3834:	00005d08 	0x5d08
    3838:	d9080400 	ldc2	$8,1024(t0)
    383c:	02000008 	jr	s0
    3840:	005d0826 	xor	at,v0,sp
    3844:	00080000 	sll	zero,t0,0x0
    3848:	0409040c 	tgeiu	zero,1036
    384c:	000000f6 	tne	zero,zero,0x3
    3850:	0000250a 	0x250a
    3854:	00017400 	sll	t6,at,0x10
    3858:	01140b00 	0x1140b00
    385c:	740b0000 	jalx	2c0000 <sigill_handler-0x140000>
    3860:	0b000001 	j	c000004 <end+0xbbf6004>
    3864:	0000005d 	0x5d
    3868:	00005d0b 	0x5d0b
    386c:	04090000 	tgeiu	zero,0
    3870:	0000017a 	0x17a
    3874:	5604090d 	bnel	s0,a0,5cac <sigill_handler-0x3fa354>
    3878:	0a000001 	j	8000004 <end+0x7bf6004>
    387c:	00000025 	move	zero,zero
    3880:	00000190 	0x190
    3884:	0001140b 	0x1140b
    3888:	04090000 	tgeiu	zero,0
    388c:	00000181 	0x181
    3890:	0000250a 	0x250a
    3894:	0001aa00 	sll	s5,at,0x8
    3898:	01140b00 	0x1140b00
    389c:	aa0b0000 	swl	t3,0(s0)
    38a0:	00000001 	movf	zero,zero,$fcc0
    38a4:	01b00409 	0x1b00409
    38a8:	6d0e0000 	0x6d0e0000
    38ac:	8c000008 	lw	zero,8(zero)
    38b0:	f2082a02 	0xf2082a02
    38b4:	08000001 	j	4 <sigill_handler-0x3ffffc>
    38b8:	000008d1 	0x8d1
    38bc:	70072b02 	0x70072b02
    38c0:	00000000 	nop
    38c4:	00089808 	0x89808
    38c8:	082c0200 	j	b00800 <end+0x6f6800>
    38cc:	0000005d 	0x5d
    38d0:	090f0880 	j	43c2200 <end+0x3fb8200>
    38d4:	2d020000 	sltiu	v0,t0,0
    38d8:	00005d08 	0x5d08
    38dc:	f8088400 	sdc2	$8,-31744(zero)
    38e0:	02000008 	jr	s0
    38e4:	02120e2e 	0x2120e2e
    38e8:	00880000 	0x880000
    38ec:	01960409 	0x1960409
    38f0:	250a0000 	addiu	t2,t0,0
    38f4:	0c000000 	jal	0 <sigill_handler-0x400000>
    38f8:	0b000002 	j	c000008 <end+0xbbf6008>
    38fc:	00000114 	0x114
    3900:	00005d0b 	0x5d0b
    3904:	04090000 	tgeiu	zero,0
    3908:	000001f8 	0x1f8
    390c:	00870409 	0x870409
    3910:	180f0000 	0x180f0000
    3914:	02000009 	jalr	zero,s0
    3918:	0087133e 	0x87133e
    391c:	18100000 	0x18100000
    3920:	01000002 	0x1000002
    3924:	03050c09 	0x3050c09
    3928:	00407030 	tge	v0,zero,0x1c0
    392c:	000bb711 	0xbb711
    3930:	05510100 	bgezal	t2,3d34 <sigill_handler-0x3fc2cc>
    3934:	00000025 	move	zero,zero
    3938:	00403644 	0x403644
    393c:	0000004c 	syscall	0x1
    3940:	026a9c01 	0x26a9c01
    3944:	66120000 	0x66120000
    3948:	51010064 	beql	t0,at,3adc <sigill_handler-0x3fc524>
    394c:	0001141a 	0x1141a
    3950:	00910200 	0x910200
    3954:	000a0b13 	0xa0b13
    3958:	2b510100 	slti	s1,k0,256
    395c:	000001aa 	0x1aa
    3960:	00049102 	srl	s2,a0,0x4
    3964:	000bac14 	0xbac14
    3968:	054d0100 	0x54d0100
    396c:	00000025 	move	zero,zero
    3970:	0040361c 	0x40361c
    3974:	00000028 	0x28
    3978:	02939c01 	0x2939c01
    397c:	66120000 	0x66120000
    3980:	4d010064 	bc3t	3b14 <sigill_handler-0x3fc4ec>
    3984:	0001141b 	0x1141b
    3988:	00910200 	0x910200
    398c:	0b741100 	j	dd04400 <end+0xd8fa400>
    3990:	45010000 	bc1t	3994 <sigill_handler-0x3fc66c>
    3994:	00002505 	0x2505
    3998:	4035b400 	0x4035b400
    399c:	00006800 	sll	t5,zero,0x0
    39a0:	f49c0100 	sdc1	$f28,256(a0)
    39a4:	12000002 	beqz	s0,39b0 <sigill_handler-0x3fc650>
    39a8:	01006466 	0x1006466
    39ac:	01141b45 	0x1141b45
    39b0:	91020000 	lbu	v0,0(t0)
    39b4:	75621200 	jalx	5884800 <end+0x547a800>
    39b8:	45010066 	bc1t	3b54 <sigill_handler-0x3fc4ac>
    39bc:	0001742b 	0x1742b
    39c0:	04910200 	bgezal	a0,41c4 <sigill_handler-0x3fbe3c>
    39c4:	01006e12 	0x1006e12
    39c8:	005d3645 	0x5d3645
    39cc:	91020000 	lbu	v0,0(t0)
    39d0:	09081308 	j	4204c20 <end+0x3dfac20>
    39d4:	45010000 	bc1t	39d8 <sigill_handler-0x3fc628>
    39d8:	00005d3f 	0x5d3f
    39dc:	0c910200 	jal	2440800 <end+0x2036800>
    39e0:	01007215 	0x1007215
    39e4:	00250646 	0x250646
    39e8:	91020000 	lbu	v0,0(t0)
    39ec:	94110070 	lhu	s1,112(zero)
    39f0:	0100000b 	movn	zero,t0,zero
    39f4:	0025052b 	0x25052b
    39f8:	34bc0000 	ori	gp,a1,0x0
    39fc:	00f80040 	0xf80040
    3a00:	9c010000 	0x9c010000
    3a04:	00000355 	0x355
    3a08:	00646612 	0x646612
    3a0c:	141a2b01 	bne	zero,k0,e614 <sigill_handler-0x3f19ec>
    3a10:	02000001 	movf	zero,s0,$fcc0
    3a14:	7f130091 	0x7f130091
    3a18:	0100000b 	movn	zero,t0,zero
    3a1c:	014e242b 	0x14e242b
    3a20:	91020000 	lbu	v0,0(t0)
    3a24:	006e1204 	0x6e1204
    3a28:	5d302b01 	0x5d302b01
    3a2c:	02000000 	0x2000000
    3a30:	08130891 	j	4c2244 <end+0xb8244>
    3a34:	01000009 	jalr	zero,t0
    3a38:	005d392b 	0x5d392b
    3a3c:	91020000 	lbu	v0,0(t0)
    3a40:	0063150c 	syscall	0x18c54
    3a44:	25062c01 	addiu	a2,t0,11265
    3a48:	02000000 	0x2000000
    3a4c:	16007091 	bnez	s0,1fc94 <sigill_handler-0x3e036c>
    3a50:	00000b8b 	0xb8b
    3a54:	25051c01 	addiu	a1,t0,7169
    3a58:	08000000 	j	0 <sigill_handler-0x400000>
    3a5c:	b4004034 	0xb4004034
    3a60:	01000000 	0x1000000
    3a64:	00038b9c 	0x38b9c
    3a68:	00721500 	0x721500
    3a6c:	25061d01 	addiu	a2,t0,7425
    3a70:	02000000 	0x2000000
    3a74:	66157091 	0x66157091
    3a78:	1e010064 	0x1e010064
    3a7c:	0001140d 	break	0x1,0x50
    3a80:	74910200 	jalx	2440800 <end+0x2036800>
    3a84:	0b841700 	j	e105c00 <end+0xdcfbc00>
    3a88:	12010000 	beq	s0,at,3a8c <sigill_handler-0x3fc574>
    3a8c:	00002505 	0x2505
    3a90:	40339000 	0x40339000
    3a94:	00007800 	sll	t7,zero,0x0
    3a98:	139c0100 	beq	gp,gp,3e9c <sigill_handler-0x3fc164>
    3a9c:	000008b3 	tltu	zero,zero,0x22
    3aa0:	25101201 	addiu	s0,t0,4609
    3aa4:	02000000 	0x2000000
    3aa8:	72150091 	0x72150091
    3aac:	06130100 	bgezall	s0,3eb0 <sigill_handler-0x3fc150>
    3ab0:	00000025 	move	zero,zero
    3ab4:	15709102 	bne	t3,s0,fffe7ec0 <end+0xffbddec0>
    3ab8:	01006466 	0x1006466
    3abc:	01140d14 	0x1140d14
    3ac0:	91020000 	lbu	v0,0(t0)
    3ac4:	17000074 	bnez	t8,3c98 <sigill_handler-0x3fc368>
    3ac8:	04000002 	bltz	zero,3ad4 <sigill_handler-0x3fc52c>
    3acc:	00114700 	sll	t0,s1,0x1c
    3ad0:	90010400 	lbu	at,1024(zero)
    3ad4:	0c000000 	jal	0 <sigill_handler-0x400000>
    3ad8:	00000bc1 	0xbc1
    3adc:	00000049 	0x49
    3ae0:	00403690 	0x403690
    3ae4:	000001d4 	0x1d4
    3ae8:	000012a9 	0x12a9
    3aec:	69050402 	0x69050402
    3af0:	0300746e 	0x300746e
    3af4:	000001ec 	0x1ec
    3af8:	3817d102 	xori	s7,zero,0xd102
    3afc:	04000000 	bltz	zero,3b00 <sigill_handler-0x3fc500>
    3b00:	002d0704 	0x2d0704
    3b04:	01040000 	0x1040000
    3b08:	00007306 	0x7306
    3b0c:	05020400 	bltzl	t0,4b10 <sigill_handler-0x3fb4f0>
    3b10:	000001ac 	0x1ac
    3b14:	00050804 	sllv	at,a1,zero
    3b18:	04000000 	bltz	zero,3b1c <sigill_handler-0x3fc4e4>
    3b1c:	00710801 	movt	at,v1,$fcc4
    3b20:	02040000 	0x2040000
    3b24:	00018c07 	0x18c07
    3b28:	07080400 	tgei	t8,1024
    3b2c:	00000023 	negu	zero,zero
    3b30:	28070404 	slti	a3,zero,1028
    3b34:	04000000 	bltz	zero,3b38 <sigill_handler-0x3fc4c8>
    3b38:	007a0601 	0x7a0601
    3b3c:	70050000 	madd	zero,a1
    3b40:	06000000 	bltz	s0,3b44 <sigill_handler-0x3fc4bc>
    3b44:	022b0304 	0x22b0304
    3b48:	28030000 	slti	v1,zero,0
    3b4c:	00008a1b 	0x8a1b
    3b50:	f3040700 	0xf3040700
    3b54:	03000001 	movf	zero,t8,$fcc0
    3b58:	00000232 	tlt	zero,zero,0x8
    3b5c:	7e186303 	0x7e186303
    3b60:	08000000 	j	0 <sigill_handler-0x400000>
    3b64:	00007704 	0x7704
    3b68:	0bcf0900 	j	f3c2400 <end+0xefb8400>
    3b6c:	01080000 	0x1080000
    3b70:	00c90804 	sllv	at,t1,a2
    3b74:	660a0000 	0x660a0000
    3b78:	05010064 	bgez	t0,3d0c <sigill_handler-0x3fc2f4>
    3b7c:	00002506 	0x2506
    3b80:	720a0000 	madd	s0,t2
    3b84:	01007465 	0x1007465
    3b88:	00250606 	0x250606
    3b8c:	00040000 	sll	zero,a0,0x0
    3b90:	000bdb0b 	0xbdb0b
    3b94:	05260100 	0x5260100
    3b98:	00000025 	move	zero,zero
    3b9c:	00403804 	sllv	a3,zero,v0
    3ba0:	00000060 	0x60
    3ba4:	010f9c01 	0x10f9c01
    3ba8:	660c0000 	0x660c0000
    3bac:	0100746d 	0x100746d
    3bb0:	009c1826 	xor	v1,a0,gp
    3bb4:	91020000 	lbu	v0,0(t0)
    3bb8:	610e0d00 	0x610e0d00
    3bbc:	27010070 	addiu	at,t8,112
    3bc0:	0000900a 	movz	s2,zero,zero
    3bc4:	74910200 	jalx	2440800 <end+0x2036800>
    3bc8:	0100720e 	0x100720e
    3bcc:	00250629 	0x250629
    3bd0:	91020000 	lbu	v0,0(t0)
    3bd4:	da0b0070 	ldc2	$11,112(s0)
    3bd8:	0100000b 	movn	zero,t0,zero
    3bdc:	0025051e 	0x25051e
    3be0:	37a40000 	ori	a0,sp,0x0
    3be4:	00600040 	0x600040
    3be8:	9c010000 	0x9c010000
    3bec:	00000163 	0x163
    3bf0:	0064660c 	syscall	0x19198
    3bf4:	25111e01 	addiu	s1,t0,7681
    3bf8:	02000000 	0x2000000
    3bfc:	660c0091 	0x660c0091
    3c00:	0100746d 	0x100746d
    3c04:	009c211e 	0x9c211e
    3c08:	91020000 	lbu	v0,0(t0)
    3c0c:	610e0d04 	0x610e0d04
    3c10:	1f010070 	0x1f010070
    3c14:	0000900a 	movz	s2,zero,zero
    3c18:	74910200 	jalx	2440800 <end+0x2036800>
    3c1c:	0100720e 	0x100720e
    3c20:	00250621 	0x250621
    3c24:	91020000 	lbu	v0,0(t0)
    3c28:	d90f0070 	ldc2	$15,112(t0)
    3c2c:	0100000b 	movn	zero,t0,zero
    3c30:	00250c16 	0x250c16
    3c34:	37400000 	ori	zero,k0,0x0
    3c38:	00640040 	0x640040
    3c3c:	9c010000 	0x9c010000
    3c40:	000001b8 	0x1b8
    3c44:	0064660c 	syscall	0x19198
    3c48:	25191601 	addiu	t9,t0,5633
    3c4c:	02000000 	0x2000000
    3c50:	660c0091 	0x660c0091
    3c54:	0100746d 	0x100746d
    3c58:	009c2916 	0x9c2916
    3c5c:	91020000 	lbu	v0,0(t0)
    3c60:	70610c04 	0x70610c04
    3c64:	36160100 	ori	s6,s0,0x100
    3c68:	00000090 	0x90
    3c6c:	0e089102 	jal	8224408 <end+0x7e1a408>
    3c70:	00787463 	0x787463
    3c74:	a2131701 	sb	s3,5889(s0)
    3c78:	02000000 	0x2000000
    3c7c:	10007091 	b	1fec4 <sigill_handler-0x3e013c>
    3c80:	00000be2 	0xbe2
    3c84:	900d0901 	lbu	t5,2305(zero)
    3c88:	b0004036 	0xb0004036
    3c8c:	01000000 	0x1000000
    3c90:	0002149c 	0x2149c
    3c94:	08151100 	j	544400 <end+0x13a400>
    3c98:	09010000 	j	4040000 <end+0x3c36000>
    3c9c:	00007c20 	0x7c20
    3ca0:	00910200 	0x910200
    3ca4:	0100730c 	syscall	0x401cc
    3ca8:	009c3209 	0x9c3209
    3cac:	91020000 	lbu	v0,0(t0)
    3cb0:	006c0c04 	0x6c0c04
    3cb4:	2c3c0901 	sltiu	gp,at,2305
    3cb8:	02000000 	0x2000000
    3cbc:	630e0891 	0x630e0891
    3cc0:	01007874 	teq	t0,zero,0x1e1
    3cc4:	0214140a 	0x214140a
    3cc8:	91020000 	lbu	v0,0(t0)
    3ccc:	00720e70 	tge	v1,s2,0x39
    3cd0:	25060e01 	addiu	a2,t0,3585
    3cd4:	02000000 	0x2000000
    3cd8:	08007491 	j	1d244 <sigill_handler-0x3e2dbc>
    3cdc:	0000a204 	0xa204
    3ce0:	03390000 	0x3390000
    3ce4:	00040000 	sll	zero,a0,0x0
    3ce8:	0000124e 	0x124e
    3cec:	00900104 	0x900104
    3cf0:	f40c0000 	sdc1	$f12,0(zero)
    3cf4:	4900000b 	bc2f	3d24 <sigill_handler-0x3fc2dc>
    3cf8:	70000000 	madd	zero,zero
    3cfc:	8c004038 	lw	zero,16440(zero)
    3d00:	83000000 	lb	zero,0(t8)
    3d04:	02000013 	mtlo	s0
    3d08:	6e690504 	0x6e690504
    3d0c:	04030074 	bgezl	zero,3ee0 <sigill_handler-0x3fc120>
    3d10:	00002d07 	0x2d07
    3d14:	06010300 	bgez	s0,4918 <sigill_handler-0x3fb6e8>
    3d18:	00000073 	tltu	zero,zero,0x1
    3d1c:	ac050203 	sw	a1,515(zero)
    3d20:	03000001 	movf	zero,t8,$fcc0
    3d24:	00000508 	0x508
    3d28:	01030000 	0x1030000
    3d2c:	00007108 	0x7108
    3d30:	07020300 	bltzl	t8,4934 <sigill_handler-0x3fb6cc>
    3d34:	0000018c 	syscall	0x6
    3d38:	23070803 	addi	a3,t8,2051
    3d3c:	04000000 	bltz	zero,3d40 <sigill_handler-0x3fc2c0>
    3d40:	0000001d 	0x1d
    3d44:	2c160902 	sltiu	s6,zero,2306
    3d48:	04000000 	bltz	zero,3d4c <sigill_handler-0x3fc2b4>
    3d4c:	00000475 	0x475
    3d50:	75170a02 	jalx	45c2808 <end+0x41b8808>
    3d54:	03000000 	0x3000000
    3d58:	00280704 	0x280704
    3d5c:	50050000 	beql	zero,a1,3d60 <sigill_handler-0x3fc2a0>
    3d60:	06006564 	bltz	s0,1d2f4 <sigill_handler-0x3e2d0c>
    3d64:	00691097 	0x691097
    3d68:	15060000 	bne	t0,a2,3d6c <sigill_handler-0x3fc294>
    3d6c:	98000004 	lwr	zero,4(zero)
    3d70:	ef080803 	0xef080803
    3d74:	07000000 	bltz	t8,3d78 <sigill_handler-0x3fc288>
    3d78:	00000432 	tlt	zero,zero,0x10
    3d7c:	ef100a03 	0xef100a03
    3d80:	00000000 	nop
    3d84:	0003e907 	0x3e907
    3d88:	100d0300 	beq	zero,t5,498c <sigill_handler-0x3fb674>
    3d8c:	00000075 	0x75
    3d90:	69680880 	0x69680880
    3d94:	100e0300 	beq	zero,t6,4998 <sigill_handler-0x3fb668>
    3d98:	00000075 	0x75
    3d9c:	6f6c0884 	0x6f6c0884
    3da0:	100f0300 	beq	zero,t7,49a4 <sigill_handler-0x3fb65c>
    3da4:	00000075 	0x75
    3da8:	028f0788 	0x28f0788
    3dac:	10030000 	beq	zero,v1,3db0 <sigill_handler-0x3fc250>
    3db0:	00007510 	0x7510
    3db4:	68078c00 	0x68078c00
    3db8:	03000002 	0x3000002
    3dbc:	00751011 	0x751011
    3dc0:	07900000 	bltzal	gp,3dc4 <sigill_handler-0x3fc23c>
    3dc4:	000002d9 	0x2d9
    3dc8:	75101203 	jalx	440480c <end+0x3ffa80c>
    3dcc:	94000000 	lhu	zero,0(zero)
    3dd0:	00750900 	0x750900
    3dd4:	00ff0000 	0xff0000
    3dd8:	2c0a0000 	sltiu	t2,zero,0
    3ddc:	1f000000 	bgtz	t8,3de0 <sigill_handler-0x3fc220>
    3de0:	007f0600 	0x7f0600
    3de4:	04040000 	0x4040000
    3de8:	011a1006 	srlv	v0,k0,t0
    3dec:	73080000 	madd	t8,t0
    3df0:	04006769 	bltz	zero,1db98 <sigill_handler-0x3e2468>
    3df4:	005d0b07 	0x5d0b07
    3df8:	00000000 	nop
    3dfc:	00007f04 	0x7f04
    3e00:	03080400 	0x3080400
    3e04:	000000ff 	0xff
    3e08:	00058c06 	0x58c06
    3e0c:	0a040800 	j	8102000 <end+0x7cf8000>
    3e10:	00014e08 	0x14e08
    3e14:	01b60700 	0x1b60700
    3e18:	0b040000 	j	c100000 <end+0xbcf6000>
    3e1c:	00015910 	0x15910
    3e20:	88070000 	lwl	a3,0(zero)
    3e24:	04000000 	bltz	zero,3e28 <sigill_handler-0x3fc1d8>
    3e28:	011a100c 	syscall	0x46840
    3e2c:	00040000 	sll	zero,a0,0x0
    3e30:	0001590b 	0x1590b
    3e34:	00250c00 	0x250c00
    3e38:	0d000000 	jal	4000000 <end+0x3bf6000>
    3e3c:	00014e04 	0x14e04
    3e40:	05080e00 	tgei	t0,3584
    3e44:	01830217 	0x1830217
    3e48:	ca070000 	lwc2	$7,0(s0)
    3e4c:	05000003 	bltz	t0,3e5c <sigill_handler-0x3fc1a4>
    3e50:	02ba0217 	0x2ba0217
    3e54:	07000000 	bltz	t8,3e58 <sigill_handler-0x3fc1a8>
    3e58:	000003a9 	0x3a9
    3e5c:	c0021705 	ll	v0,5893(zero)
    3e60:	04000002 	bltz	zero,3e6c <sigill_handler-0x3fc194>
    3e64:	6e450f00 	0x6e450f00
    3e68:	01f80076 	tne	t7,t8,0x1
    3e6c:	b0081505 	0xb0081505
    3e70:	07000002 	bltz	t8,3e7c <sigill_handler-0x3fc184>
    3e74:	000003b1 	tgeu	zero,zero,0xe
    3e78:	88131605 	lwl	s3,5637(zero)
    3e7c:	00000000 	nop
    3e80:	00037007 	srav	t6,v1,zero
    3e84:	12170500 	beq	s0,s7,5288 <sigill_handler-0x3fad78>
    3e88:	0000015f 	0x15f
    3e8c:	02a80798 	0x2a80798
    3e90:	18050000 	0x18050000
    3e94:	00005d08 	0x5d08
    3e98:	5c07a000 	0x5c07a000
    3e9c:	05000003 	bltz	t0,3eac <sigill_handler-0x3fc154>
    3ea0:	005d0819 	0x5d0819
    3ea4:	07a40000 	0x7a40000
    3ea8:	000003f4 	teq	zero,zero,0xf
    3eac:	5d081a05 	0x5d081a05
    3eb0:	a8000000 	swl	zero,0(zero)
    3eb4:	0005cb07 	0x5cb07
    3eb8:	081b0500 	j	6c1400 <end+0x2b7400>
    3ebc:	0000005d 	0x5d
    3ec0:	039607ac 	0x39607ac
    3ec4:	1c050000 	0x1c050000
    3ec8:	0002ea07 	0x2ea07
    3ecc:	4507b000 	bc1tl	$fcc1,fffefed0 <end+0xffbe5ed0>
    3ed0:	05000003 	bltz	t0,3ee0 <sigill_handler-0x3fc120>
    3ed4:	02c6131d 	0x2c6131d
    3ed8:	07b40000 	0x7b40000
    3edc:	0000030b 	0x30b
    3ee0:	5d081e05 	0x5d081e05
    3ee4:	bc000000 	cache	0x0,0(zero)
    3ee8:	00040207 	0x40207
    3eec:	08210500 	j	841400 <end+0x437400>
    3ef0:	0000005d 	0x5d
    3ef4:	041f07c0 	0x41f07c0
    3ef8:	22050000 	addi	a1,s0,0
    3efc:	00005d08 	0x5d08
    3f00:	e107c400 	sc	a3,-15360(t0)
    3f04:	05000002 	bltz	t0,3f10 <sigill_handler-0x3fc0f0>
    3f08:	005d0823 	subu	at,v0,sp
    3f0c:	07c80000 	tgei	s8,0
    3f10:	000002af 	0x2af
    3f14:	5d082405 	0x5d082405
    3f18:	cc000000 	pref	0x0,0(zero)
    3f1c:	00033807 	srav	a3,v1,zero
    3f20:	08250500 	j	941400 <end+0x537400>
    3f24:	0000005d 	0x5d
    3f28:	027207d0 	0x27207d0
    3f2c:	28050000 	slti	a1,zero,0
    3f30:	00005d08 	0x5d08
    3f34:	4d07d400 	0x4d07d400
    3f38:	05000004 	bltz	t0,3f4c <sigill_handler-0x3fc0b4>
    3f3c:	005d082b 	sltu	at,v0,sp
    3f40:	07d80000 	0x7d80000
    3f44:	00000365 	0x365
    3f48:	1a0b2e05 	0x1a0b2e05
    3f4c:	dc000001 	0xdc000001
    3f50:	00037907 	0x37907
    3f54:	0b2f0500 	j	cbc1400 <end+0xc7b7400>
    3f58:	0000011a 	0x11a
    3f5c:	032107e0 	0x32107e0
    3f60:	30050000 	andi	a1,zero,0x0
    3f64:	00011a0b 	0x11a0b
    3f68:	8a07e400 	lwl	a3,-7168(s0)
    3f6c:	05000004 	bltz	t0,3f80 <sigill_handler-0x3fc080>
    3f70:	005d0831 	tgeu	v0,sp,0x20
    3f74:	07e80000 	tgei	ra,0
    3f78:	00000389 	0x389
    3f7c:	5d083205 	0x5d083205
    3f80:	ec000000 	0xec000000
    3f84:	00031307 	0x31307
    3f88:	13330500 	beq	t9,s3,538c <sigill_handler-0x3fac74>
    3f8c:	000002f0 	tge	zero,zero,0xb
    3f90:	831000f0 	lb	s0,240(t8)
    3f94:	11000001 	beqz	t0,3f9c <sigill_handler-0x3fc064>
    3f98:	000002b0 	tge	zero,zero,0xa
    3f9c:	0183040d 	break	0x183,0x10
    3fa0:	040d0000 	0x40d0000
    3fa4:	000002ba 	0x2ba
    3fa8:	1d05080e 	0x1d05080e
    3fac:	0002ea02 	srl	sp,v0,0x8
    3fb0:	03b80700 	0x3b80700
    3fb4:	1d050000 	0x1d050000
    3fb8:	0002ba02 	srl	s7,v0,0x8
    3fbc:	a0070000 	sb	a3,0(zero)
    3fc0:	05000003 	bltz	t0,3fd0 <sigill_handler-0x3fc030>
    3fc4:	02c0021d 	0x2c0021d
    3fc8:	00040000 	sll	zero,a0,0x0
    3fcc:	007c040d 	break	0x7c,0x10
    3fd0:	26090000 	addiu	t1,s0,0
    3fd4:	00000001 	movf	zero,zero,$fcc0
    3fd8:	0a000003 	j	800000c <end+0x7bf600c>
    3fdc:	0000002c 	0x2c
    3fe0:	01030020 	add	zero,t0,v1
    3fe4:	00007a06 	0x7a06
    3fe8:	b5040d00 	0xb5040d00
    3fec:	12000002 	beqz	s0,3ff8 <sigill_handler-0x3fc008>
    3ff0:	00000bef 	0xbef
    3ff4:	70060301 	0x70060301
    3ff8:	8c004038 	lw	zero,16440(zero)
    3ffc:	01000000 	0x1000000
    4000:	0570139c 	bltzal	t3,8e74 <sigill_handler-0x3f718c>
    4004:	03010000 	0x3010000
    4008:	00005d11 	0x5d11
    400c:	00910200 	0x910200
    4010:	01006514 	0x1006514
    4014:	03071d04 	0x3071d04
    4018:	91020000 	lbu	v0,0(t0)
    401c:	33000070 	andi	zero,t8,0x70
    4020:	04000009 	bltz	zero,4048 <sigill_handler-0x3fbfb8>
    4024:	00135e00 	sll	t3,s3,0x18
    4028:	90010400 	lbu	at,1024(zero)
    402c:	0c000000 	jal	0 <sigill_handler-0x400000>
    4030:	00000d26 	0xd26
    4034:	00000049 	0x49
    4038:	00403900 	0x403900
    403c:	000009f8 	0x9f8
    4040:	00001420 	0x1420
    4044:	69050402 	0x69050402
    4048:	0300746e 	0x300746e
    404c:	000001ec 	0x1ec
    4050:	3817d103 	xori	s7,zero,0xd103
    4054:	04000000 	bltz	zero,4058 <sigill_handler-0x3fbfa8>
    4058:	002d0704 	0x2d0704
    405c:	01040000 	0x1040000
    4060:	00007306 	0x7306
    4064:	05020400 	bltzl	t0,5068 <sigill_handler-0x3faf98>
    4068:	000001ac 	0x1ac
    406c:	00050804 	sllv	at,a1,zero
    4070:	04000000 	bltz	zero,4074 <sigill_handler-0x3fbf8c>
    4074:	00710801 	movt	at,v1,$fcc4
    4078:	62030000 	0x62030000
    407c:	0400000c 	bltz	zero,40b0 <sigill_handler-0x3fbf50>
    4080:	00671931 	tgeu	v1,a3,0x64
    4084:	02040000 	0x2040000
    4088:	00018c07 	0x18c07
    408c:	09f60300 	j	7d80c00 <end+0x7976c00>
    4090:	34040000 	li	a0,0x0
    4094:	00003819 	0x3819
    4098:	07080400 	tgei	t8,1024
    409c:	00000023 	negu	zero,zero
    40a0:	000ad103 	sra	k0,t2,0x4
    40a4:	17070500 	bne	t8,a3,54a8 <sigill_handler-0x3fab58>
    40a8:	00000054 	0x54
    40ac:	00001d03 	sra	v1,zero,0x14
    40b0:	16090500 	bne	s0,t1,54b4 <sigill_handler-0x3fab4c>
    40b4:	00000038 	0x38
    40b8:	00047503 	sra	t6,a0,0x14
    40bc:	170a0500 	bne	t8,t2,54c0 <sigill_handler-0x3fab40>
    40c0:	000000a5 	0xa5
    40c4:	28070404 	slti	a3,zero,1028
    40c8:	03000000 	0x3000000
    40cc:	00000cf5 	0xcf5
    40d0:	5b122006 	0x5b122006
    40d4:	03000000 	0x3000000
    40d8:	00000c46 	0xc46
    40dc:	6e122306 	0x6e122306
    40e0:	03000000 	0x3000000
    40e4:	00000d65 	0xd65
    40e8:	6e122b06 	0x6e122b06
    40ec:	03000000 	0x3000000
    40f0:	00000c29 	0xc29
    40f4:	6e122e06 	0x6e122e06
    40f8:	05000000 	bltz	t0,40fc <sigill_handler-0x3fbf04>
    40fc:	093a0634 	j	4e818d0 <end+0x4a778d0>
    4100:	0000019c 	0x19c
    4104:	000d4d06 	0xd4d06
    4108:	103b0600 	beq	at,k1,590c <sigill_handler-0x3fa6f4>
    410c:	0000019c 	0x19c
    4110:	0c1a0600 	jal	681800 <end+0x277800>
    4114:	3c060000 	lui	a2,0x0
    4118:	0000ac0d 	break	0x0,0x2b0
    411c:	c2061000 	ll	a2,4096(s0)
    4120:	0600000c 	bltz	s0,4154 <sigill_handler-0x3fbeac>
    4124:	00ac0d3d 	0xac0d3d
    4128:	06120000 	bltzall	s0,412c <sigill_handler-0x3fbed4>
    412c:	00000c73 	tltu	zero,zero,0x31
    4130:	b80d3e06 	swr	t5,15878(zero)
    4134:	14000000 	bnez	zero,4138 <sigill_handler-0x3fbec8>
    4138:	000d9c06 	0xd9c06
    413c:	0d3f0600 	jal	4fc1800 <end+0x4bb7800>
    4140:	000000c4 	0xc4
    4144:	0d5d0618 	jal	5741860 <end+0x5337860>
    4148:	40060000 	mfc0	a2,c0_index
    414c:	0000d00c 	syscall	0x340
    4150:	3d061c00 	0x3d061c00
    4154:	0600000d 	bltz	s0,418c <sigill_handler-0x3fbe74>
    4158:	00d00c41 	0xd00c41
    415c:	06200000 	bltz	s1,4160 <sigill_handler-0x3fbea0>
    4160:	00000d55 	0xd55
    4164:	b80d4206 	swr	t5,16902(zero)
    4168:	24000000 	li	zero,0
    416c:	000ce306 	0xce306
    4170:	0d430600 	jal	50c1800 <end+0x4cb7800>
    4174:	000000ac 	0xac
    4178:	0c900628 	jal	24018a0 <end+0x1ff78a0>
    417c:	44060000 	mfc1	a2,$f0
    4180:	0000ac0d 	break	0x0,0x2b0
    4184:	a4062a00 	sh	a2,10752(zero)
    4188:	0600000d 	bltz	s0,41c0 <sigill_handler-0x3fbe40>
    418c:	00ac0d45 	0xac0d45
    4190:	062c0000 	teqi	s1,0
    4194:	00000d77 	0xd77
    4198:	ac0d4606 	sw	t5,17926(zero)
    419c:	2e000000 	sltiu	zero,s0,0
    41a0:	000d8306 	0xd8306
    41a4:	0d470600 	jal	51c1800 <end+0x4db7800>
    41a8:	000000ac 	0xac
    41ac:	0c510630 	jal	14418c0 <end+0x10378c0>
    41b0:	48060000 	mfc2	a2,$0
    41b4:	0000ac0d 	break	0x0,0x2b0
    41b8:	07003200 	bltz	t8,109bc <sigill_handler-0x3ef644>
    41bc:	00000054 	0x54
    41c0:	000001ac 	0x1ac
    41c4:	00003808 	0x3808
    41c8:	03000f00 	0x3000f00
    41cc:	00000d14 	0xd14
    41d0:	dc034906 	0xdc034906
    41d4:	09000000 	j	4000000 <end+0x3bf6000>
    41d8:	000001ac 	0x1ac
    41dc:	5d062005 	0x5d062005
    41e0:	00022f09 	0x22f09
    41e4:	0cd60600 	jal	3581800 <end+0x3177800>
    41e8:	5e060000 	0x5e060000
    41ec:	0000b80d 	break	0x0,0x2e0
    41f0:	ec060000 	0xec060000
    41f4:	0600000c 	bltz	s0,4228 <sigill_handler-0x3fbdd8>
    41f8:	00d00c5f 	0xd00c5f
    41fc:	06040000 	0x6040000
    4200:	00000c0c 	syscall	0x30
    4204:	c40d6006 	lwc1	$f13,24582(zero)
    4208:	08000000 	j	0 <sigill_handler-0x400000>
    420c:	000c6b06 	0xc6b06
    4210:	0d610600 	jal	5841800 <end+0x5437800>
    4214:	000000c4 	0xc4
    4218:	0c3d060c 	jal	f41830 <end+0xb37830>
    421c:	62060000 	0x62060000
    4220:	0000b80d 	break	0x0,0x2e0
    4224:	83061000 	lb	a2,4096(t8)
    4228:	0600000c 	bltz	s0,425c <sigill_handler-0x3fbda4>
    422c:	00b80d63 	0xb80d63
    4230:	06140000 	0x6140000
    4234:	00000d45 	0xd45
    4238:	b80d6406 	swr	t5,25606(zero)
    423c:	18000000 	blez	zero,4240 <sigill_handler-0x3fbdc0>
    4240:	000c2106 	0xc2106
    4244:	0d650600 	jal	5941800 <end+0x5537800>
    4248:	000000b8 	0xb8
    424c:	af03001c 	sw	v1,28(t8)
    4250:	0600000c 	bltz	s0,4284 <sigill_handler-0x3fbd7c>
    4254:	01bd0366 	0x1bd0366
    4258:	040a0000 	tlti	zero,0
    425c:	0243040b 	0x243040b
    4260:	0d0c0000 	jal	4300000 <end+0x3ef6000>
    4264:	00656450 	0x656450
    4268:	99109707 	lwr	s0,-26873(t0)
    426c:	0d000000 	jal	4000000 <end+0x3bf6000>
    4270:	00657450 	0x657450
    4274:	99109807 	lwr	s0,-26617(t0)
    4278:	0e000000 	jal	8000000 <end+0x7bf6000>
    427c:	00000415 	0x415
    4280:	08080898 	j	202260 <sigill_handler-0x1fdda0>
    4284:	000002c3 	sra	zero,zero,0xb
    4288:	00043206 	0x43206
    428c:	100a0800 	beq	zero,t2,6290 <sigill_handler-0x3f9d70>
    4290:	000002c3 	sra	zero,zero,0xb
    4294:	03e90600 	0x3e90600
    4298:	0d080000 	jal	4200000 <end+0x3df6000>
    429c:	0000a510 	0xa510
    42a0:	680f8000 	0x680f8000
    42a4:	0e080069 	jal	82001a4 <end+0x7df61a4>
    42a8:	0000a510 	0xa510
    42ac:	6c0f8400 	0x6c0f8400
    42b0:	0f08006f 	jal	c2001bc <end+0xbdf61bc>
    42b4:	0000a510 	0xa510
    42b8:	8f068800 	lw	a2,-30720(t8)
    42bc:	08000002 	j	8 <sigill_handler-0x3ffff8>
    42c0:	00a51010 	0xa51010
    42c4:	068c0000 	teqi	s4,0
    42c8:	00000268 	0x268
    42cc:	a5101108 	sh	s0,4360(t0)
    42d0:	90000000 	lbu	zero,0(zero)
    42d4:	0002d906 	0x2d906
    42d8:	10120800 	beq	zero,s2,62dc <sigill_handler-0x3f9d24>
    42dc:	000000a5 	0xa5
    42e0:	a5070094 	sh	a3,148(t0)
    42e4:	d3000000 	0xd3000000
    42e8:	08000002 	j	8 <sigill_handler-0x3ffff8>
    42ec:	00000038 	0x38
    42f0:	7f0e001f 	0x7f0e001f
    42f4:	04000000 	bltz	zero,42f8 <sigill_handler-0x3fbd08>
    42f8:	ee100609 	0xee100609
    42fc:	0f000002 	jal	c000008 <end+0xbbf6008>
    4300:	00676973 	tltu	v1,a3,0x1a5
    4304:	8d0b0709 	lw	t3,1801(t0)
    4308:	00000000 	nop
    430c:	007f0300 	0x7f0300
    4310:	08090000 	j	240000 <sigill_handler-0x1c0000>
    4314:	0002d303 	sra	k0,v0,0xc
    4318:	058c0e00 	teqi	t4,3584
    431c:	09080000 	j	4200000 <end+0x3df6000>
    4320:	0322080a 	movz	at,t9,v0
    4324:	b6060000 	0xb6060000
    4328:	09000001 	j	4000004 <end+0x3bf6004>
    432c:	032d100b 	movn	v0,t9,t5
    4330:	06000000 	bltz	s0,4334 <sigill_handler-0x3fbccc>
    4334:	00000088 	0x88
    4338:	ee100c09 	0xee100c09
    433c:	04000002 	bltz	zero,4348 <sigill_handler-0x3fbcb8>
    4340:	032d1000 	0x32d1000
    4344:	25110000 	addiu	s1,t0,0
    4348:	00000000 	nop
    434c:	0322040b 	0x322040b
    4350:	08050000 	j	140000 <sigill_handler-0x2c0000>
    4354:	5702170a 	bnel	t8,v0,9f80 <sigill_handler-0x3f6080>
    4358:	06000003 	bltz	s0,4368 <sigill_handler-0x3fbc98>
    435c:	000003ca 	0x3ca
    4360:	8402170a 	lh	v0,5898(zero)
    4364:	00000004 	sllv	zero,zero,zero
    4368:	0003a906 	0x3a906
    436c:	02170a00 	0x2170a00
    4370:	0000048a 	0x48a
    4374:	45120004 	bc1fl	$fcc4,4388 <sigill_handler-0x3fbc78>
    4378:	f800766e 	sdc2	$0,30318(zero)
    437c:	08150a01 	j	542804 <end+0x138804>
    4380:	00000484 	0x484
    4384:	0003b106 	0x3b106
    4388:	13160a00 	beq	t8,s6,6b8c <sigill_handler-0x3f9474>
    438c:	0000025c 	0x25c
    4390:	03700600 	0x3700600
    4394:	170a0000 	bne	t8,t2,4398 <sigill_handler-0x3fbc68>
    4398:	00033312 	0x33312
    439c:	a8069800 	swl	a2,-26624(zero)
    43a0:	0a000002 	j	8000008 <end+0x7bf6008>
    43a4:	008d0818 	0x8d0818
    43a8:	06a00000 	bltz	s5,43ac <sigill_handler-0x3fbc54>
    43ac:	0000035c 	0x35c
    43b0:	8d08190a 	lw	t0,6410(t0)
    43b4:	a4000000 	sh	zero,0(zero)
    43b8:	0003f406 	0x3f406
    43bc:	081a0a00 	j	682800 <end+0x278800>
    43c0:	0000008d 	break	0x0,0x2
    43c4:	05cb06a8 	tltiu	t6,1704
    43c8:	1b0a0000 	0x1b0a0000
    43cc:	00008d08 	0x8d08
    43d0:	9606ac00 	lhu	a2,-21504(s0)
    43d4:	0a000003 	j	800000c <end+0x7bf600c>
    43d8:	04b4071c 	0x4b4071c
    43dc:	06b00000 	bltzal	s5,43e0 <sigill_handler-0x3fbc20>
    43e0:	00000345 	0x345
    43e4:	90131d0a 	lbu	s3,7434(zero)
    43e8:	b4000004 	0xb4000004
    43ec:	00030b06 	0x30b06
    43f0:	081e0a00 	j	782800 <end+0x378800>
    43f4:	0000008d 	break	0x0,0x2
    43f8:	040206bc 	bltzl	zero,5eec <sigill_handler-0x3fa114>
    43fc:	210a0000 	addi	t2,t0,0
    4400:	00008d08 	0x8d08
    4404:	1f06c000 	0x1f06c000
    4408:	0a000004 	j	8000010 <end+0x7bf6010>
    440c:	008d0822 	sub	at,a0,t5
    4410:	06c40000 	0x6c40000
    4414:	000002e1 	0x2e1
    4418:	8d08230a 	lw	t0,8970(t0)
    441c:	c8000000 	lwc2	$0,0(zero)
    4420:	0002af06 	0x2af06
    4424:	08240a00 	j	902800 <end+0x4f8800>
    4428:	0000008d 	break	0x0,0x2
    442c:	033806cc 	syscall	0xce01b
    4430:	250a0000 	addiu	t2,t0,0
    4434:	00008d08 	0x8d08
    4438:	7206d000 	0x7206d000
    443c:	0a000002 	j	8000008 <end+0x7bf6008>
    4440:	008d0828 	0x8d0828
    4444:	06d40000 	0x6d40000
    4448:	0000044d 	break	0x0,0x11
    444c:	8d082b0a 	lw	t0,11018(t0)
    4450:	d8000000 	ldc2	$0,0(zero)
    4454:	00036506 	0x36506
    4458:	0b2e0a00 	j	cb82800 <end+0xc778800>
    445c:	000002ee 	0x2ee
    4460:	037906dc 	0x37906dc
    4464:	2f0a0000 	sltiu	t2,t8,0
    4468:	0002ee0b 	0x2ee0b
    446c:	2106e000 	addi	a2,t0,-8192
    4470:	0a000003 	j	800000c <end+0x7bf600c>
    4474:	02ee0b30 	tge	s7,t6,0x2c
    4478:	06e40000 	0x6e40000
    447c:	0000048a 	0x48a
    4480:	8d08310a 	lw	t0,12554(t0)
    4484:	e8000000 	swc2	$0,0(zero)
    4488:	00038906 	0x38906
    448c:	08320a00 	j	c82800 <end+0x878800>
    4490:	0000008d 	break	0x0,0x2
    4494:	031306ec 	0x31306ec
    4498:	330a0000 	andi	t2,t8,0x0
    449c:	0004ba13 	0x4ba13
    44a0:	0b00f000 	j	c03c000 <end+0xbc32000>
    44a4:	00035704 	0x35704
    44a8:	84040b00 	lh	a0,2816(zero)
    44ac:	05000004 	bltz	t0,44c0 <sigill_handler-0x3fbb40>
    44b0:	021d0a08 	0x21d0a08
    44b4:	000004b4 	teq	zero,zero,0x12
    44b8:	0003b806 	srlv	s7,v1,zero
    44bc:	021d0a00 	0x21d0a00
    44c0:	00000484 	0x484
    44c4:	03a00600 	0x3a00600
    44c8:	1d0a0000 	0x1d0a0000
    44cc:	00048a02 	srl	s1,a0,0x8
    44d0:	0b000400 	j	c001000 <end+0xbbf7000>
    44d4:	00024404 	0x24404
    44d8:	02fa0700 	0x2fa0700
    44dc:	04ca0000 	tlti	a2,0
    44e0:	38080000 	xori	t0,zero,0x0
    44e4:	20000000 	addi	zero,zero,0
    44e8:	06010400 	bgez	s0,54ec <sigill_handler-0x3fab14>
    44ec:	0000007a 	0x7a
    44f0:	04ca040b 	tlti	a2,1035
    44f4:	07130000 	bgezall	t8,44f8 <sigill_handler-0x3fbb08>
    44f8:	00003804 	sllv	a3,zero,zero
    44fc:	06060b00 	0x6060b00
    4500:	00000576 	tne	zero,zero,0x15
    4504:	00059614 	0x59614
    4508:	23140000 	addi	s4,t8,0
    450c:	01000005 	0x1000005
    4510:	00056914 	0x56914
    4514:	f3140200 	0xf3140200
    4518:	03000004 	sllv	zero,zero,t8
    451c:	00061814 	0x61814
    4520:	0d140400 	jal	4501000 <end+0x40f7000>
    4524:	05000005 	bltz	t0,453c <sigill_handler-0x3fbac4>
    4528:	00060214 	0x60214
    452c:	d6140600 	ldc1	$f20,1536(s0)
    4530:	07000005 	bltz	t8,4548 <sigill_handler-0x3fbab8>
    4534:	0004dc14 	0x4dc14
    4538:	b8140800 	swr	s4,2048(zero)
    453c:	09000004 	j	4000010 <end+0x3bf6010>
    4540:	0005c314 	0x5c314
    4544:	b1140a00 	0xb1140a00
    4548:	0b000005 	j	c000014 <end+0xbbf6014>
    454c:	00054d14 	0x54d14
    4550:	32140c00 	andi	s4,s0,0xc00
    4554:	0d000005 	jal	4000014 <end+0x3bf6014>
    4558:	00049d14 	0x49d14
    455c:	f8140e00 	sdc2	$20,3584(zero)
    4560:	0f000005 	jal	c000014 <end+0xbbf6014>
    4564:	0004aa14 	0x4aa14
    4568:	c4141000 	lwc1	$f20,4096(zero)
    456c:	11000004 	beqz	t0,4580 <sigill_handler-0x3fba80>
    4570:	0004fd14 	0x4fd14
    4574:	88141200 	lwl	s4,4608(zero)
    4578:	13000005 	beqz	t8,4590 <sigill_handler-0x3fba70>
    457c:	00057614 	0x57614
    4580:	e7141400 	swc1	$f20,5120(t8)
    4584:	15000005 	bnez	t0,459c <sigill_handler-0x3fba64>
    4588:	0005a814 	0x5a814
    458c:	43141600 	c0	0x1141600
    4590:	17000005 	bnez	t8,45a8 <sigill_handler-0x3fba58>
    4594:	0d951500 	jal	6545400 <end+0x613b400>
    4598:	e7010000 	swc1	$f1,0(t8)
    459c:	00002505 	0x2505
    45a0:	4042ac00 	0x4042ac00
    45a4:	00004c00 	sll	t1,zero,0x10
    45a8:	b09c0100 	0xb09c0100
    45ac:	16000005 	bnez	s0,45c4 <sigill_handler-0x3fba3c>
    45b0:	00000c8b 	0xc8b
    45b4:	d112e701 	0xd112e701
    45b8:	02000004 	sllv	zero,zero,s0
    45bc:	ac160091 	sw	s6,145(zero)
    45c0:	0100000d 	break	0x100
    45c4:	04d11ee7 	bgezal	a2,c164 <sigill_handler-0x3f3e9c>
    45c8:	91020000 	lbu	v0,0(t0)
    45cc:	15001704 	bnez	t0,a1e0 <sigill_handler-0x3f5e20>
    45d0:	00000c14 	0xc14
    45d4:	25056e01 	addiu	a1,t0,28161
    45d8:	d8000000 	ldc2	$0,0(zero)
    45dc:	d400403d 	ldc1	$f0,16445(zero)
    45e0:	01000004 	sllv	zero,zero,t0
    45e4:	0007669c 	0x7669c
    45e8:	0c8b1600 	jal	22c5800 <end+0x1ebb800>
    45ec:	6e010000 	0x6e010000
    45f0:	0004d111 	0x4d111
    45f4:	00910200 	0x910200
    45f8:	00046216 	0x46216
    45fc:	1e6e0100 	0x1e6e0100
    4600:	00000766 	0x766
    4604:	18049102 	0x18049102
    4608:	01006466 	0x1006466
    460c:	00250671 	tgeu	at,a1,0x19
    4610:	91030000 	lbu	v1,0(t0)
    4614:	72187ab4 	0x72187ab4
    4618:	067a0100 	0x67a0100
    461c:	00000025 	move	zero,zero
    4620:	7aa09103 	0x7aa09103
    4624:	000d1f19 	0xd1f19
    4628:	097b0100 	j	5ec0400 <end+0x5ab6400>
    462c:	0000076c 	0x76c
    4630:	7ad09103 	0x7ad09103
    4634:	7272651a 	0x7272651a
    4638:	01e20100 	0x1e20100
    463c:	00404284 	0x404284
    4640:	000d0f19 	0xd0f19
    4644:	14820100 	bne	a0,v0,4a48 <sigill_handler-0x3fb5b8>
    4648:	0000077d 	0x77d
    464c:	7ab89103 	0x7ab89103
    4650:	000d3219 	0xd3219
    4654:	09870100 	j	61c0400 <end+0x5db6400>
    4658:	00000099 	0x99
    465c:	7abc9103 	0x7abc9103
    4660:	0005a219 	0x5a219
    4664:	088b0100 	j	22c0400 <end+0x1eb6400>
    4668:	0000008d 	break	0x0,0x2
    466c:	7ed09103 	0x7ed09103
    4670:	00707318 	0x707318
    4674:	8d089401 	lw	t0,-27647(t0)
    4678:	03000000 	0x3000000
    467c:	1b7ed491 	0x1b7ed491
    4680:	00000d8b 	0xd8b
    4684:	7401e001 	jalx	78004 <sigill_handler-0x387ffc>
    4688:	19004042 	blez	t0,14794 <sigill_handler-0x3eb86c>
    468c:	00000d70 	tge	zero,zero,0x35
    4690:	2c099b01 	sltiu	t1,zero,-25855
    4694:	03000000 	0x3000000
    4698:	187aa491 	0x187aa491
    469c:	01006674 	teq	t0,zero,0x199
    46a0:	025c13bd 	0x25c13bd
    46a4:	91030000 	lbu	v1,0(t0)
    46a8:	901b7ed8 	lbu	k1,32472(zero)
    46ac:	0100000d 	break	0x100
    46b0:	422401dd 	c0	0x2401dd
    46b4:	a81c0040 	swl	gp,64(zero)
    46b8:	db000000 	ldc2	$0,0(t8)
    46bc:	19000006 	blez	t0,46d8 <sigill_handler-0x3fb928>
    46c0:	00000ca7 	0xca7
    46c4:	25029c01 	addiu	v0,t0,-25599
    46c8:	03000000 	0x3000000
    46cc:	1d7aa891 	0x1d7aa891
    46d0:	000000c0 	ehb
    46d4:	00687018 	0x687018
    46d8:	830fa801 	lb	t7,-22527(t8)
    46dc:	03000007 	srav	zero,zero,t8
    46e0:	1d7acc91 	0x1d7acc91
    46e4:	000000d8 	0xd8
    46e8:	6e696218 	0x6e696218
    46ec:	0aaa0100 	j	aa80400 <end+0xa676400>
    46f0:	0000023b 	0x23b
    46f4:	00709102 	0x709102
    46f8:	941e0000 	lhu	s8,0(zero)
    46fc:	38004040 	xori	zero,zero,0x4040
    4700:	55000001 	bnezl	t0,4708 <sigill_handler-0x3fb8f8>
    4704:	19000007 	blez	t0,4724 <sigill_handler-0x3fb8dc>
    4708:	00000c7d 	0xc7d
    470c:	8d0dc501 	lw	t5,-15103(t0)
    4710:	03000000 	0x3000000
    4714:	1f7aac91 	0x1f7aac91
    4718:	004040c4 	0x4040c4
    471c:	000000e8 	0xe8
    4720:	000cdd19 	0xcdd19
    4724:	0ec90100 	jal	b240400 <end+0xae36400>
    4728:	0000008d 	break	0x0,0x2
    472c:	7ab09103 	0x7ab09103
    4730:	4040d01f 	0x4040d01f
    4734:	0000b800 	sll	s7,zero,0x0
    4738:	6e701800 	0x6e701800
    473c:	0aca0100 	j	b280400 <end+0xae76400>
    4740:	0000008d 	break	0x0,0x2
    4744:	7ac09103 	0x7ac09103
    4748:	00034019 	0x34019
    474c:	0acb0100 	j	b2c0400 <end+0xaeb6400>
    4750:	0000008d 	break	0x0,0x2
    4754:	7ac49103 	0x7ac49103
    4758:	4041201f 	0x4041201f
    475c:	00006800 	sll	t5,zero,0x0
    4760:	61761800 	0x61761800
    4764:	0bcd0100 	j	f340400 <end+0xef36400>
    4768:	0000023b 	0x23b
    476c:	7ac89103 	0x7ac89103
    4770:	00000000 	nop
    4774:	00092920 	0x92920
    4778:	403e9000 	0x403e9000
    477c:	00002000 	sll	a0,zero,0x0
    4780:	0a8d0100 	j	a340400 <end+0x9f36400>
    4784:	d1040b00 	0xd1040b00
    4788:	07000004 	bltz	t8,479c <sigill_handler-0x3fb864>
    478c:	00000081 	0x81
    4790:	0000077d 	0x77d
    4794:	00003821 	move	a3,zero
    4798:	0001ff00 	sll	ra,at,0x1c
    479c:	01b8040b 	0x1b8040b
    47a0:	040b0000 	tltiu	zero,0
    47a4:	0000022f 	0x22f
    47a8:	000bff22 	0xbff22
    47ac:	0c580100 	jal	1600400 <end+0x11f6400>
    47b0:	00000025 	move	zero,zero
    47b4:	00403cb4 	teq	v0,zero,0xf2
    47b8:	00000124 	0x124
    47bc:	083f9c01 	j	fe7004 <end+0xbdd004>
    47c0:	15160000 	bne	t0,s6,47c4 <sigill_handler-0x3fb83c>
    47c4:	01000008 	jr	t0
    47c8:	023b1f58 	0x23b1f58
    47cc:	91020000 	lbu	v0,0(t0)
    47d0:	61762300 	0x61762300
    47d4:	2c580100 	sltiu	t8,v0,256
    47d8:	00000099 	0x99
    47dc:	16049102 	bne	s0,a0,fffe8be8 <end+0xffbdebe8>
    47e0:	00000908 	0x908
    47e4:	2c375801 	sltiu	s7,at,22529
    47e8:	02000000 	0x2000000
    47ec:	40160891 	0x40160891
    47f0:	01000003 	0x1000003
    47f4:	008d4558 	0x8d4558
    47f8:	91020000 	lbu	v0,0(t0)
    47fc:	7273230c 	0x7273230c
    4800:	58010063 	0x58010063
    4804:	00023d57 	0x23d57
    4808:	10910200 	beq	a0,s1,500c <sigill_handler-0x3faff4>
    480c:	6e656c23 	0x6e656c23
    4810:	0b590100 	j	d640400 <end+0xd236400>
    4814:	0000002c 	0x2c
    4818:	19149102 	0x19149102
    481c:	00000d00 	sll	at,zero,0x14
    4820:	8d085a01 	lw	t0,23041(t0)
    4824:	02000000 	0x2000000
    4828:	e01e6891 	sc	s8,26769(zero)
    482c:	3400403c 	li	zero,0x403c
    4830:	27000000 	addiu	zero,t8,0
    4834:	18000008 	blez	zero,4858 <sigill_handler-0x3fb7a8>
    4838:	0100725f 	0x100725f
    483c:	0025025b 	0x25025b
    4840:	91020000 	lbu	v0,0(t0)
    4844:	201f006c 	addi	ra,zero,108
    4848:	9c00403d 	0x9c00403d
    484c:	18000000 	blez	zero,4850 <sigill_handler-0x3fb7b0>
    4850:	5d010072 	0x5d010072
    4854:	00002507 	0x2507
    4858:	70910200 	0x70910200
    485c:	9c150000 	0x9c150000
    4860:	0100000c 	syscall	0x40000
    4864:	00250508 	0x250508
    4868:	39000000 	xori	zero,t0,0x0
    486c:	03b40040 	0x3b40040
    4870:	9c010000 	0x9c010000
    4874:	00000923 	0x923
    4878:	0005a216 	0x5a216
    487c:	16080100 	bne	s0,t0,4c80 <sigill_handler-0x3fb380>
    4880:	0000008d 	break	0x0,0x2
    4884:	16009102 	bnez	s0,fffe8c90 <end+0xffbdec90>
    4888:	00000462 	0x462
    488c:	66240801 	0x66240801
    4890:	02000007 	srav	zero,zero,s0
    4894:	b1160491 	0xb1160491
    4898:	0100000d 	break	0x100
    489c:	09233108 	j	48cc420 <end+0x44c2420>
    48a0:	91020000 	lbu	v0,0(t0)
    48a4:	04371908 	0x4371908
    48a8:	09010000 	j	4040000 <end+0x3c36000>
    48ac:	00002506 	0x2506
    48b0:	50910200 	beql	a0,s1,50b4 <sigill_handler-0x3faf4c>
    48b4:	01006918 	0x1006918
    48b8:	00250c09 	0x250c09
    48bc:	91020000 	lbu	v0,0(t0)
    48c0:	00721854 	0x721854
    48c4:	250f0901 	addiu	t7,t0,2305
    48c8:	02000000 	0x2000000
    48cc:	74185891 	jalx	616244 <end+0x20c244>
    48d0:	0100746f 	0x100746f
    48d4:	00251209 	0x251209
    48d8:	91020000 	lbu	v0,0(t0)
    48dc:	0cba195c 	jal	2e86570 <end+0x2a7c570>
    48e0:	0a010000 	j	8040000 <end+0x7c36000>
    48e4:	0004d108 	0x4d108
    48e8:	6c910200 	0x6c910200
    48ec:	000dac19 	0xdac19
    48f0:	090b0100 	j	42c0400 <end+0x3eb6400>
    48f4:	00000923 	0x923
    48f8:	19709102 	0x19709102
    48fc:	00000c5c 	0xc5c
    4900:	d1082201 	0xd1082201
    4904:	02000004 	sllv	zero,zero,s0
    4908:	cc196091 	pref	0x19,24721(zero)
    490c:	0100000c 	syscall	0x40000
    4910:	04d11022 	bgezal	a2,899c <sigill_handler-0x3f7664>
    4914:	91020000 	lbu	v0,0(t0)
    4918:	006a1864 	0x6a1864
    491c:	8d082301 	lw	t0,8961(t0)
    4920:	02000000 	0x2000000
    4924:	33196891 	andi	t9,t8,0x6891
    4928:	0100000c 	syscall	0x40000
    492c:	09230940 	j	48c2500 <end+0x44b8500>
    4930:	91020000 	lbu	v0,0(t0)
    4934:	0d091b74 	jal	4246dd0 <end+0x3e3cdd0>
    4938:	53010000 	beql	t8,at,493c <sigill_handler-0x3fb6c4>
    493c:	403c8401 	0x403c8401
    4940:	040b0000 	tltiu	zero,0
    4944:	0000008d 	break	0x0,0x2
    4948:	00062824 	and	a1,zero,a2
    494c:	323b0200 	andi	k1,s1,0x200
    4950:	00000025 	move	zero,zero
    4954:	07dd0003 	0x7dd0003
    4958:	00040000 	sll	zero,a0,0x0
    495c:	00001545 	0x1545
    4960:	00900104 	0x900104
    4964:	1b0c0000 	0x1b0c0000
    4968:	4900000e 	bc2f	49a4 <sigill_handler-0x3fb65c>
    496c:	00000000 	nop
    4970:	68004043 	0x68004043
    4974:	0a000006 	j	8000018 <end+0x7bf6018>
    4978:	02000018 	mult	s0,zero
    497c:	6e690504 	0x6e690504
    4980:	04030074 	bgezl	zero,4b54 <sigill_handler-0x3fb4ac>
    4984:	00002d07 	0x2d07
    4988:	06010300 	bgez	s0,558c <sigill_handler-0x3faa74>
    498c:	00000073 	tltu	zero,zero,0x1
    4990:	ac050203 	sw	a1,515(zero)
    4994:	03000001 	movf	zero,t8,$fcc0
    4998:	00000508 	0x508
    499c:	01030000 	0x1030000
    49a0:	00007108 	0x7108
    49a4:	07020300 	bltzl	t8,55a8 <sigill_handler-0x3faa58>
    49a8:	0000018c 	syscall	0x6
    49ac:	23070803 	addi	a3,t8,2051
    49b0:	04000000 	bltz	zero,49b4 <sigill_handler-0x3fb64c>
    49b4:	00000ad1 	0xad1
    49b8:	48170702 	0x48170702
    49bc:	04000000 	bltz	zero,49c0 <sigill_handler-0x3fb640>
    49c0:	0000001d 	0x1d
    49c4:	2c160902 	sltiu	s6,zero,2306
    49c8:	04000000 	bltz	zero,49cc <sigill_handler-0x3fb634>
    49cc:	00000475 	0x475
    49d0:	81170a02 	lb	s7,2562(t0)
    49d4:	03000000 	0x3000000
    49d8:	00280704 	0x280704
    49dc:	50050000 	beql	zero,a1,49e0 <sigill_handler-0x3fb620>
    49e0:	03006564 	0x3006564
    49e4:	00751097 	0x751097
    49e8:	50050000 	beql	zero,a1,49ec <sigill_handler-0x3fb614>
    49ec:	03006574 	teq	t8,zero,0x195
    49f0:	00751098 	0x751098
    49f4:	15060000 	bne	t0,a2,49f8 <sigill_handler-0x3fb608>
    49f8:	98000004 	lwr	zero,4(zero)
    49fc:	07080804 	tgei	t8,2052
    4a00:	07000001 	bltz	t8,4a08 <sigill_handler-0x3fb5f8>
    4a04:	00000432 	tlt	zero,zero,0x10
    4a08:	07100a04 	bltzal	t8,721c <sigill_handler-0x3f8de4>
    4a0c:	00000001 	movf	zero,zero,$fcc0
    4a10:	0003e907 	0x3e907
    4a14:	100d0400 	beq	zero,t5,5a18 <sigill_handler-0x3fa5e8>
    4a18:	00000081 	0x81
    4a1c:	69680880 	0x69680880
    4a20:	100e0400 	beq	zero,t6,5a24 <sigill_handler-0x3fa5dc>
    4a24:	00000081 	0x81
    4a28:	6f6c0884 	0x6f6c0884
    4a2c:	100f0400 	beq	zero,t7,5a30 <sigill_handler-0x3fa5d0>
    4a30:	00000081 	0x81
    4a34:	028f0788 	0x28f0788
    4a38:	10040000 	beq	zero,a0,4a3c <sigill_handler-0x3fb5c4>
    4a3c:	00008110 	0x8110
    4a40:	68078c00 	0x68078c00
    4a44:	04000002 	bltz	zero,4a50 <sigill_handler-0x3fb5b0>
    4a48:	00811011 	0x811011
    4a4c:	07900000 	bltzal	gp,4a50 <sigill_handler-0x3fb5b0>
    4a50:	000002d9 	0x2d9
    4a54:	81101204 	lb	s0,4612(t0)
    4a58:	94000000 	lhu	zero,0(zero)
    4a5c:	00810900 	0x810900
    4a60:	01170000 	0x1170000
    4a64:	2c0a0000 	sltiu	t2,zero,0
    4a68:	1f000000 	bgtz	t8,4a6c <sigill_handler-0x3fb594>
    4a6c:	007f0600 	0x7f0600
    4a70:	05040000 	0x5040000
    4a74:	01321006 	srlv	v0,s2,t1
    4a78:	73080000 	madd	t8,t0
    4a7c:	05006769 	bltz	t0,1e824 <sigill_handler-0x3e17dc>
    4a80:	00690b07 	0x690b07
    4a84:	00000000 	nop
    4a88:	00007f04 	0x7f04
    4a8c:	03080500 	0x3080500
    4a90:	00000117 	0x117
    4a94:	00058c06 	0x58c06
    4a98:	0a050800 	j	8142000 <end+0x7d38000>
    4a9c:	00016608 	0x16608
    4aa0:	01b60700 	0x1b60700
    4aa4:	0b050000 	j	c140000 <end+0xbd36000>
    4aa8:	00017110 	0x17110
    4aac:	88070000 	lwl	a3,0(zero)
    4ab0:	05000000 	bltz	t0,4ab4 <sigill_handler-0x3fb54c>
    4ab4:	0132100c 	syscall	0x4c840
    4ab8:	00040000 	sll	zero,a0,0x0
    4abc:	0001710b 	0x1710b
    4ac0:	00250c00 	0x250c00
    4ac4:	0d000000 	jal	4000000 <end+0x3bf6000>
    4ac8:	00016604 	0x16604
    4acc:	06080e00 	tgei	s0,3584
    4ad0:	019b0217 	0x19b0217
    4ad4:	ca070000 	lwc2	$7,0(s0)
    4ad8:	06000003 	bltz	s0,4ae8 <sigill_handler-0x3fb518>
    4adc:	02d20217 	0x2d20217
    4ae0:	07000000 	bltz	t8,4ae4 <sigill_handler-0x3fb51c>
    4ae4:	000003a9 	0x3a9
    4ae8:	d8021706 	ldc2	$2,5894(zero)
    4aec:	04000002 	bltz	zero,4af8 <sigill_handler-0x3fb508>
    4af0:	6e450f00 	0x6e450f00
    4af4:	01f80076 	tne	t7,t8,0x1
    4af8:	c8081506 	lwc2	$8,5382(zero)
    4afc:	07000002 	bltz	t8,4b08 <sigill_handler-0x3fb4f8>
    4b00:	000003b1 	tgeu	zero,zero,0xe
    4b04:	a0131606 	sb	s3,5638(zero)
    4b08:	00000000 	nop
    4b0c:	00037007 	srav	t6,v1,zero
    4b10:	12170600 	beq	s0,s7,6314 <sigill_handler-0x3f9cec>
    4b14:	00000177 	0x177
    4b18:	02a80798 	0x2a80798
    4b1c:	18060000 	0x18060000
    4b20:	00006908 	0x6908
    4b24:	5c07a000 	0x5c07a000
    4b28:	06000003 	bltz	s0,4b38 <sigill_handler-0x3fb4c8>
    4b2c:	00690819 	0x690819
    4b30:	07a40000 	0x7a40000
    4b34:	000003f4 	teq	zero,zero,0xf
    4b38:	69081a06 	0x69081a06
    4b3c:	a8000000 	swl	zero,0(zero)
    4b40:	0005cb07 	0x5cb07
    4b44:	081b0600 	j	6c1800 <end+0x2b7800>
    4b48:	00000069 	0x69
    4b4c:	039607ac 	0x39607ac
    4b50:	1c060000 	0x1c060000
    4b54:	00030207 	0x30207
    4b58:	4507b000 	bc1tl	$fcc1,ffff0b5c <end+0xffbe6b5c>
    4b5c:	06000003 	bltz	s0,4b6c <sigill_handler-0x3fb494>
    4b60:	02de131d 	0x2de131d
    4b64:	07b40000 	0x7b40000
    4b68:	0000030b 	0x30b
    4b6c:	69081e06 	0x69081e06
    4b70:	bc000000 	cache	0x0,0(zero)
    4b74:	00040207 	0x40207
    4b78:	08210600 	j	841800 <end+0x437800>
    4b7c:	00000069 	0x69
    4b80:	041f07c0 	0x41f07c0
    4b84:	22060000 	addi	a2,s0,0
    4b88:	00006908 	0x6908
    4b8c:	e107c400 	sc	a3,-15360(t0)
    4b90:	06000002 	bltz	s0,4b9c <sigill_handler-0x3fb464>
    4b94:	00690823 	subu	at,v1,t1
    4b98:	07c80000 	tgei	s8,0
    4b9c:	000002af 	0x2af
    4ba0:	69082406 	0x69082406
    4ba4:	cc000000 	pref	0x0,0(zero)
    4ba8:	00033807 	srav	a3,v1,zero
    4bac:	08250600 	j	941800 <end+0x537800>
    4bb0:	00000069 	0x69
    4bb4:	027207d0 	0x27207d0
    4bb8:	28060000 	slti	a2,zero,0
    4bbc:	00006908 	0x6908
    4bc0:	4d07d400 	0x4d07d400
    4bc4:	06000004 	bltz	s0,4bd8 <sigill_handler-0x3fb428>
    4bc8:	0069082b 	sltu	at,v1,t1
    4bcc:	07d80000 	0x7d80000
    4bd0:	00000365 	0x365
    4bd4:	320b2e06 	andi	t3,s0,0x2e06
    4bd8:	dc000001 	0xdc000001
    4bdc:	00037907 	0x37907
    4be0:	0b2f0600 	j	cbc1800 <end+0xc7b7800>
    4be4:	00000132 	tlt	zero,zero,0x4
    4be8:	032107e0 	0x32107e0
    4bec:	30060000 	andi	a2,zero,0x0
    4bf0:	0001320b 	0x1320b
    4bf4:	8a07e400 	lwl	a3,-7168(s0)
    4bf8:	06000004 	bltz	s0,4c0c <sigill_handler-0x3fb3f4>
    4bfc:	00690831 	tgeu	v1,t1,0x20
    4c00:	07e80000 	tgei	ra,0
    4c04:	00000389 	0x389
    4c08:	69083206 	0x69083206
    4c0c:	ec000000 	0xec000000
    4c10:	00031307 	0x31307
    4c14:	13330600 	beq	t9,s3,6418 <sigill_handler-0x3f9be8>
    4c18:	00000308 	0x308
    4c1c:	9b1000f0 	lwr	s0,240(t8)
    4c20:	11000001 	beqz	t0,4c28 <sigill_handler-0x3fb3d8>
    4c24:	000002c8 	0x2c8
    4c28:	019b040d 	break	0x19b,0x10
    4c2c:	040d0000 	0x40d0000
    4c30:	000002d2 	0x2d2
    4c34:	1d06080e 	0x1d06080e
    4c38:	00030202 	srl	zero,v1,0x8
    4c3c:	03b80700 	0x3b80700
    4c40:	1d060000 	0x1d060000
    4c44:	0002d202 	srl	k0,v0,0x8
    4c48:	a0070000 	sb	a3,0(zero)
    4c4c:	06000003 	bltz	s0,4c5c <sigill_handler-0x3fb3a4>
    4c50:	02d8021d 	0x2d8021d
    4c54:	00040000 	sll	zero,a0,0x0
    4c58:	0088040d 	break	0x88,0x10
    4c5c:	3e090000 	0x3e090000
    4c60:	18000001 	blez	zero,4c68 <sigill_handler-0x3fb398>
    4c64:	0a000003 	j	800000c <end+0x7bf600c>
    4c68:	0000002c 	0x2c
    4c6c:	28090020 	slti	t1,zero,32
    4c70:	28000003 	slti	zero,zero,3
    4c74:	0a000003 	j	800000c <end+0x7bf600c>
    4c78:	0000002c 	0x2c
    4c7c:	0103007f 	0x103007f
    4c80:	00007a06 	0x7a06
    4c84:	65441200 	0x65441200
    4c88:	071c0076 	0x71c0076
    4c8c:	03980818 	0x3980818
    4c90:	7e070000 	0x7e070000
    4c94:	07000008 	bltz	t8,4cb8 <sigill_handler-0x3fb348>
    4c98:	00250619 	0x250619
    4c9c:	07000000 	bltz	t8,4ca0 <sigill_handler-0x3fb360>
    4ca0:	00000885 	0x885
    4ca4:	98081a07 	lwr	t0,6663(zero)
    4ca8:	04000003 	bltz	zero,4cb8 <sigill_handler-0x3fb348>
    4cac:	0008c807 	srav	t9,t0,zero
    4cb0:	081b0700 	j	6c1c00 <end+0x2b7c00>
    4cb4:	000003f8 	0x3f8
    4cb8:	088e0708 	j	2381c20 <end+0x1f77c20>
    4cbc:	1c070000 	0x1c070000
    4cc0:	00042308 	0x42308
    4cc4:	63070c00 	0x63070c00
    4cc8:	07000008 	bltz	t8,4cec <sigill_handler-0x3fb314>
    4ccc:	0438081d 	0x438081d
    4cd0:	07100000 	bltzal	t8,4cd4 <sigill_handler-0x3fb32c>
    4cd4:	000008ef 	0x8ef
    4cd8:	9a081e07 	lwr	t0,7687(s0)
    4cdc:	14000004 	bnez	zero,4cf0 <sigill_handler-0x3fb310>
    4ce0:	00082e07 	0x82e07
    4ce4:	081f0700 	j	7c1c00 <end+0x3b7c00>
    4ce8:	000004b4 	teq	zero,zero,0x12
    4cec:	040d0018 	0x40d0018
    4cf0:	00000328 	0x328
    4cf4:	00002513 	0x2513
    4cf8:	0003bc00 	sll	s7,v1,0x10
    4cfc:	03bc0c00 	0x3bc0c00
    4d00:	f60c0000 	sdc1	$f12,0(s0)
    4d04:	0c000003 	jal	c <sigill_handler-0x3ffff4>
    4d08:	00000069 	0x69
    4d0c:	0000690c 	syscall	0x1a4
    4d10:	040d0000 	0x40d0000
    4d14:	000003c2 	srl	zero,zero,0xf
    4d18:	00644612 	0x644612
    4d1c:	0823070c 	j	8c1c30 <end+0x4b7c30>
    4d20:	000003f6 	tne	zero,zero,0xf
    4d24:	00087b07 	0x87b07
    4d28:	08240700 	j	901c00 <end+0x4f7c00>
    4d2c:	00000069 	0x69
    4d30:	09050700 	j	4141c00 <end+0x3d37c00>
    4d34:	25070000 	addiu	a3,t0,0
    4d38:	00006908 	0x6908
    4d3c:	d9070400 	ldc2	$7,1024(t0)
    4d40:	07000008 	bltz	t8,4d64 <sigill_handler-0x3fb29c>
    4d44:	00690826 	xor	at,v1,t1
    4d48:	00080000 	sll	zero,t0,0x0
    4d4c:	040d0414 	0x40d0414
    4d50:	0000039e 	0x39e
    4d54:	00002513 	0x2513
    4d58:	00041c00 	sll	v1,a0,0x10
    4d5c:	03bc0c00 	0x3bc0c00
    4d60:	1c0c0000 	0x1c0c0000
    4d64:	0c000004 	jal	10 <sigill_handler-0x3ffff0>
    4d68:	00000069 	0x69
    4d6c:	0000690c 	syscall	0x1a4
    4d70:	040d0000 	0x40d0000
    4d74:	00000422 	0x422
    4d78:	fe040d15 	0xfe040d15
    4d7c:	13000003 	beqz	t8,4d8c <sigill_handler-0x3fb274>
    4d80:	00000025 	move	zero,zero
    4d84:	00000438 	0x438
    4d88:	0003bc0c 	syscall	0xef0
    4d8c:	040d0000 	0x40d0000
    4d90:	00000429 	0x429
    4d94:	00002513 	0x2513
    4d98:	00045200 	sll	t2,a0,0x8
    4d9c:	03bc0c00 	0x3bc0c00
    4da0:	520c0000 	beql	s0,t4,4da4 <sigill_handler-0x3fb25c>
    4da4:	00000004 	sllv	zero,zero,zero
    4da8:	0458040d 	0x458040d
    4dac:	6d060000 	0x6d060000
    4db0:	8c000008 	lw	zero,8(zero)
    4db4:	9a082a07 	lwr	t0,10759(s0)
    4db8:	07000004 	bltz	t8,4dcc <sigill_handler-0x3fb234>
    4dbc:	000008d1 	0x8d1
    4dc0:	18072b07 	0x18072b07
    4dc4:	00000003 	sra	zero,zero,0x0
    4dc8:	00089807 	srav	s3,t0,zero
    4dcc:	082c0700 	j	b01c00 <end+0x6f7c00>
    4dd0:	00000069 	0x69
    4dd4:	090f0780 	j	43c1e00 <end+0x3fb7e00>
    4dd8:	2d070000 	sltiu	a3,t0,0
    4ddc:	00006908 	0x6908
    4de0:	f8078400 	sdc2	$7,-31744(zero)
    4de4:	07000008 	bltz	t8,4e08 <sigill_handler-0x3fb1f8>
    4de8:	04ba0e2e 	0x4ba0e2e
    4dec:	00880000 	0x880000
    4df0:	043e040d 	0x43e040d
    4df4:	25130000 	addiu	s3,t0,0
    4df8:	b4000000 	0xb4000000
    4dfc:	0c000004 	jal	10 <sigill_handler-0x3ffff0>
    4e00:	000003bc 	0x3bc
    4e04:	0000690c 	syscall	0x1a4
    4e08:	040d0000 	0x40d0000
    4e0c:	000004a0 	0x4a0
    4e10:	032f040d 	break	0x32f,0x10
    4e14:	e7160000 	swc1	$f22,0(t8)
    4e18:	07000008 	bltz	t8,4e3c <sigill_handler-0x3fb1c4>
    4e1c:	032f1340 	0x32f1340
    4e20:	65170000 	0x65170000
    4e24:	0800766e 	j	1d9b8 <sigill_handler-0x3e2648>
    4e28:	04d82313 	0x4d82313
    4e2c:	040d0000 	0x40d0000
    4e30:	000002cd 	break	0x0,0xb
    4e34:	0004c018 	0x4c018
    4e38:	0c0b0100 	jal	2c0400 <sigill_handler-0x13fc00>
    4e3c:	70500305 	0x70500305
    4e40:	16060040 	bne	s0,a2,4f44 <sigill_handler-0x3fb0bc>
    4e44:	2800000e 	slti	zero,zero,14
    4e48:	21081601 	addi	t0,t0,5633
    4e4c:	07000005 	bltz	t8,4e64 <sigill_handler-0x3fb19c>
    4e50:	00000db9 	0xdb9
    4e54:	69081701 	0x69081701
    4e58:	00000000 	nop
    4e5c:	000e0007 	srav	zero,t6,zero
    4e60:	08180100 	j	600400 <end+0x1f6400>
    4e64:	00000069 	0x69
    4e68:	0dc00704 	jal	7001c10 <end+0x6bf7c10>
    4e6c:	19010000 	0x19010000
    4e70:	00052109 	0x52109
    4e74:	09000800 	j	4002000 <end+0x3bf8000>
    4e78:	0000005d 	0x5d
    4e7c:	00000531 	tgeu	zero,zero,0x14
    4e80:	00002c0a 	0x2c0a
    4e84:	19001f00 	blez	t0,ca88 <sigill_handler-0x3f3578>
    4e88:	00000e0c 	syscall	0x38
    4e8c:	250cf701 	addiu	t4,t0,-2303
    4e90:	3c000000 	lui	zero,0x0
    4e94:	2c004049 	sltiu	zero,zero,16457
    4e98:	01000000 	0x1000000
    4e9c:	0005699c 	0x5699c
    4ea0:	64661a00 	0x64661a00
    4ea4:	21f70100 	addi	s7,t7,256
    4ea8:	000003bc 	0x3bc
    4eac:	1b009102 	blez	t8,fffe92b8 <end+0xffbdf2b8>
    4eb0:	00000a0b 	0xa0b
    4eb4:	5232f701 	beql	s1,s2,2abc <sigill_handler-0x3fd544>
    4eb8:	02000004 	sllv	zero,zero,s0
    4ebc:	1c000491 	bgtz	zero,6104 <sigill_handler-0x3f9efc>
    4ec0:	00000e2b 	0xe2b
    4ec4:	250cf001 	addiu	t4,t0,-4095
    4ec8:	e0000000 	sc	zero,0(zero)
    4ecc:	5c004048 	bgtzl	zero,14ff0 <sigill_handler-0x3eb010>
    4ed0:	01000000 	0x1000000
    4ed4:	0005929c 	0x5929c
    4ed8:	64661a00 	0x64661a00
    4edc:	22f00100 	addi	s0,s7,256
    4ee0:	000003bc 	0x3bc
    4ee4:	00009102 	srl	s2,zero,0x4
    4ee8:	000de01d 	0xde01d
    4eec:	05d80100 	0x5d80100
    4ef0:	00000025 	move	zero,zero
    4ef4:	0040485c 	0x40485c
    4ef8:	00000084 	0x84
    4efc:	05e49c01 	0x5e49c01
    4f00:	b31b0000 	0xb31b0000
    4f04:	01000008 	jr	t0
    4f08:	002518d8 	0x2518d8
    4f0c:	91020000 	lbu	v0,0(t0)
    4f10:	64661e00 	0x64661e00
    4f14:	0dd90100 	jal	7640400 <end+0x7236400>
    4f18:	000003bc 	0x3bc
    4f1c:	1e709102 	0x1e709102
    4f20:	da010070 	ldc2	$1,112(s0)
    4f24:	0005e40f 	0x5e40f
    4f28:	6c910200 	0x6c910200
    4f2c:	0100721e 	0x100721e
    4f30:	002506db 	0x2506db
    4f34:	91020000 	lbu	v0,0(t0)
    4f38:	040d0068 	0x40d0068
    4f3c:	000004ec 	0x4ec
    4f40:	000dc61c 	0xdc61c
    4f44:	0cad0100 	jal	2b40400 <end+0x2736400>
    4f48:	00000025 	move	zero,zero
    4f4c:	0040471c 	0x40471c
    4f50:	00000140 	sll	zero,zero,0x5
    4f54:	06679c01 	0x6679c01
    4f58:	661a0000 	0x661a0000
    4f5c:	ad010064 	sw	at,100(t0)
    4f60:	0003bc22 	0x3bc22
    4f64:	00910200 	0x910200
    4f68:	000b7f1b 	0xb7f1b
    4f6c:	32ad0100 	andi	t5,s5,0x100
    4f70:	0000041c 	0x41c
    4f74:	1a049102 	0x1a049102
    4f78:	ad01006e 	sw	at,110(t0)
    4f7c:	0000693e 	0x693e
    4f80:	08910200 	j	2440800 <end+0x2036800>
    4f84:	0009081b 	0x9081b
    4f88:	47ad0100 	c1	0x1ad0100
    4f8c:	00000069 	0x69
    4f90:	1e0c9102 	0x1e0c9102
    4f94:	ae010069 	sw	at,105(s0)
    4f98:	00002506 	0x2506
    4f9c:	68910200 	0x68910200
    4fa0:	0100701e 	0x100701e
    4fa4:	05e40faf 	0x5e40faf
    4fa8:	91020000 	lbu	v0,0(t0)
    4fac:	0e071f6c 	jal	81c7db0 <end+0x7dbddb0>
    4fb0:	b0010000 	0xb0010000
    4fb4:	00039808 	0x39808
    4fb8:	70910200 	0x70910200
    4fbc:	0def1c00 	jal	7bc7000 <end+0x77bd000>
    4fc0:	85010000 	lh	at,0(t0)
    4fc4:	0000250c 	syscall	0x94
    4fc8:	4045e400 	0x4045e400
    4fcc:	00013800 	sll	a3,at,0x0
    4fd0:	e49c0100 	swc1	$f28,256(a0)
    4fd4:	1a000006 	blez	s0,4ff0 <sigill_handler-0x3fb010>
    4fd8:	01006466 	0x1006466
    4fdc:	03bc2185 	0x3bc2185
    4fe0:	91020000 	lbu	v0,0(t0)
    4fe4:	0b7f1b00 	j	dfc6c00 <end+0xdbbcc00>
    4fe8:	85010000 	lh	at,0(t0)
    4fec:	0003f62b 	0x3f62b
    4ff0:	04910200 	bgezal	a0,57f4 <sigill_handler-0x3fa80c>
    4ff4:	01006e1a 	0x1006e1a
    4ff8:	00693785 	0x693785
    4ffc:	91020000 	lbu	v0,0(t0)
    5000:	09081b08 	j	4206c20 <end+0x3dfcc20>
    5004:	85010000 	lh	at,0(t0)
    5008:	00006940 	sll	t5,zero,0x5
    500c:	0c910200 	jal	2440800 <end+0x2036800>
    5010:	0100691e 	0x100691e
    5014:	00250686 	0x250686
    5018:	91020000 	lbu	v0,0(t0)
    501c:	00701e68 	0x701e68
    5020:	e40f8701 	swc1	$f15,-30975(zero)
    5024:	02000005 	0x2000005
    5028:	d11f6c91 	0xd11f6c91
    502c:	0100000d 	break	0x100
    5030:	03980888 	0x3980888
    5034:	91020000 	lbu	v0,0(t0)
    5038:	df1c0070 	0xdf1c0070
    503c:	0100000d 	break	0x100
    5040:	00250c5f 	0x250c5f
    5044:	45580000 	0x45580000
    5048:	008c0040 	0x8c0040
    504c:	9c010000 	0x9c010000
    5050:	00000747 	0x747
    5054:	0064661a 	0x64661a
    5058:	bc275f01 	cache	0x7,24321(at)
    505c:	02000003 	0x2000003
    5060:	701a0091 	0x701a0091
    5064:	385f0100 	xori	ra,v0,0x100
    5068:	000005e4 	0x5e4
    506c:	1f049102 	0x1f049102
    5070:	00000df9 	0xdf9
    5074:	25066801 	addiu	a2,t0,26625
    5078:	02000000 	0x2000000
    507c:	d61f6c91 	ldc1	$f31,27793(s0)
    5080:	0100000d 	break	0x100
    5084:	00250e68 	0x250e68
    5088:	91020000 	lbu	v0,0(t0)
    508c:	04511f70 	bgezal	v0,ce50 <sigill_handler-0x3f31b0>
    5090:	68010000 	0x68010000
    5094:	00002518 	0x2518
    5098:	68910200 	0x68910200
    509c:	08ea1d00 	j	3a87400 <end+0x367d400>
    50a0:	24010000 	li	at,0
    50a4:	00002505 	0x2505
    50a8:	40430000 	0x40430000
    50ac:	00025800 	sll	t3,v0,0x0
    50b0:	da9c0100 	ldc2	$28,256(s4)
    50b4:	1a000007 	blez	s0,50d4 <sigill_handler-0x3faf2c>
    50b8:	00646670 	tge	v1,a0,0x199
    50bc:	da0e2401 	ldc2	$14,9217(s0)
    50c0:	02000007 	srav	zero,zero,s0
    50c4:	721e0091 	0x721e0091
    50c8:	06250100 	0x6250100
    50cc:	00000025 	move	zero,zero
    50d0:	1e609102 	bgtz	s3,fffe94dc <end+0xffbdf4dc>
    50d4:	01006176 	tne	t0,zero,0x185
    50d8:	03f60826 	xor	at,ra,s6
    50dc:	91020000 	lbu	v0,0(t0)
    50e0:	64661e64 	0x64661e64
    50e4:	27010030 	addiu	at,t8,48
    50e8:	0003bc0d 	break	0x3,0x2f0
    50ec:	68910200 	0x68910200
    50f0:	3164661e 	andi	a0,t3,0x661e
    50f4:	13270100 	beq	t9,a3,54f8 <sigill_handler-0x3fab08>
    50f8:	000003bc 	0x3bc
    50fc:	206c9102 	addi	t4,v1,-28414
    5100:	00727265 	0x727265
    5104:	38015001 	xori	at,zero,0x5001
    5108:	21004045 	addi	zero,t0,16453
    510c:	00000d8b 	0xd8b
    5110:	18014e01 	0x18014e01
    5114:	21004045 	addi	zero,t0,16453
    5118:	00000d90 	0xd90
    511c:	f8014c01 	sdc2	$1,19457(zero)
    5120:	21004044 	addi	zero,t0,16452
    5124:	00000e26 	0xe26
    5128:	dc014a01 	0xdc014a01
    512c:	00004044 	0x4044
    5130:	0025040d 	break	0x25,0x10
    5134:	2b000000 	slti	zero,t8,0
    5138:	04000004 	bltz	zero,514c <sigill_handler-0x3faeb4>
    513c:	00172e00 	sll	a1,s7,0x18
    5140:	90010400 	lbu	at,1024(zero)
    5144:	0c000000 	jal	0 <sigill_handler-0x400000>
    5148:	00000e5f 	0xe5f
    514c:	00000e48 	0xe48
    5150:	00404970 	tge	v0,zero,0x125
    5154:	00000354 	0x354
    5158:	00001ace 	0x1ace
    515c:	69050402 	0x69050402
    5160:	0300746e 	0x300746e
    5164:	000001ec 	0x1ec
    5168:	3817d102 	xori	s7,zero,0xd102
    516c:	04000000 	bltz	zero,5170 <sigill_handler-0x3fae90>
    5170:	002d0704 	0x2d0704
    5174:	01040000 	0x1040000
    5178:	00007306 	0x7306
    517c:	05020400 	bltzl	t0,6180 <sigill_handler-0x3f9e80>
    5180:	000001ac 	0x1ac
    5184:	00050804 	sllv	at,a1,zero
    5188:	04000000 	bltz	zero,518c <sigill_handler-0x3fae74>
    518c:	00710801 	movt	at,v1,$fcc4
    5190:	62030000 	0x62030000
    5194:	0300000c 	syscall	0xc0000
    5198:	00671931 	tgeu	v1,a3,0x64
    519c:	02040000 	0x2040000
    51a0:	00018c07 	0x18c07
    51a4:	09f60300 	j	7d80c00 <end+0x7976c00>
    51a8:	34030000 	li	v1,0x0
    51ac:	00003819 	0x3819
    51b0:	07080400 	tgei	t8,1024
    51b4:	00000023 	negu	zero,zero
    51b8:	00001d03 	sra	v1,zero,0x14
    51bc:	16090400 	bne	s0,t1,61c0 <sigill_handler-0x3f9e40>
    51c0:	00000038 	0x38
    51c4:	00047503 	sra	t6,a0,0x14
    51c8:	170a0400 	bne	t8,t2,61cc <sigill_handler-0x3f9e34>
    51cc:	00000099 	0x99
    51d0:	28070404 	slti	a3,zero,1028
    51d4:	03000000 	0x3000000
    51d8:	00000cf5 	0xcf5
    51dc:	5b122005 	0x5b122005
    51e0:	03000000 	0x3000000
    51e4:	00000c46 	0xc46
    51e8:	6e122305 	0x6e122305
    51ec:	03000000 	0x3000000
    51f0:	00000d65 	0xd65
    51f4:	6e122b05 	0x6e122b05
    51f8:	03000000 	0x3000000
    51fc:	00000c29 	0xc29
    5200:	6e122e05 	0x6e122e05
    5204:	05000000 	bltz	t0,5208 <sigill_handler-0x3fadf8>
    5208:	093a0534 	j	4e814d0 <end+0x4a774d0>
    520c:	00000190 	0x190
    5210:	000d4d06 	0xd4d06
    5214:	103b0500 	beq	at,k1,6618 <sigill_handler-0x3f99e8>
    5218:	00000190 	0x190
    521c:	0c1a0600 	jal	681800 <end+0x277800>
    5220:	3c050000 	lui	a1,0x0
    5224:	0000a00d 	break	0x0,0x280
    5228:	c2061000 	ll	a2,4096(s0)
    522c:	0500000c 	bltz	t0,5260 <sigill_handler-0x3fada0>
    5230:	00a00d3d 	0xa00d3d
    5234:	06120000 	bltzall	s0,5238 <sigill_handler-0x3fadc8>
    5238:	00000c73 	tltu	zero,zero,0x31
    523c:	ac0d3e05 	sw	t5,15877(zero)
    5240:	14000000 	bnez	zero,5244 <sigill_handler-0x3fadbc>
    5244:	000d9c06 	0xd9c06
    5248:	0d3f0500 	jal	4fc1400 <end+0x4bb7400>
    524c:	000000b8 	0xb8
    5250:	0d5d0618 	jal	5741860 <end+0x5337860>
    5254:	40050000 	mfc0	a1,c0_index
    5258:	0000c40c 	syscall	0x310
    525c:	3d061c00 	0x3d061c00
    5260:	0500000d 	bltz	t0,5298 <sigill_handler-0x3fad68>
    5264:	00c40c41 	0xc40c41
    5268:	06200000 	bltz	s1,526c <sigill_handler-0x3fad94>
    526c:	00000d55 	0xd55
    5270:	ac0d4205 	sw	t5,16901(zero)
    5274:	24000000 	li	zero,0
    5278:	000ce306 	0xce306
    527c:	0d430500 	jal	50c1400 <end+0x4cb7400>
    5280:	000000a0 	0xa0
    5284:	0c900628 	jal	24018a0 <end+0x1ff78a0>
    5288:	44050000 	mfc1	a1,$f0
    528c:	0000a00d 	break	0x0,0x280
    5290:	a4062a00 	sh	a2,10752(zero)
    5294:	0500000d 	bltz	t0,52cc <sigill_handler-0x3fad34>
    5298:	00a00d45 	0xa00d45
    529c:	062c0000 	teqi	s1,0
    52a0:	00000d77 	0xd77
    52a4:	a00d4605 	sb	t5,17925(zero)
    52a8:	2e000000 	sltiu	zero,s0,0
    52ac:	000d8306 	0xd8306
    52b0:	0d470500 	jal	51c1400 <end+0x4db7400>
    52b4:	000000a0 	0xa0
    52b8:	0c510630 	jal	14418c0 <end+0x10378c0>
    52bc:	48050000 	mfc2	a1,$0
    52c0:	0000a00d 	break	0x0,0x280
    52c4:	07003200 	bltz	t8,11ac8 <sigill_handler-0x3ee538>
    52c8:	00000054 	0x54
    52cc:	000001a0 	0x1a0
    52d0:	00003808 	0x3808
    52d4:	03000f00 	0x3000f00
    52d8:	00000d14 	0xd14
    52dc:	d0034905 	0xd0034905
    52e0:	09000000 	j	4000000 <end+0x3bf6000>
    52e4:	000001a0 	0x1a0
    52e8:	5d052005 	0x5d052005
    52ec:	00022309 	0x22309
    52f0:	0cd60600 	jal	3581800 <end+0x3177800>
    52f4:	5e050000 	0x5e050000
    52f8:	0000ac0d 	break	0x0,0x2b0
    52fc:	ec060000 	0xec060000
    5300:	0500000c 	bltz	t0,5334 <sigill_handler-0x3faccc>
    5304:	00c40c5f 	0xc40c5f
    5308:	06040000 	0x6040000
    530c:	00000c0c 	syscall	0x30
    5310:	b80d6005 	swr	t5,24581(zero)
    5314:	08000000 	j	0 <sigill_handler-0x400000>
    5318:	000c6b06 	0xc6b06
    531c:	0d610500 	jal	5841400 <end+0x5437400>
    5320:	000000b8 	0xb8
    5324:	0c3d060c 	jal	f41830 <end+0xb37830>
    5328:	62050000 	0x62050000
    532c:	0000ac0d 	break	0x0,0x2b0
    5330:	83061000 	lb	a2,4096(t8)
    5334:	0500000c 	bltz	t0,5368 <sigill_handler-0x3fac98>
    5338:	00ac0d63 	0xac0d63
    533c:	06140000 	0x6140000
    5340:	00000d45 	0xd45
    5344:	ac0d6405 	sw	t5,25605(zero)
    5348:	18000000 	blez	zero,534c <sigill_handler-0x3facb4>
    534c:	000c2106 	0xc2106
    5350:	0d650500 	jal	5941400 <end+0x5537400>
    5354:	000000ac 	0xac
    5358:	af03001c 	sw	v1,28(t8)
    535c:	0500000c 	bltz	t0,5390 <sigill_handler-0x3fac70>
    5360:	01b10366 	0x1b10366
    5364:	78030000 	0x78030000
    5368:	0500000e 	bltz	t0,53a4 <sigill_handler-0x3fac5c>
    536c:	023b0f80 	0x23b0f80
    5370:	040a0000 	tlti	zero,0
    5374:	00000241 	0x241
    5378:	0000250b 	0x250b
    537c:	00026900 	sll	t5,v0,0x4
    5380:	02690c00 	0x2690c00
    5384:	8d0c0000 	lw	t4,0(t0)
    5388:	0c000000 	jal	0 <sigill_handler-0x400000>
    538c:	0000002c 	0x2c
    5390:	0000810c 	syscall	0x204
    5394:	026b0c00 	0x26b0c00
    5398:	2c0c0000 	sltiu	t4,zero,0
    539c:	00000000 	nop
    53a0:	040a040d 	tlti	zero,1037
    53a4:	00000271 	tgeu	zero,zero,0x9
    53a8:	0e6b0f0e 	jal	9ac3c38 <end+0x96b9c38>
    53ac:	19010000 	0x19010000
    53b0:	00002505 	0x2505
    53b4:	404a2400 	0x404a2400
    53b8:	0002a000 	sll	s4,v0,0x0
    53bc:	da9c0100 	ldc2	$28,256(s4)
    53c0:	10000003 	b	53d0 <sigill_handler-0x3fac30>
    53c4:	01006870 	tge	t0,zero,0x1a1
    53c8:	03da1e19 	0x3da1e19
    53cc:	91020000 	lbu	v0,0(t0)
    53d0:	69621000 	0x69621000
    53d4:	1901006e 	0x1901006e
    53d8:	00026b2e 	0x26b2e
    53dc:	04910200 	bgezal	a0,5be0 <sigill_handler-0x3fa420>
    53e0:	000e3f11 	0xe3f11
    53e4:	40190100 	0x40190100
    53e8:	0000022f 	0x22f
    53ec:	11089102 	beq	t0,t0,fffe97f8 <end+0xffbdf7f8>
    53f0:	00000815 	0x815
    53f4:	69501901 	0x69501901
    53f8:	02000002 	0x2000002
    53fc:	76120c91 	jalx	8483244 <end+0x8079244>
    5400:	1a010061 	0x1a010061
    5404:	00008d09 	0x8d09
    5408:	40910200 	0x40910200
    540c:	000e8513 	0xe8513
    5410:	091b0100 	j	46c0400 <end+0x42b6400>
    5414:	0000002c 	0x2c
    5418:	13449102 	beq	k0,a0,fffe9824 <end+0xffbdf824>
    541c:	00000e8e 	0xe8e
    5420:	2c091c01 	sltiu	t1,zero,7169
    5424:	02000000 	0x2000000
    5428:	40134891 	0x40134891
    542c:	01000003 	0x1000003
    5430:	0081081d 	0x81081d
    5434:	91030000 	lbu	v1,0(t0)
    5438:	72127fb8 	0x72127fb8
    543c:	06220100 	bltzl	s1,5840 <sigill_handler-0x3fa7c0>
    5440:	00000025 	move	zero,zero
    5444:	12589102 	beq	s2,t8,fffe9850 <end+0xffbdf850>
    5448:	23010069 	addi	at,t8,105
    544c:	00002c09 	jalr.hb	a1,zero
    5450:	bc910300 	cache	0x11,768(a0)
    5454:	0908137f 	j	4204dfc <end+0x3dfadfc>
    5458:	24010000 	li	at,0
    545c:	00008d09 	0x8d09
    5460:	4c910200 	0x4c910200
    5464:	404aa814 	0x404aa814
    5468:	00002c00 	sll	a1,zero,0x10
    546c:	00035900 	sll	t3,v1,0x4
    5470:	5f5f1200 	0x5f5f1200
    5474:	27010061 	addiu	at,t8,97
    5478:	00002c07 	0x2c07
    547c:	50910200 	beql	a0,s1,5c80 <sigill_handler-0x3fa380>
    5480:	625f5f12 	0x625f5f12
    5484:	07270100 	0x7270100
    5488:	00000099 	0x99
    548c:	00549102 	0x549102
    5490:	404b2414 	0x404b2414
    5494:	00002c00 	sll	a1,zero,0x10
    5498:	00038500 	sll	s0,v1,0x14
    549c:	5f5f1200 	0x5f5f1200
    54a0:	2d010061 	sltiu	at,t0,97
    54a4:	00002c14 	0x2c14
    54a8:	5c910200 	0x5c910200
    54ac:	625f5f12 	0x625f5f12
    54b0:	142d0100 	bne	at,t5,58b4 <sigill_handler-0x3fa74c>
    54b4:	00000099 	0x99
    54b8:	00609102 	0x609102
    54bc:	404b8014 	0x404b8014
    54c0:	00002c00 	sll	a1,zero,0x10
    54c4:	0003b100 	sll	s6,v1,0x4
    54c8:	5f5f1200 	0x5f5f1200
    54cc:	2e010061 	sltiu	at,s0,97
    54d0:	00002c35 	0x2c35
    54d4:	6c910200 	0x6c910200
    54d8:	625f5f12 	0x625f5f12
    54dc:	352e0100 	ori	t6,t1,0x100
    54e0:	00000025 	move	zero,zero
    54e4:	00709102 	0x709102
    54e8:	404c2015 	0x404c2015
    54ec:	00002c00 	sll	a1,zero,0x10
    54f0:	5f5f1200 	0x5f5f1200
    54f4:	36010061 	ori	at,s0,0x61
    54f8:	00002c32 	tlt	zero,zero,0xb0
    54fc:	64910200 	0x64910200
    5500:	625f5f12 	0x625f5f12
    5504:	32360100 	andi	s6,s1,0x100
    5508:	00000025 	move	zero,zero
    550c:	00689102 	0x689102
    5510:	23040a00 	addi	a0,t8,2560
    5514:	16000002 	bnez	s0,5520 <sigill_handler-0x3faae0>
    5518:	00000e36 	tne	zero,zero,0x38
    551c:	28130401 	slti	s3,zero,1025
    5520:	70000004 	msub	zero,zero
    5524:	b4004049 	0xb4004049
    5528:	01000000 	0x1000000
    552c:	0004289c 	0x4289c
    5530:	0e951100 	jal	a544400 <end+0xa13a400>
    5534:	04010000 	b	5538 <sigill_handler-0x3faac8>
    5538:	00026b28 	0x26b28
    553c:	00910200 	0x910200
    5540:	0009c711 	0x9c711
    5544:	37040100 	ori	a0,t8,0x100
    5548:	0000002c 	0x2c
    554c:	13049102 	beq	t8,a0,fffe9958 <end+0xffbdf958>
    5550:	00000d0f 	0xd0f
    5554:	28140501 	slti	s4,zero,1281
    5558:	02000004 	sllv	zero,zero,s0
    555c:	0a007091 	j	801c244 <end+0x7c12244>
    5560:	0001ac04 	0x1ac04
    5564:	04000000 	bltz	zero,5568 <sigill_handler-0x3faa98>
    5568:	00040000 	sll	zero,a0,0x0
    556c:	0000185b 	0x185b
    5570:	00900104 	0x900104
    5574:	a20c0000 	sb	t4,0(s0)
    5578:	4800000e 	0x4800000e
    557c:	d000000e 	0xd000000e
    5580:	7000404c 	0x7000404c
    5584:	4d00000c 	bc3f	55b8 <sigill_handler-0x3faa48>
    5588:	0200001c 	0x200001c
    558c:	0000022b 	0x22b
    5590:	311b2802 	andi	k1,t0,0x2802
    5594:	03000000 	0x3000000
    5598:	0001f304 	0x1f304
    559c:	02320200 	0x2320200
    55a0:	63020000 	0x63020000
    55a4:	00002518 	0x2518
    55a8:	05040400 	0x5040400
    55ac:	00746e69 	0x746e69
    55b0:	0001ec02 	srl	sp,at,0x10
    55b4:	17d10300 	bne	s8,s1,61b8 <sigill_handler-0x3f9e48>
    55b8:	00000056 	0x56
    55bc:	2d070405 	sltiu	a3,t0,1029
    55c0:	05000000 	bltz	t0,55c4 <sigill_handler-0x3faa3c>
    55c4:	00730601 	0x730601
    55c8:	02050000 	0x2050000
    55cc:	0001ac05 	0x1ac05
    55d0:	05080500 	tgei	t0,1280
    55d4:	00000000 	nop
    55d8:	71080105 	0x71080105
    55dc:	05000000 	bltz	t0,55e0 <sigill_handler-0x3faa20>
    55e0:	018c0702 	0x18c0702
    55e4:	08050000 	j	140000 <sigill_handler-0x2c0000>
    55e8:	00002307 	0x2307
    55ec:	07040500 	0x7040500
    55f0:	00000028 	0x28
    55f4:	000eca02 	srl	t9,t6,0x8
    55f8:	10070400 	beq	zero,a3,65fc <sigill_handler-0x3f9a04>
    55fc:	0000009a 	0x9a
    5600:	00a00406 	0xa00406
    5604:	b5070000 	0xb5070000
    5608:	08000000 	j	0 <sigill_handler-0x400000>
    560c:	000000b5 	0xb5
    5610:	0000b708 	0xb708
    5614:	004a0800 	0x4a0800
    5618:	09000000 	j	4000000 <end+0x3bf6000>
    561c:	c4040604 	lwc1	$f4,1540(zero)
    5620:	05000000 	bltz	t0,5624 <sigill_handler-0x3fa9dc>
    5624:	007a0601 	0x7a0601
    5628:	bd0a0000 	cache	0xa,0(t0)
    562c:	0b000000 	j	c000000 <end+0xbbf6000>
    5630:	00000eff 	0xeff
    5634:	9806c901 	lwr	a2,-14079(zero)
    5638:	a8004055 	swl	zero,16469(zero)
    563c:	01000003 	0x1000003
    5640:	0001f59c 	0x1f59c
    5644:	756f0c00 	jalx	5bc3000 <end+0x57b9000>
    5648:	c9010074 	lwc2	$1,116(t0)
    564c:	00008e1f 	0x8e1f
    5650:	00910200 	0x910200
    5654:	0008150d 	break	0x8,0x54
    5658:	2ac90100 	slti	t1,s6,256
    565c:	000000b5 	0xb5
    5660:	0c049102 	jal	124408 <sigill_handler-0x2dbbf8>
    5664:	c9010075 	lwc2	$1,117(t0)
    5668:	0000873e 	0x873e
    566c:	08910200 	j	2440800 <end+0x2036800>
    5670:	000ee00d 	break	0xe,0x380
    5674:	45c90100 	0x45c90100
    5678:	00000043 	sra	zero,zero,0x1
    567c:	0d0c9102 	jal	4324408 <end+0x3f1a408>
    5680:	00000ec1 	0xec1
    5684:	434fc901 	c0	0x14fc901
    5688:	02000000 	0x2000000
    568c:	270d1091 	addiu	t5,t8,4241
    5690:	0100000f 	0x100000f
    5694:	00435dc9 	0x435dc9
    5698:	91020000 	lbu	v0,0(t0)
    569c:	0eaf0d14 	jal	abc3450 <end+0xa7b9450>
    56a0:	ca010000 	lwc2	$1,0(s0)
    56a4:	0000430d 	break	0x0,0x10c
    56a8:	18910200 	0x18910200
    56ac:	000eaa0d 	break	0xe,0x2a8
    56b0:	1bca0100 	0x1bca0100
    56b4:	000000bd 	0xbd
    56b8:	0d1c9102 	jal	4724408 <end+0x431a408>
    56bc:	00000ed9 	0xed9
    56c0:	4325ca01 	c0	0x125ca01
    56c4:	02000000 	0x2000000
    56c8:	090e2091 	j	4388244 <end+0x3f7e244>
    56cc:	0100000f 	0x100000f
    56d0:	004306d5 	0x4306d5
    56d4:	91020000 	lbu	v0,0(t0)
    56d8:	75620f58 	jalx	5883d60 <end+0x5479d60>
    56dc:	d6010066 	ldc1	$f1,102(s0)
    56e0:	0001f507 	0x1f507
    56e4:	60910300 	0x60910300
    56e8:	00700f06 	0x700f06
    56ec:	0808d701 	j	235c04 <sigill_handler-0x1ca3fc>
    56f0:	02000002 	0x2000002
    56f4:	690f4891 	0x690f4891
    56f8:	06d80100 	0x6d80100
    56fc:	00000043 	sra	zero,zero,0x1
    5700:	104c9102 	beq	v0,t4,fffe9b0c <end+0xffbdfb0c>
    5704:	00000e9c 	0xe9c
    5708:	06010001 	bgez	s0,5710 <sigill_handler-0x3fa8f0>
    570c:	00000043 	sra	zero,zero,0x1
    5710:	11509102 	beq	t2,s0,fffe9b1c <end+0xffbdfb1c>
    5714:	00646e65 	0x646e65
    5718:	06010101 	bgez	s0,5b20 <sigill_handler-0x3fa4e0>
    571c:	00000043 	sra	zero,zero,0x1
    5720:	12549102 	beq	s2,s4,fffe9b2c <end+0xffbdfb2c>
    5724:	00405638 	0x405638
    5728:	000000d8 	0xd8
    572c:	000001da 	0x1da
    5730:	706d740f 	0x706d740f
    5734:	07db0100 	0x7db0100
    5738:	00000043 	sra	zero,zero,0x1
    573c:	00649102 	0x649102
    5740:	40588c13 	0x40588c13
    5744:	00006000 	sll	t4,zero,0x0
    5748:	6d741100 	0x6d741100
    574c:	0a010070 	j	80401c0 <end+0x7c361c0>
    5750:	00bd0801 	movt	at,a1,$fcc7
    5754:	91020000 	lbu	v0,0(t0)
    5758:	14000068 	bnez	zero,58fc <sigill_handler-0x3fa704>
    575c:	000000bd 	0xbd
    5760:	00000208 	0x208
    5764:	00005615 	0x5615
    5768:	5c910300 	0x5c910300
    576c:	04060006 	0x4060006
    5770:	000000bd 	0xbd
    5774:	000eb70b 	0xeb70b
    5778:	06b10100 	bgezal	s5,5b7c <sigill_handler-0x3fa484>
    577c:	00405420 	0x405420
    5780:	00000178 	0x178
    5784:	02989c01 	0x2989c01
    5788:	6f0c0000 	0x6f0c0000
    578c:	01007475 	0x1007475
    5790:	008e1fb1 	tgeu	a0,t6,0x7e
    5794:	91020000 	lbu	v0,0(t0)
    5798:	08150d00 	j	543400 <end+0x139400>
    579c:	b1010000 	0xb1010000
    57a0:	0000b52a 	0xb52a
    57a4:	04910200 	bgezal	a0,5fa8 <sigill_handler-0x3fa058>
    57a8:	0100730c 	syscall	0x401cc
    57ac:	00b73cb1 	tgeu	a1,s7,0xf2
    57b0:	91020000 	lbu	v0,0(t0)
    57b4:	0f270d08 	jal	c9c3420 <end+0xc5b9420>
    57b8:	b1010000 	0xb1010000
    57bc:	00004343 	sra	t0,zero,0xd
    57c0:	0c910200 	jal	2440800 <end+0x2036800>
    57c4:	000eaf0d 	break	0xe,0x2bc
    57c8:	4fb10100 	c3	0x1b10100
    57cc:	00000043 	sra	zero,zero,0x1
    57d0:	0f109102 	jal	c424408 <end+0xc01a408>
    57d4:	b2010069 	0xb2010069
    57d8:	00004306 	0x4306
    57dc:	68910200 	0x68910200
    57e0:	6e656c0f 	0x6e656c0f
    57e4:	06b30100 	bgezall	s5,5be8 <sigill_handler-0x3fa418>
    57e8:	00000043 	sra	zero,zero,0x1
    57ec:	0f6c9102 	jal	db24408 <end+0xd71a408>
    57f0:	01003173 	tltu	t0,zero,0xc5
    57f4:	00b70eb4 	teq	a1,s7,0x3a
    57f8:	91020000 	lbu	v0,0(t0)
    57fc:	1c0b0070 	0x1c0b0070
    5800:	0100000f 	0x100000f
    5804:	52e0069d 	beqzl	s7,727c <sigill_handler-0x3f8d84>
    5808:	01400040 	0x1400040
    580c:	9c010000 	0x9c010000
    5810:	00000314 	0x314
    5814:	74756f0c 	jalx	1d5bc30 <end+0x1951c30>
    5818:	209d0100 	addi	sp,a0,256
    581c:	0000008e 	0x8e
    5820:	0d009102 	jal	4024408 <end+0x3c1a408>
    5824:	00000815 	0x815
    5828:	b52b9d01 	0xb52b9d01
    582c:	02000000 	0x2000000
    5830:	630c0491 	0x630c0491
    5834:	369d0100 	ori	sp,s4,0x100
    5838:	000000bd 	0xbd
    583c:	0d089102 	jal	4224408 <end+0x3e1a408>
    5840:	00000f27 	0xf27
    5844:	433d9d01 	c0	0x13d9d01
    5848:	02000000 	0x2000000
    584c:	af0d0c91 	sw	t5,3217(t8)
    5850:	0100000e 	0x100000e
    5854:	0043499d 	0x43499d
    5858:	91020000 	lbu	v0,0(t0)
    585c:	00690f10 	0x690f10
    5860:	43069e01 	c0	0x1069e01
    5864:	02000000 	0x2000000
    5868:	160e7091 	bne	s0,t6,21ab0 <sigill_handler-0x3de550>
    586c:	0100000f 	0x100000f
    5870:	00c40da3 	0xc40da3
    5874:	91020000 	lbu	v0,0(t0)
    5878:	ef160074 	0xef160074
    587c:	0100000e 	0x100000e
    5880:	4cd00608 	0x4cd00608
    5884:	06100040 	bltzal	s0,5988 <sigill_handler-0x3fa678>
    5888:	9c010000 	0x9c010000
    588c:	000003fc 	0x3fc
    5890:	74756f0c 	jalx	1d5bc30 <end+0x1951c30>
    5894:	1f080100 	0x1f080100
    5898:	0000008e 	0x8e
    589c:	0d009102 	jal	4024408 <end+0x3c1a408>
    58a0:	00000815 	0x815
    58a4:	b52a0801 	0xb52a0801
    58a8:	02000000 	0x2000000
    58ac:	660c0491 	0x660c0491
    58b0:	0100746d 	0x100746d
    58b4:	00b73c08 	0xb73c08
    58b8:	91020000 	lbu	v0,0(t0)
    58bc:	70610c08 	0x70610c08
    58c0:	49080100 	bc2f	$cc2,5cc4 <sigill_handler-0x3fa33c>
    58c4:	00000037 	0x37
    58c8:	0f0c9102 	jal	c324408 <end+0xbf1a408>
    58cc:	09010063 	j	404018c <end+0x3c3618c>
    58d0:	0000bd07 	0xbd07
    58d4:	70910200 	0x70910200
    58d8:	0100730f 	0x100730f
    58dc:	00b70e0a 	0xb70e0a
    58e0:	91020000 	lbu	v0,0(t0)
    58e4:	756e0f6c 	jalx	5b83db0 <end+0x5779db0>
    58e8:	0b01006d 	j	c0401b4 <end+0xbc361b4>
    58ec:	0003fc07 	0x3fc07
    58f0:	50910200 	beql	a0,s1,60f4 <sigill_handler-0x3f9f0c>
    58f4:	000ef90e 	0xef90e
    58f8:	060d0100 	0x60d0100
    58fc:	00000043 	sra	zero,zero,0x1
    5900:	0e549102 	jal	9524408 <end+0x911a408>
    5904:	00000ee5 	0xee5
    5908:	43060e01 	c0	0x1060e01
    590c:	02000000 	0x2000000
    5910:	c10e5891 	ll	t6,22673(t0)
    5914:	0100000e 	0x100000e
    5918:	0043060f 	0x43060f
    591c:	91020000 	lbu	v0,0(t0)
    5920:	0eaf0e5c 	jal	abc3970 <end+0xa7b9970>
    5924:	10010000 	beq	zero,at,5928 <sigill_handler-0x3fa6d8>
    5928:	00004306 	0x4306
    592c:	60910200 	0x60910200
    5930:	000eaa0e 	0xeaa0e
    5934:	07110100 	bgezal	t8,5d38 <sigill_handler-0x3fa2c8>
    5938:	000000bd 	0xbd
    593c:	17649102 	bne	k1,a0,fffe9d48 <end+0xffbdfd48>
    5940:	000000f0 	tge	zero,zero,0x3
    5944:	7275630f 	0x7275630f
    5948:	0f160100 	jal	c580400 <end+0xc176400>
    594c:	000000b7 	0xb7
    5950:	0f689102 	jal	da24408 <end+0xd61a408>
    5954:	32010064 	andi	at,s0,0x64
    5958:	0000bd08 	0xbd08
    595c:	65910200 	0x65910200
    5960:	04050000 	0x4050000
    5964:	00000505 	0x505
    5968:	02890000 	0x2890000
    596c:	00040000 	sll	zero,a0,0x0
    5970:	0000198d 	break	0x0,0x66
    5974:	00900104 	0x900104
    5978:	630c0000 	0x630c0000
    597c:	4800000f 	0x4800000f
    5980:	4000000e 	0x4000000e
    5984:	9c004059 	0x9c004059
    5988:	ba000004 	swr	zero,4(s0)
    598c:	0200001f 	0x200001f
    5990:	6e690504 	0x6e690504
    5994:	ec030074 	0xec030074
    5998:	02000001 	movf	zero,s0,$fcc0
    599c:	003817d1 	0x3817d1
    59a0:	04040000 	0x4040000
    59a4:	00002d07 	0x2d07
    59a8:	06010400 	bgez	s0,69ac <sigill_handler-0x3f9654>
    59ac:	00000073 	tltu	zero,zero,0x1
    59b0:	ac050204 	sw	a1,516(zero)
    59b4:	04000001 	bltz	zero,59bc <sigill_handler-0x3fa644>
    59b8:	00000508 	0x508
    59bc:	01040000 	0x1040000
    59c0:	00007108 	0x7108
    59c4:	07020400 	bltzl	t8,69c8 <sigill_handler-0x3f9638>
    59c8:	0000018c 	syscall	0x6
    59cc:	0009f603 	sra	s8,t1,0x18
    59d0:	19340300 	0x19340300
    59d4:	00000038 	0x38
    59d8:	23070804 	addi	a3,t8,2052
    59dc:	03000000 	0x3000000
    59e0:	00000ad1 	0xad1
    59e4:	54170704 	bnel	zero,s7,75f8 <sigill_handler-0x3f8a08>
    59e8:	03000000 	0x3000000
    59ec:	0000001d 	0x1d
    59f0:	38160904 	xori	s6,zero,0x904
    59f4:	03000000 	0x3000000
    59f8:	00000475 	0x475
    59fc:	99170a04 	lwr	s7,2564(t0)
    5a00:	04000000 	bltz	zero,5a04 <sigill_handler-0x3fa5fc>
    5a04:	00280704 	0x280704
    5a08:	5c050000 	0x5c050000
    5a0c:	0100000f 	0x100000f
    5a10:	00250553 	0x250553
    5a14:	5d080000 	0x5d080000
    5a18:	00d40040 	0xd40040
    5a1c:	9c010000 	0x9c010000
    5a20:	000000d5 	0xd5
    5a24:	01007006 	srlv	t6,zero,t0
    5a28:	00d51853 	0xd51853
    5a2c:	91020000 	lbu	v0,0(t0)
    5a30:	00710600 	0x710600
    5a34:	d5275301 	ldc1	$f7,21249(t1)
    5a38:	02000000 	0x2000000
    5a3c:	07000491 	bltz	t8,6c84 <sigill_handler-0x3f937c>
    5a40:	0000e204 	0xe204
    5a44:	06010400 	bgez	s0,6a48 <sigill_handler-0x3f95b8>
    5a48:	0000007a 	0x7a
    5a4c:	0000db08 	0xdb08
    5a50:	0f330500 	jal	ccc1400 <end+0xc8b7400>
    5a54:	4a010000 	c2	0x10000
    5a58:	0000d50d 	break	0x0,0x354
    5a5c:	405c9400 	0x405c9400
    5a60:	00007400 	sll	t6,zero,0x10
    5a64:	1c9c0100 	0x1c9c0100
    5a68:	06000001 	bltz	s0,5a70 <sigill_handler-0x3fa590>
    5a6c:	4a010073 	c2	0x10073
    5a70:	0000d520 	0xd520
    5a74:	00910200 	0x910200
    5a78:	01006306 	0x1006306
    5a7c:	0025274a 	0x25274a
    5a80:	91020000 	lbu	v0,0(t0)
    5a84:	46050004 	c1	0x50004
    5a88:	0100000f 	0x100000f
    5a8c:	01640741 	0x1640741
    5a90:	5c300000 	0x5c300000
    5a94:	00640040 	0x640040
    5a98:	9c010000 	0x9c010000
    5a9c:	00000164 	0x164
    5aa0:	74736406 	jalx	1cd9018 <end+0x18cf018>
    5aa4:	14410100 	bne	v0,at,5ea8 <sigill_handler-0x3fa158>
    5aa8:	00000164 	0x164
    5aac:	06009102 	bltz	s0,fffe9eb8 <end+0xffbdfeb8>
    5ab0:	00637273 	tltu	v1,v1,0x1c9
    5ab4:	d5254101 	ldc1	$f5,16641(t1)
    5ab8:	02000000 	0x2000000
    5abc:	72090491 	0x72090491
    5ac0:	01007465 	0x1007465
    5ac4:	01640842 	0x1640842
    5ac8:	91020000 	lbu	v0,0(t0)
    5acc:	04070070 	0x4070070
    5ad0:	000000db 	0xdb
    5ad4:	000f3f05 	0xf3f05
    5ad8:	08370100 	j	dc0400 <end+0x9b6400>
    5adc:	0000002c 	0x2c
    5ae0:	00405bd4 	0x405bd4
    5ae4:	0000005c 	0x5c
    5ae8:	019f9c01 	0x19f9c01
    5aec:	73060000 	madd	t8,a2
    5af0:	1b370100 	0x1b370100
    5af4:	000000d5 	0xd5
    5af8:	09009102 	j	4024408 <end+0x3c1a408>
    5afc:	3801006e 	xori	at,zero,0x6e
    5b00:	00002506 	0x2506
    5b04:	70910200 	0x70910200
    5b08:	0f4d0500 	jal	d341400 <end+0xcf37400>
    5b0c:	20010000 	addi	at,zero,0
    5b10:	00021f07 	0x21f07
    5b14:	405ab000 	0x405ab000
    5b18:	00012400 	sll	a0,at,0x10
    5b1c:	1f9c0100 	0x1f9c0100
    5b20:	06000002 	bltz	s0,5b2c <sigill_handler-0x3fa4d4>
    5b24:	00747364 	0x747364
    5b28:	1f142001 	0x1f142001
    5b2c:	02000002 	0x2000002
    5b30:	63060091 	0x63060091
    5b34:	1d200100 	bgtz	t1,5f38 <sigill_handler-0x3fa0c8>
    5b38:	00000025 	move	zero,zero
    5b3c:	06049102 	0x6049102
    5b40:	2001006e 	addi	at,zero,110
    5b44:	00002c27 	0x2c27
    5b48:	08910200 	j	2440800 <end+0x2036800>
    5b4c:	000f540a 	0xf540a
    5b50:	08210100 	j	840400 <end+0x436400>
    5b54:	0000021f 	0x21f
    5b58:	09689102 	j	5a24408 <end+0x561a408>
    5b5c:	0078616d 	0x78616d
    5b60:	1f082201 	0x1f082201
    5b64:	02000002 	0x2000002
    5b68:	3a0a6c91 	xori	t2,s0,0x6c91
    5b6c:	0100000f 	0x100000f
    5b70:	00750923 	0x750923
    5b74:	91020000 	lbu	v0,0(t0)
    5b78:	0f2e0a70 	jal	cb829c0 <end+0xc7789c0>
    5b7c:	24010000 	li	at,0
    5b80:	0000620b 	0x620b
    5b84:	74910200 	jalx	2440800 <end+0x2036800>
    5b88:	05040b00 	0x5040b00
    5b8c:	00000f6c 	0xf6c
    5b90:	1f070301 	0x1f070301
    5b94:	40000002 	mfc0	zero,$0,2
    5b98:	70004059 	0x70004059
    5b9c:	01000001 	movf	zero,t0,$fcc0
    5ba0:	0002859c 	0x2859c
    5ba4:	73640600 	0x73640600
    5ba8:	03010074 	teq	t8,at,0x1
    5bac:	00021f14 	0x21f14
    5bb0:	00910200 	0x910200
    5bb4:	63727306 	0x63727306
    5bb8:	25030100 	addiu	v1,t0,256
    5bbc:	00000285 	0x285
    5bc0:	06049102 	0x6049102
    5bc4:	0301006e 	0x301006e
    5bc8:	00002c31 	tgeu	zero,zero,0xb0
    5bcc:	08910200 	j	2440800 <end+0x2036800>
    5bd0:	000f540a 	0xf540a
    5bd4:	08040100 	j	100400 <sigill_handler-0x2ffc00>
    5bd8:	0000021f 	0x21f
    5bdc:	09709102 	j	5c24408 <end+0x581a408>
    5be0:	0078616d 	0x78616d
    5be4:	1f080501 	0x1f080501
    5be8:	02000002 	0x2000002
    5bec:	07007491 	bltz	t8,22e34 <sigill_handler-0x3dd1cc>
    5bf0:	00028b04 	0x28b04
    5bf4:	地址 0x0000000000005bf4 越界。


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	addiu	at,t0,4353
       4:	030b130e 	0x30b130e
       8:	110e1b0e 	beq	t0,t6,6c44 <sigill_handler-0x3f93bc>
       c:	10061201 	beq	zero,a2,4814 <sigill_handler-0x3fb7ec>
      10:	02000017 	0x2000017
      14:	0b0b0024 	j	c2c0090 <end+0xbeb6090>
      18:	08030b3e 	j	c2cf8 <sigill_handler-0x33d308>
      1c:	24030000 	li	v1,0
      20:	3e0b0b00 	0x3e0b0b00
      24:	000e030b 	0xe030b
      28:	00160400 	sll	zero,s6,0x10
      2c:	0b3a0e03 	j	ce8380c <end+0xca7980c>
      30:	0b390b3b 	j	ce42cec <end+0xca38cec>
      34:	00001349 	0x1349
      38:	03011305 	0x3011305
      3c:	3a0b0b0e 	xori	t3,s0,0xb0e
      40:	390b3b0b 	xori	t3,t0,0x3b0b
      44:	0013010b 	0x13010b
      48:	000d0600 	sll	zero,t5,0x18
      4c:	0b3a0803 	j	ce8200c <end+0xca7800c>
      50:	0b390b3b 	j	ce42cec <end+0xca38cec>
      54:	0b381349 	j	ce04d24 <end+0xc9fad24>
      58:	0d070000 	jal	41c0000 <end+0x3db6000>
      5c:	3a0e0300 	xori	t6,s0,0x300
      60:	390b3b0b 	xori	t3,t0,0x3b0b
      64:	3813490b 	xori	s3,zero,0x490b
      68:	0800000b 	j	2c <sigill_handler-0x3fffd4>
      6c:	19270115 	0x19270115
      70:	00001301 	0x1301
      74:	49000509 	bc2f	149c <sigill_handler-0x3feb64>
      78:	0a000013 	j	800004c <end+0x7bf604c>
      7c:	0b0b000f 	j	c2c003c <end+0xbeb603c>
      80:	00001349 	0x1349
      84:	0300340b 	0x300340b
      88:	3b0b3a08 	xori	t3,t8,0x3a08
      8c:	490b390b 	bc2tl	$cc2,e4bc <sigill_handler-0x3f1b44>
      90:	00180213 	0x180213
      94:	012e0c00 	0x12e0c00
      98:	0e03193f 	jal	80c64fc <end+0x7cbc4fc>
      9c:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
      a0:	13490b39 	beq	k0,t1,2d88 <sigill_handler-0x3fd278>
      a4:	06120111 	bltzall	s0,4ec <sigill_handler-0x3ffb14>
      a8:	42961840 	c0	0x961840
      ac:	00130119 	0x130119
      b0:	012e0d00 	0x12e0d00
      b4:	0e03193f 	jal	80c64fc <end+0x7cbc4fc>
      b8:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
      bc:	19270b39 	0x19270b39
      c0:	06120111 	bltzall	s0,508 <sigill_handler-0x3ffaf8>
      c4:	42961840 	c0	0x961840
      c8:	00130119 	0x130119
      cc:	00050e00 	sll	at,a1,0x18
      d0:	0b3a0803 	j	ce8200c <end+0xca7800c>
      d4:	0b390b3b 	j	ce42cec <end+0xca38cec>
      d8:	18021349 	0x18021349
      dc:	2e0f0000 	sltiu	t7,s0,0
      e0:	03193f01 	0x3193f01
      e4:	3b0b3a0e 	xori	t3,t8,0x3a0e
      e8:	270b390b 	addiu	t3,t8,14603
      ec:	12011119 	beq	s0,at,4554 <sigill_handler-0x3fbaac>
      f0:	96184006 	lhu	t8,16390(s0)
      f4:	00001942 	srl	v1,zero,0x5
      f8:	00110100 	sll	zero,s1,0x4
      fc:	01110610 	0x1110610
     100:	0e030112 	jal	80c0448 <end+0x7cb6448>
     104:	0e250e1b 	jal	894386c <end+0x853986c>
     108:	00000513 	0x513
     10c:	00110100 	sll	zero,s1,0x4
     110:	01110610 	0x1110610
     114:	0e030112 	jal	80c0448 <end+0x7cb6448>
     118:	0e250e1b 	jal	894386c <end+0x853986c>
     11c:	00000513 	0x513
     120:	01110100 	0x1110100
     124:	0b130e25 	j	c4c3894 <end+0xc0b9894>
     128:	0e1b0e03 	jal	86c380c <end+0x82b980c>
     12c:	06120111 	bltzall	s0,574 <sigill_handler-0x3ffa8c>
     130:	00001710 	0x1710
     134:	0b002402 	j	c009008 <end+0xbbff008>
     138:	030b3e0b 	0x30b3e0b
     13c:	03000008 	jr	t8
     140:	0e030016 	jal	80c0058 <end+0x7cb6058>
     144:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     148:	13490b39 	beq	k0,t1,2e30 <sigill_handler-0x3fd1d0>
     14c:	24040000 	li	a0,0
     150:	3e0b0b00 	0x3e0b0b00
     154:	000e030b 	0xe030b
     158:	00260500 	0x260500
     15c:	00001349 	0x1349
     160:	0b000f06 	j	c003c18 <end+0xbbf9c18>
     164:	0700000b 	bltz	t8,194 <sigill_handler-0x3ffe6c>
     168:	0b0b000f 	j	c2c003c <end+0xbeb603c>
     16c:	00000e03 	sra	at,zero,0x18
     170:	0b000f08 	j	c003c20 <end+0xbbf9c20>
     174:	0013490b 	0x13490b
     178:	01130900 	0x1130900
     17c:	050b0e03 	tltiu	t0,3587
     180:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     184:	13010b39 	beq	t8,at,2e6c <sigill_handler-0x3fd194>
     188:	0d0a0000 	jal	4280000 <end+0x3e76000>
     18c:	3a080300 	xori	t0,s0,0x300
     190:	390b3b0b 	xori	t3,t0,0x3b0b
     194:	3813490b 	xori	s3,zero,0x490b
     198:	0b00000b 	j	c00002c <end+0xbbf602c>
     19c:	0803000d 	j	c0034 <sigill_handler-0x33ffcc>
     1a0:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     1a4:	13490b39 	beq	k0,t1,2e8c <sigill_handler-0x3fd174>
     1a8:	00000538 	0x538
     1ac:	4901010c 	bc2t	5e0 <sigill_handler-0x3ffa20>
     1b0:	00130113 	0x130113
     1b4:	00210d00 	0x210d00
     1b8:	052f1349 	0x52f1349
     1bc:	2e0e0000 	sltiu	t6,s0,0
     1c0:	03193f01 	0x3193f01
     1c4:	3b0b3a0e 	xori	t3,t8,0x3a0e
     1c8:	270b390b 	addiu	t3,t8,14603
     1cc:	19018719 	0x19018719
     1d0:	06120111 	bltzall	s0,618 <sigill_handler-0x3ff9e8>
     1d4:	42961840 	c0	0x961840
     1d8:	00130119 	0x130119
     1dc:	00050f00 	sll	at,a1,0x1c
     1e0:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     1e4:	0b390b3b 	j	ce42cec <end+0xca38cec>
     1e8:	18021349 	0x18021349
     1ec:	05100000 	bltzal	t0,1f0 <sigill_handler-0x3ffe10>
     1f0:	3a080300 	xori	t0,s0,0x300
     1f4:	390b3b0b 	xori	t3,t0,0x3b0b
     1f8:	0213490b 	0x213490b
     1fc:	11000018 	beqz	t0,260 <sigill_handler-0x3ffda0>
     200:	00000018 	mult	zero,zero
     204:	03003412 	0x3003412
     208:	3b0b3a08 	xori	t3,t8,0x3a08
     20c:	490b390b 	bc2tl	$cc2,e63c <sigill_handler-0x3f19c4>
     210:	00180213 	0x180213
     214:	012e1300 	0x12e1300
     218:	0e03193f 	jal	80c64fc <end+0x7cbc4fc>
     21c:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     220:	19270b39 	0x19270b39
     224:	06120111 	bltzall	s0,66c <sigill_handler-0x3ff994>
     228:	42961840 	c0	0x961840
     22c:	00130119 	0x130119
     230:	012e1400 	0x12e1400
     234:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     238:	0b390b3b 	j	ce42cec <end+0xca38cec>
     23c:	01111927 	0x1111927
     240:	18400612 	blez	v0,1a8c <sigill_handler-0x3fe574>
     244:	01194296 	0x1194296
     248:	15000013 	bnez	t0,298 <sigill_handler-0x3ffd68>
     24c:	0111010b 	0x111010b
     250:	00000612 	0x612
     254:	03012e16 	0x3012e16
     258:	3b0b3a0e 	xori	t3,t8,0x3a0e
     25c:	270b390b 	addiu	t3,t8,14603
     260:	12011119 	beq	s0,at,46c8 <sigill_handler-0x3fb938>
     264:	96184006 	lhu	t8,16390(s0)
     268:	00001942 	srl	v1,zero,0x5
     26c:	01110100 	0x1110100
     270:	0b130e25 	j	c4c3894 <end+0xc0b9894>
     274:	0e1b0e03 	jal	86c380c <end+0x82b980c>
     278:	06120111 	bltzall	s0,6c0 <sigill_handler-0x3ff940>
     27c:	00001710 	0x1710
     280:	0b002402 	j	c009008 <end+0xbbff008>
     284:	030b3e0b 	0x30b3e0b
     288:	03000008 	jr	t8
     28c:	0b0b0024 	j	c2c0090 <end+0xbeb6090>
     290:	0e030b3e 	jal	80c2cf8 <end+0x7cb8cf8>
     294:	16040000 	bne	s0,a0,298 <sigill_handler-0x3ffd68>
     298:	3a0e0300 	xori	t6,s0,0x300
     29c:	390b3b0b 	xori	t3,t0,0x3b0b
     2a0:	0013490b 	0x13490b
     2a4:	00160500 	sll	zero,s6,0x14
     2a8:	0b3a0803 	j	ce8200c <end+0xca7800c>
     2ac:	0b390b3b 	j	ce42cec <end+0xca38cec>
     2b0:	00001349 	0x1349
     2b4:	03011306 	0x3011306
     2b8:	3a0b0b0e 	xori	t3,s0,0xb0e
     2bc:	390b3b0b 	xori	t3,t0,0x3b0b
     2c0:	0013010b 	0x13010b
     2c4:	000d0700 	sll	zero,t5,0x1c
     2c8:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     2cc:	0b390b3b 	j	ce42cec <end+0xca38cec>
     2d0:	0b381349 	j	ce04d24 <end+0xc9fad24>
     2d4:	0d080000 	jal	4200000 <end+0x3df6000>
     2d8:	3a080300 	xori	t0,s0,0x300
     2dc:	390b3b0b 	xori	t3,t0,0x3b0b
     2e0:	3813490b 	xori	s3,zero,0x490b
     2e4:	0900000b 	j	400002c <end+0x3bf602c>
     2e8:	13490101 	beq	k0,t1,6f0 <sigill_handler-0x3ff910>
     2ec:	00001301 	0x1301
     2f0:	4900210a 	bc2f	871c <sigill_handler-0x3f78e4>
     2f4:	000b2f13 	0xb2f13
     2f8:	00260b00 	0x260b00
     2fc:	00001349 	0x1349
     300:	2701150c 	addiu	at,t8,5388
     304:	00130119 	0x130119
     308:	00050d00 	sll	at,a1,0x14
     30c:	00001349 	0x1349
     310:	0b000f0e 	j	c003c38 <end+0xbbf9c38>
     314:	0013490b 	0x13490b
     318:	01130f00 	0x1130f00
     31c:	0b3a0b0b 	j	ce82c2c <end+0xca78c2c>
     320:	0b390b3b 	j	ce42cec <end+0xca38cec>
     324:	00001301 	0x1301
     328:	03011310 	0x3011310
     32c:	3a050b08 	xori	a1,s0,0xb08
     330:	390b3b0b 	xori	t3,t0,0x3b0b
     334:	0013010b 	0x13010b
     338:	00351100 	0x351100
     33c:	00001349 	0x1349
     340:	03003412 	0x3003412
     344:	3b0b3a08 	xori	t3,t8,0x3a08
     348:	490b390b 	bc2tl	$cc2,e778 <sigill_handler-0x3f1888>
     34c:	3c193f13 	lui	t9,0x3f13
     350:	13000019 	beqz	t8,3b8 <sigill_handler-0x3ffc48>
     354:	13470034 	beq	k0,a3,428 <sigill_handler-0x3ffbd8>
     358:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     35c:	18020b39 	0x18020b39
     360:	2e140000 	sltiu	s4,s0,0
     364:	03193f01 	0x3193f01
     368:	3b0b3a0e 	xori	t3,t8,0x3a0e
     36c:	270b390b 	addiu	t3,t8,14603
     370:	11134919 	beq	t0,s3,127d8 <sigill_handler-0x3ed828>
     374:	40061201 	0x40061201
     378:	19429718 	0x19429718
     37c:	00001301 	0x1301
     380:	03000515 	0x3000515
     384:	3b0b3a0e 	xori	t3,t8,0x3a0e
     388:	490b390b 	bc2tl	$cc2,e7b8 <sigill_handler-0x3f1848>
     38c:	00180213 	0x180213
     390:	012e1600 	0x12e1600
     394:	0e03193f 	jal	80c64fc <end+0x7cbc4fc>
     398:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     39c:	19270b39 	0x19270b39
     3a0:	01111349 	0x1111349
     3a4:	18400612 	blez	v0,1bf0 <sigill_handler-0x3fe410>
     3a8:	01194296 	0x1194296
     3ac:	17000013 	bnez	t8,3fc <sigill_handler-0x3ffc04>
     3b0:	08030005 	j	c0014 <sigill_handler-0x33ffec>
     3b4:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     3b8:	13490b39 	beq	k0,t1,30a0 <sigill_handler-0x3fcf60>
     3bc:	00001802 	srl	v1,zero,0x0
     3c0:	3f012e18 	0x3f012e18
     3c4:	3a0e0319 	xori	t6,s0,0x319
     3c8:	390b3b0b 	xori	t3,t0,0x3b0b
     3cc:	1119270b 	beq	t0,t9,9ffc <sigill_handler-0x3f6004>
     3d0:	40061201 	0x40061201
     3d4:	19429618 	0x19429618
     3d8:	00001301 	0x1301
     3dc:	3f002e19 	0x3f002e19
     3e0:	3a0e0319 	xori	t6,s0,0x319
     3e4:	390b3b0b 	xori	t3,t0,0x3b0b
     3e8:	8719270b 	lh	t9,9995(t8)
     3ec:	01111901 	0x1111901
     3f0:	18400612 	blez	v0,1c3c <sigill_handler-0x3fe3c4>
     3f4:	00194296 	0x194296
     3f8:	11010000 	beq	t0,at,3fc <sigill_handler-0x3ffc04>
     3fc:	130e2501 	beq	t8,t6,9804 <sigill_handler-0x3f67fc>
     400:	1b0e030b 	0x1b0e030b
     404:	1201110e 	beq	s0,at,4840 <sigill_handler-0x3fb7c0>
     408:	00171006 	srlv	v0,s7,zero
     40c:	00240200 	0x240200
     410:	0b3e0b0b 	j	cf82c2c <end+0xcb78c2c>
     414:	00000803 	sra	at,zero,0x0
     418:	0b002403 	j	c00900c <end+0xbbff00c>
     41c:	030b3e0b 	0x30b3e0b
     420:	0400000e 	bltz	zero,45c <sigill_handler-0x3ffba4>
     424:	0e030016 	jal	80c0058 <end+0x7cb6058>
     428:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     42c:	13490b39 	beq	k0,t1,3114 <sigill_handler-0x3fceec>
     430:	16050000 	bne	s0,a1,434 <sigill_handler-0x3ffbcc>
     434:	3a080300 	xori	t0,s0,0x300
     438:	390b3b0b 	xori	t3,t0,0x3b0b
     43c:	0013490b 	0x13490b
     440:	01130600 	0x1130600
     444:	0b0b0e03 	j	c2c380c <end+0xbeb980c>
     448:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     44c:	13010b39 	beq	t8,at,3134 <sigill_handler-0x3fcecc>
     450:	0d070000 	jal	41c0000 <end+0x3db6000>
     454:	3a0e0300 	xori	t6,s0,0x300
     458:	390b3b0b 	xori	t3,t0,0x3b0b
     45c:	3813490b 	xori	s3,zero,0x490b
     460:	0800000b 	j	2c <sigill_handler-0x3fffd4>
     464:	0803000d 	j	c0034 <sigill_handler-0x33ffcc>
     468:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     46c:	13490b39 	beq	k0,t1,3154 <sigill_handler-0x3fceac>
     470:	00000b38 	0xb38
     474:	49010109 	bc2t	89c <sigill_handler-0x3ff764>
     478:	00130113 	0x130113
     47c:	00210a00 	0x210a00
     480:	0b2f1349 	j	cbc4d24 <end+0xc7bad24>
     484:	150b0000 	bne	t0,t3,488 <sigill_handler-0x3ffb78>
     488:	01192701 	0x1192701
     48c:	0c000013 	jal	4c <sigill_handler-0x3fffb4>
     490:	13490005 	beq	k0,t1,4a8 <sigill_handler-0x3ffb58>
     494:	0f0d0000 	jal	c340000 <end+0xbf36000>
     498:	490b0b00 	bc2tl	$cc2,309c <sigill_handler-0x3fcf64>
     49c:	0e000013 	jal	800004c <end+0x7bf604c>
     4a0:	0b0b0113 	j	c2c044c <end+0xbeb644c>
     4a4:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     4a8:	13010b39 	beq	t8,at,3190 <sigill_handler-0x3fce70>
     4ac:	130f0000 	beq	t8,t7,4b0 <sigill_handler-0x3ffb50>
     4b0:	0b080301 	j	c200c04 <end+0xbdf6c04>
     4b4:	3b0b3a05 	xori	t3,t8,0x3a05
     4b8:	010b390b 	0x10b390b
     4bc:	10000013 	b	50c <sigill_handler-0x3ffaf4>
     4c0:	13490026 	beq	k0,t1,55c <sigill_handler-0x3ffaa4>
     4c4:	35110000 	ori	s1,t0,0x0
     4c8:	00134900 	sll	t1,s3,0x4
     4cc:	000f1200 	sll	v0,t7,0x8
     4d0:	00000b0b 	0xb0b
     4d4:	3e010413 	0x3e010413
     4d8:	490b0b0b 	bc2tl	$cc2,3108 <sigill_handler-0x3fcef8>
     4dc:	3b0b3a13 	xori	t3,t8,0x3a13
     4e0:	010b390b 	0x10b390b
     4e4:	14000013 	bnez	zero,534 <sigill_handler-0x3ffacc>
     4e8:	0e030028 	jal	80c00a0 <end+0x7cb60a0>
     4ec:	00000b1c 	0xb1c
     4f0:	03003415 	0x3003415
     4f4:	3b0b3a08 	xori	t3,t8,0x3a08
     4f8:	490b390b 	bc2tl	$cc2,e928 <sigill_handler-0x3f16d8>
     4fc:	3c193f13 	lui	t9,0x3f13
     500:	16000019 	bnez	s0,568 <sigill_handler-0x3ffa98>
     504:	193f012e 	0x193f012e
     508:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     50c:	0b390b3b 	j	ce42cec <end+0xca38cec>
     510:	13491927 	beq	k0,t1,69b0 <sigill_handler-0x3f9650>
     514:	06120111 	bltzall	s0,95c <sigill_handler-0x3ff6a4>
     518:	42961840 	c0	0x961840
     51c:	00130119 	0x130119
     520:	00341700 	0x341700
     524:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     528:	0b390b3b 	j	ce42cec <end+0xca38cec>
     52c:	18021349 	0x18021349
     530:	34180000 	li	t8,0x0
     534:	3a080300 	xori	t0,s0,0x300
     538:	390b3b0b 	xori	t3,t0,0x3b0b
     53c:	0013490b 	0x13490b
     540:	010b1900 	0x10b1900
     544:	06120111 	bltzall	s0,98c <sigill_handler-0x3ff674>
     548:	00001301 	0x1301
     54c:	0300341a 	0x300341a
     550:	3b0b3a08 	xori	t3,t8,0x3a08
     554:	490b390b 	bc2tl	$cc2,e984 <sigill_handler-0x3f167c>
     558:	00180213 	0x180213
     55c:	001d1b00 	sll	v1,sp,0xc
     560:	01111331 	tgeu	t0,s1,0x4c
     564:	0b580612 	j	d601848 <end+0xd1f7848>
     568:	0b570b59 	j	d5c2d64 <end+0xd1b8d64>
     56c:	2e1c0000 	sltiu	gp,s0,0
     570:	03193f00 	0x3193f00
     574:	3b0b3a0e 	xori	t3,t8,0x3a0e
     578:	270b390b 	addiu	t3,t8,14603
     57c:	11134919 	beq	t0,s3,129e4 <sigill_handler-0x3ed61c>
     580:	40061201 	0x40061201
     584:	19429618 	0x19429618
     588:	2e1d0000 	sltiu	sp,s0,0
     58c:	3a0e0301 	xori	t6,s0,0x301
     590:	390b3b0b 	xori	t3,t0,0x3b0b
     594:	8719270b 	lh	t9,9995(t8)
     598:	01111901 	0x1111901
     59c:	18400612 	blez	v0,1de8 <sigill_handler-0x3fe218>
     5a0:	01194296 	0x1194296
     5a4:	1e000013 	bgtz	s0,5f4 <sigill_handler-0x3ffa0c>
     5a8:	08030005 	j	c0014 <sigill_handler-0x33ffec>
     5ac:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     5b0:	13490b39 	beq	k0,t1,3298 <sigill_handler-0x3fcd68>
     5b4:	00001802 	srl	v1,zero,0x0
     5b8:	0300051f 	0x300051f
     5bc:	3b0b3a0e 	xori	t3,t8,0x3a0e
     5c0:	490b390b 	bc2tl	$cc2,e9f0 <sigill_handler-0x3f1610>
     5c4:	00180213 	0x180213
     5c8:	010b2000 	0x10b2000
     5cc:	13011755 	beq	t8,at,6324 <sigill_handler-0x3f9cdc>
     5d0:	2e210000 	sltiu	at,s1,0
     5d4:	03193f01 	0x3193f01
     5d8:	3b0b3a0e 	xori	t3,t8,0x3a0e
     5dc:	490b390b 	bc2tl	$cc2,ea0c <sigill_handler-0x3f15f4>
     5e0:	00193c13 	0x193c13
     5e4:	00182200 	sll	a0,t8,0x8
     5e8:	0b230000 	j	c8c0000 <end+0xc4b6000>
     5ec:	12011101 	beq	s0,at,49f4 <sigill_handler-0x3fb60c>
     5f0:	24000006 	li	zero,6
     5f4:	1755010b 	bne	k0,s5,a24 <sigill_handler-0x3ff5dc>
     5f8:	2e250000 	sltiu	a1,s1,0
     5fc:	3a0e0301 	xori	t6,s0,0x301
     600:	390b3b0b 	xori	t3,t0,0x3b0b
     604:	1119270b 	beq	t0,t9,a234 <sigill_handler-0x3f5dcc>
     608:	40061201 	0x40061201
     60c:	19429618 	0x19429618
     610:	00001301 	0x1301
     614:	03003426 	0x3003426
     618:	3b0b3a0e 	xori	t3,t8,0x3a0e
     61c:	490b390b 	bc2tl	$cc2,ea4c <sigill_handler-0x3f15b4>
     620:	27000013 	addiu	zero,t8,19
     624:	0e03002e 	jal	80c00b8 <end+0x7cb60b8>
     628:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     62c:	19270b39 	0x19270b39
     630:	0b201349 	j	c804d24 <end+0xc3fad24>
     634:	01000000 	0x1000000
     638:	0e250111 	jal	8940444 <end+0x8536444>
     63c:	0e030b13 	jal	80c2c4c <end+0x7cb8c4c>
     640:	01110e1b 	0x1110e1b
     644:	17100612 	bne	t8,s0,1e90 <sigill_handler-0x3fe170>
     648:	24020000 	li	v0,0
     64c:	3e0b0b00 	0x3e0b0b00
     650:	0008030b 	0x8030b
     654:	00240300 	0x240300
     658:	0b3e0b0b 	j	cf82c2c <end+0xcb78c2c>
     65c:	00000e03 	sra	at,zero,0x18
     660:	03001604 	0x3001604
     664:	3b0b3a0e 	xori	t3,t8,0x3a0e
     668:	490b390b 	bc2tl	$cc2,ea98 <sigill_handler-0x3f1568>
     66c:	05000013 	bltz	t0,6bc <sigill_handler-0x3ff944>
     670:	0e030113 	jal	80c044c <end+0x7cb644c>
     674:	0b3a0b0b 	j	ce82c2c <end+0xca78c2c>
     678:	0b390b3b 	j	ce42cec <end+0xca38cec>
     67c:	00001301 	0x1301
     680:	03000d06 	0x3000d06
     684:	3b0b3a0e 	xori	t3,t8,0x3a0e
     688:	490b390b 	bc2tl	$cc2,eab8 <sigill_handler-0x3f1548>
     68c:	000b3813 	0xb3813
     690:	000d0700 	sll	zero,t5,0x1c
     694:	0b3a0803 	j	ce8200c <end+0xca7800c>
     698:	0b390b3b 	j	ce42cec <end+0xca38cec>
     69c:	0b381349 	j	ce04d24 <end+0xc9fad24>
     6a0:	01080000 	0x1080000
     6a4:	01134901 	0x1134901
     6a8:	09000013 	j	400004c <end+0x3bf604c>
     6ac:	13490021 	beq	k0,t1,734 <sigill_handler-0x3ff8cc>
     6b0:	00000b2f 	0xb2f
     6b4:	4900260a 	bc2f	9ee0 <sigill_handler-0x3f6120>
     6b8:	0b000013 	j	c00004c <end+0xbbf604c>
     6bc:	19270115 	0x19270115
     6c0:	00001301 	0x1301
     6c4:	4900050c 	bc2f	1af8 <sigill_handler-0x3fe508>
     6c8:	0d000013 	jal	400004c <end+0x3bf604c>
     6cc:	0b0b000f 	j	c2c003c <end+0xbeb603c>
     6d0:	00001349 	0x1349
     6d4:	0b000f0e 	j	c003c38 <end+0xbbf9c38>
     6d8:	0f00000b 	jal	c00002c <end+0xbbf602c>
     6dc:	00000026 	xor	zero,zero,zero
     6e0:	3e010410 	0x3e010410
     6e4:	490b0b0b 	bc2tl	$cc2,3314 <sigill_handler-0x3fccec>
     6e8:	3b0b3a13 	xori	t3,t8,0x3a13
     6ec:	010b390b 	0x10b390b
     6f0:	11000013 	beqz	t0,740 <sigill_handler-0x3ff8c0>
     6f4:	0e030028 	jal	80c00a0 <end+0x7cb60a0>
     6f8:	00000b1c 	0xb1c
     6fc:	3f012e12 	0x3f012e12
     700:	3a0e0319 	xori	t6,s0,0x319
     704:	390b3b0b 	xori	t3,t0,0x3b0b
     708:	4919270b 	bc2t	$cc6,a338 <sigill_handler-0x3f5cc8>
     70c:	12011113 	beq	s0,at,4b5c <sigill_handler-0x3fb4a4>
     710:	96184006 	lhu	t8,16390(s0)
     714:	13011942 	beq	t8,at,6c20 <sigill_handler-0x3f93e0>
     718:	05130000 	bgezall	t0,71c <sigill_handler-0x3ff8e4>
     71c:	3a0e0300 	xori	t6,s0,0x300
     720:	390b3b0b 	xori	t3,t0,0x3b0b
     724:	0213490b 	0x213490b
     728:	14000018 	bnez	zero,78c <sigill_handler-0x3ff874>
     72c:	08030005 	j	c0014 <sigill_handler-0x33ffec>
     730:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     734:	13490b39 	beq	k0,t1,341c <sigill_handler-0x3fcbe4>
     738:	00001802 	srl	v1,zero,0x0
     73c:	3f002e15 	0x3f002e15
     740:	3a0e0319 	xori	t6,s0,0x319
     744:	390b3b0b 	xori	t3,t0,0x3b0b
     748:	4919270b 	bc2t	$cc6,a378 <sigill_handler-0x3f5c88>
     74c:	12011113 	beq	s0,at,4b9c <sigill_handler-0x3fb464>
     750:	96184006 	lhu	t8,16390(s0)
     754:	00001942 	srl	v1,zero,0x5
     758:	3f012e16 	0x3f012e16
     75c:	3a0e0319 	xori	t6,s0,0x319
     760:	390b3b0b 	xori	t3,t0,0x3b0b
     764:	8719270b 	lh	t9,9995(t8)
     768:	01111901 	0x1111901
     76c:	18400612 	blez	v0,1fb8 <sigill_handler-0x3fe048>
     770:	01194296 	0x1194296
     774:	17000013 	bnez	t8,7c4 <sigill_handler-0x3ff83c>
     778:	08030034 	j	c00d0 <sigill_handler-0x33ff30>
     77c:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     780:	13490b39 	beq	k0,t1,3468 <sigill_handler-0x3fcb98>
     784:	00001802 	srl	v1,zero,0x0
     788:	3f002e18 	0x3f002e18
     78c:	3a0e0319 	xori	t6,s0,0x319
     790:	390b3b0b 	xori	t3,t0,0x3b0b
     794:	1119270b 	beq	t0,t9,a3c4 <sigill_handler-0x3f5c3c>
     798:	40061201 	0x40061201
     79c:	19429618 	0x19429618
     7a0:	2e190000 	sltiu	t9,s0,0
     7a4:	03193f01 	0x3193f01
     7a8:	3b0b3a0e 	xori	t3,t8,0x3a0e
     7ac:	270b390b 	addiu	t3,t8,14603
     7b0:	12011119 	beq	s0,at,4c18 <sigill_handler-0x3fb3e8>
     7b4:	96184006 	lhu	t8,16390(s0)
     7b8:	00001942 	srl	v1,zero,0x5
     7bc:	01110100 	0x1110100
     7c0:	0b130e25 	j	c4c3894 <end+0xc0b9894>
     7c4:	0e1b0e03 	jal	86c380c <end+0x82b980c>
     7c8:	06120111 	bltzall	s0,c10 <sigill_handler-0x3ff3f0>
     7cc:	00001710 	0x1710
     7d0:	0b002402 	j	c009008 <end+0xbbff008>
     7d4:	030b3e0b 	0x30b3e0b
     7d8:	03000008 	jr	t8
     7dc:	0b0b0024 	j	c2c0090 <end+0xbeb6090>
     7e0:	0e030b3e 	jal	80c2cf8 <end+0x7cb8cf8>
     7e4:	16040000 	bne	s0,a0,7e8 <sigill_handler-0x3ff818>
     7e8:	3a0e0300 	xori	t6,s0,0x300
     7ec:	390b3b0b 	xori	t3,t0,0x3b0b
     7f0:	0013490b 	0x13490b
     7f4:	00160500 	sll	zero,s6,0x14
     7f8:	0b3a0803 	j	ce8200c <end+0xca7800c>
     7fc:	0b390b3b 	j	ce42cec <end+0xca38cec>
     800:	00001349 	0x1349
     804:	03011306 	0x3011306
     808:	3a0b0b0e 	xori	t3,s0,0xb0e
     80c:	390b3b0b 	xori	t3,t0,0x3b0b
     810:	0013010b 	0x13010b
     814:	000d0700 	sll	zero,t5,0x1c
     818:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     81c:	0b390b3b 	j	ce42cec <end+0xca38cec>
     820:	0b381349 	j	ce04d24 <end+0xc9fad24>
     824:	0d080000 	jal	4200000 <end+0x3df6000>
     828:	3a080300 	xori	t0,s0,0x300
     82c:	390b3b0b 	xori	t3,t0,0x3b0b
     830:	3813490b 	xori	s3,zero,0x490b
     834:	0900000b 	j	400002c <end+0x3bf602c>
     838:	13490101 	beq	k0,t1,c40 <sigill_handler-0x3ff3c0>
     83c:	00001301 	0x1301
     840:	4900210a 	bc2f	8c6c <sigill_handler-0x3f7394>
     844:	000b2f13 	0xb2f13
     848:	01150b00 	0x1150b00
     84c:	13011927 	beq	t8,at,6cec <sigill_handler-0x3f9314>
     850:	050c0000 	teqi	t0,0
     854:	00134900 	sll	t1,s3,0x4
     858:	000f0d00 	sll	at,t7,0x14
     85c:	13490b0b 	beq	k0,t1,348c <sigill_handler-0x3fcb74>
     860:	130e0000 	beq	t8,t6,864 <sigill_handler-0x3ff79c>
     864:	3a0b0b01 	xori	t3,s0,0xb01
     868:	390b3b0b 	xori	t3,t0,0x3b0b
     86c:	0013010b 	0x13010b
     870:	01130f00 	0x1130f00
     874:	050b0803 	tltiu	t0,2051
     878:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     87c:	13010b39 	beq	t8,at,3564 <sigill_handler-0x3fca9c>
     880:	26100000 	addiu	s0,s0,0
     884:	00134900 	sll	t1,s3,0x4
     888:	00351100 	0x351100
     88c:	00001349 	0x1349
     890:	0b000f12 	j	c003c48 <end+0xbbf9c48>
     894:	1300000b 	beqz	t8,8c4 <sigill_handler-0x3ff73c>
     898:	00000026 	xor	zero,zero,zero
     89c:	03003414 	0x3003414
     8a0:	3b0b3a08 	xori	t3,t8,0x3a08
     8a4:	490b390b 	bc2tl	$cc2,ecd4 <sigill_handler-0x3f132c>
     8a8:	3c193f13 	lui	t9,0x3f13
     8ac:	15000019 	bnez	t0,914 <sigill_handler-0x3ff6ec>
     8b0:	193f012e 	0x193f012e
     8b4:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     8b8:	0b390b3b 	j	ce42cec <end+0xca38cec>
     8bc:	13491927 	beq	k0,t1,6d5c <sigill_handler-0x3f92a4>
     8c0:	06120111 	bltzall	s0,d08 <sigill_handler-0x3ff2f8>
     8c4:	42961840 	c0	0x961840
     8c8:	00130119 	0x130119
     8cc:	00051600 	sll	v0,a1,0x18
     8d0:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     8d4:	0b390b3b 	j	ce42cec <end+0xca38cec>
     8d8:	18021349 	0x18021349
     8dc:	34170000 	li	s7,0x0
     8e0:	3a080300 	xori	t0,s0,0x300
     8e4:	390b3b0b 	xori	t3,t0,0x3b0b
     8e8:	0213490b 	0x213490b
     8ec:	18000018 	blez	zero,950 <sigill_handler-0x3ff6b0>
     8f0:	193f012e 	0x193f012e
     8f4:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     8f8:	0b390b3b 	j	ce42cec <end+0xca38cec>
     8fc:	01111927 	0x1111927
     900:	18400612 	blez	v0,214c <sigill_handler-0x3fdeb4>
     904:	00194296 	0x194296
     908:	00051900 	sll	v1,a1,0x4
     90c:	0b3a0803 	j	ce8200c <end+0xca7800c>
     910:	0b390b3b 	j	ce42cec <end+0xca38cec>
     914:	18021349 	0x18021349
     918:	01000000 	0x1000000
     91c:	0e250111 	jal	8940444 <end+0x8536444>
     920:	0e030b13 	jal	80c2c4c <end+0x7cb8c4c>
     924:	01110e1b 	0x1110e1b
     928:	17100612 	bne	t8,s0,2174 <sigill_handler-0x3fde8c>
     92c:	24020000 	li	v0,0
     930:	3e0b0b00 	0x3e0b0b00
     934:	0008030b 	0x8030b
     938:	00240300 	0x240300
     93c:	0b3e0b0b 	j	cf82c2c <end+0xcb78c2c>
     940:	00000e03 	sra	at,zero,0x18
     944:	03001604 	0x3001604
     948:	3b0b3a0e 	xori	t3,t8,0x3a0e
     94c:	490b390b 	bc2tl	$cc2,ed7c <sigill_handler-0x3f1284>
     950:	05000013 	bltz	t0,9a0 <sigill_handler-0x3ff660>
     954:	08030016 	j	c0058 <sigill_handler-0x33ffa8>
     958:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     95c:	13490b39 	beq	k0,t1,3644 <sigill_handler-0x3fc9bc>
     960:	13060000 	beq	t8,a2,964 <sigill_handler-0x3ff69c>
     964:	0b0e0301 	j	c380c04 <end+0xbf76c04>
     968:	3b0b3a0b 	xori	t3,t8,0x3a0b
     96c:	010b390b 	0x10b390b
     970:	07000013 	bltz	t8,9c0 <sigill_handler-0x3ff640>
     974:	0e03000d 	jal	80c0034 <end+0x7cb6034>
     978:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     97c:	13490b39 	beq	k0,t1,3664 <sigill_handler-0x3fc99c>
     980:	00000b38 	0xb38
     984:	03000d08 	0x3000d08
     988:	3b0b3a08 	xori	t3,t8,0x3a08
     98c:	490b390b 	bc2tl	$cc2,edbc <sigill_handler-0x3f1244>
     990:	000b3813 	0xb3813
     994:	01010900 	0x1010900
     998:	13011349 	beq	t8,at,56c0 <sigill_handler-0x3fa940>
     99c:	210a0000 	addi	t2,t0,0
     9a0:	2f134900 	sltiu	s3,t8,18688
     9a4:	0b00000b 	j	c00002c <end+0xbbf602c>
     9a8:	19270115 	0x19270115
     9ac:	00001301 	0x1301
     9b0:	4900050c 	bc2f	1de4 <sigill_handler-0x3fe21c>
     9b4:	0d000013 	jal	400004c <end+0x3bf604c>
     9b8:	0b0b000f 	j	c2c003c <end+0xbeb603c>
     9bc:	00001349 	0x1349
     9c0:	0b01130e 	j	c044c38 <end+0xbc3ac38>
     9c4:	3b0b3a0b 	xori	t3,t8,0x3a0b
     9c8:	010b390b 	0x10b390b
     9cc:	0f000013 	jal	c00004c <end+0xbbf604c>
     9d0:	08030113 	j	c044c <sigill_handler-0x33fbb4>
     9d4:	0b3a050b 	j	ce8142c <end+0xca7742c>
     9d8:	0b390b3b 	j	ce42cec <end+0xca38cec>
     9dc:	00001301 	0x1301
     9e0:	49002610 	bc2f	a224 <sigill_handler-0x3f5ddc>
     9e4:	11000013 	beqz	t0,a34 <sigill_handler-0x3ff5cc>
     9e8:	13490035 	beq	k0,t1,ac0 <sigill_handler-0x3ff540>
     9ec:	13120000 	beq	t8,s2,9f0 <sigill_handler-0x3ff610>
     9f0:	0b080301 	j	c200c04 <end+0xbdf6c04>
     9f4:	3b0b3a0b 	xori	t3,t8,0x3a0b
     9f8:	010b390b 	0x10b390b
     9fc:	13000013 	beqz	t8,a4c <sigill_handler-0x3ff5b4>
     a00:	19270115 	0x19270115
     a04:	13011349 	beq	t8,at,572c <sigill_handler-0x3fa8d4>
     a08:	0f140000 	jal	c500000 <end+0xc0f6000>
     a0c:	000b0b00 	sll	at,t3,0xc
     a10:	00261500 	0x261500
     a14:	34160000 	li	s6,0x0
     a18:	3a0e0300 	xori	t6,s0,0x300
     a1c:	390b3b0b 	xori	t3,t0,0x3b0b
     a20:	3f13490b 	0x3f13490b
     a24:	00193c19 	0x193c19
     a28:	00341700 	0x341700
     a2c:	0b3a0803 	j	ce8200c <end+0xca7800c>
     a30:	0b390b3b 	j	ce42cec <end+0xca38cec>
     a34:	193f1349 	0x193f1349
     a38:	0000193c 	0x193c
     a3c:	03003418 	0x3003418
     a40:	3b0b3a0e 	xori	t3,t8,0x3a0e
     a44:	490b390b 	bc2tl	$cc2,ee74 <sigill_handler-0x3f118c>
     a48:	00180213 	0x180213
     a4c:	012e1900 	0x12e1900
     a50:	0e03193f 	jal	80c64fc <end+0x7cbc4fc>
     a54:	053b0b3a 	0x53b0b3a
     a58:	19270b39 	0x19270b39
     a5c:	01111349 	0x1111349
     a60:	18400612 	blez	v0,22ac <sigill_handler-0x3fdd54>
     a64:	01194296 	0x1194296
     a68:	1a000013 	blez	s0,ab8 <sigill_handler-0x3ff548>
     a6c:	0e030005 	jal	80c0014 <end+0x7cb6014>
     a70:	053b0b3a 	0x53b0b3a
     a74:	13490b39 	beq	k0,t1,375c <sigill_handler-0x3fc8a4>
     a78:	00001802 	srl	v1,zero,0x0
     a7c:	0300341b 	0x300341b
     a80:	3b0b3a08 	xori	t3,t8,0x3a08
     a84:	490b3905 	bc2tl	$cc2,ee9c <sigill_handler-0x3f1164>
     a88:	00180213 	0x180213
     a8c:	012e1c00 	0x12e1c00
     a90:	0e03193f 	jal	80c64fc <end+0x7cbc4fc>
     a94:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     a98:	19270b39 	0x19270b39
     a9c:	01111349 	0x1111349
     aa0:	18400612 	blez	v0,22ec <sigill_handler-0x3fdd14>
     aa4:	01194296 	0x1194296
     aa8:	1d000013 	bgtz	t0,af8 <sigill_handler-0x3ff508>
     aac:	0e030005 	jal	80c0014 <end+0x7cb6014>
     ab0:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     ab4:	13490b39 	beq	k0,t1,379c <sigill_handler-0x3fc864>
     ab8:	00001802 	srl	v1,zero,0x0
     abc:	0300051e 	0x300051e
     ac0:	3b0b3a08 	xori	t3,t8,0x3a08
     ac4:	490b390b 	bc2tl	$cc2,eef4 <sigill_handler-0x3f110c>
     ac8:	00180213 	0x180213
     acc:	00341f00 	0x341f00
     ad0:	0b3a0803 	j	ce8200c <end+0xca7800c>
     ad4:	0b390b3b 	j	ce42cec <end+0xca38cec>
     ad8:	18021349 	0x18021349
     adc:	0b200000 	j	c800000 <end+0xc3f6000>
     ae0:	12011101 	beq	s0,at,4ee8 <sigill_handler-0x3fb118>
     ae4:	00130106 	0x130106
     ae8:	010b2100 	0x10b2100
     aec:	06120111 	bltzall	s0,f34 <sigill_handler-0x3ff0cc>
     af0:	2e220000 	sltiu	v0,s1,0
     af4:	03193f01 	0x3193f01
     af8:	3b0b3a08 	xori	t3,t8,0x3a08
     afc:	270b390b 	addiu	t3,t8,14603
     b00:	11134919 	beq	t0,s3,12f68 <sigill_handler-0x3ed098>
     b04:	40061201 	0x40061201
     b08:	19429618 	0x19429618
     b0c:	00001301 	0x1301
     b10:	03000a23 	0x3000a23
     b14:	3b0b3a08 	xori	t3,t8,0x3a08
     b18:	110b390b 	beq	t0,t3,ef48 <sigill_handler-0x3f10b8>
     b1c:	24000001 	li	zero,1
     b20:	193f012e 	0x193f012e
     b24:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     b28:	0b390b3b 	j	ce42cec <end+0xca38cec>
     b2c:	01111927 	0x1111927
     b30:	18400612 	blez	v0,237c <sigill_handler-0x3fdc84>
     b34:	01194296 	0x1194296
     b38:	25000013 	addiu	zero,t0,19
     b3c:	193f012e 	0x193f012e
     b40:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     b44:	0b390b3b 	j	ce42cec <end+0xca38cec>
     b48:	13491927 	beq	k0,t1,6fe8 <sigill_handler-0x3f9018>
     b4c:	06120111 	bltzall	s0,f94 <sigill_handler-0x3ff06c>
     b50:	42971840 	c0	0x971840
     b54:	00130119 	0x130119
     b58:	11010000 	beq	t0,at,b5c <sigill_handler-0x3ff4a4>
     b5c:	130e2501 	beq	t8,t6,9f64 <sigill_handler-0x3f609c>
     b60:	1b0e030b 	0x1b0e030b
     b64:	1201110e 	beq	s0,at,4fa0 <sigill_handler-0x3fb060>
     b68:	00171006 	srlv	v0,s7,zero
     b6c:	00240200 	0x240200
     b70:	0b3e0b0b 	j	cf82c2c <end+0xcb78c2c>
     b74:	00000803 	sra	at,zero,0x0
     b78:	0b002403 	j	c00900c <end+0xbbff00c>
     b7c:	030b3e0b 	0x30b3e0b
     b80:	0400000e 	bltz	zero,bbc <sigill_handler-0x3ff444>
     b84:	0e030016 	jal	80c0058 <end+0x7cb6058>
     b88:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     b8c:	13490b39 	beq	k0,t1,3874 <sigill_handler-0x3fc78c>
     b90:	16050000 	bne	s0,a1,b94 <sigill_handler-0x3ff46c>
     b94:	3a080300 	xori	t0,s0,0x300
     b98:	390b3b0b 	xori	t3,t0,0x3b0b
     b9c:	0013490b 	0x13490b
     ba0:	000f0600 	sll	zero,t7,0x18
     ba4:	00000b0b 	0xb0b
     ba8:	03011307 	0x3011307
     bac:	3a0b0b0e 	xori	t3,s0,0xb0e
     bb0:	390b3b0b 	xori	t3,t0,0x3b0b
     bb4:	0013010b 	0x13010b
     bb8:	000d0800 	sll	at,t5,0x0
     bbc:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     bc0:	0b390b3b 	j	ce42cec <end+0xca38cec>
     bc4:	0b381349 	j	ce04d24 <end+0xc9fad24>
     bc8:	0f090000 	jal	c240000 <end+0xbe36000>
     bcc:	490b0b00 	bc2tl	$cc2,37d0 <sigill_handler-0x3fc830>
     bd0:	0a000013 	j	800004c <end+0x7bf604c>
     bd4:	0b0b0113 	j	c2c044c <end+0xbeb644c>
     bd8:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     bdc:	13010b39 	beq	t8,at,38c4 <sigill_handler-0x3fc73c>
     be0:	2e0b0000 	sltiu	t3,s0,0
     be4:	03193f01 	0x3193f01
     be8:	3b0b3a0e 	xori	t3,t8,0x3a0e
     bec:	270b390b 	addiu	t3,t8,14603
     bf0:	11134919 	beq	t0,s3,13058 <sigill_handler-0x3ecfa8>
     bf4:	40061201 	0x40061201
     bf8:	19429718 	0x19429718
     bfc:	050c0000 	teqi	t0,0
     c00:	3a080300 	xori	t0,s0,0x300
     c04:	390b3b0b 	xori	t3,t0,0x3b0b
     c08:	0213490b 	0x213490b
     c0c:	0d000018 	jal	4000060 <end+0x3bf6060>
     c10:	08030034 	j	c00d0 <sigill_handler-0x33ff30>
     c14:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     c18:	13490b39 	beq	k0,t1,3900 <sigill_handler-0x3fc700>
     c1c:	00001802 	srl	v1,zero,0x0
     c20:	01110100 	0x1110100
     c24:	0b130e25 	j	c4c3894 <end+0xc0b9894>
     c28:	0e1b0e03 	jal	86c380c <end+0x82b980c>
     c2c:	06120111 	bltzall	s0,1074 <sigill_handler-0x3fef8c>
     c30:	00001710 	0x1710
     c34:	0b002402 	j	c009008 <end+0xbbff008>
     c38:	030b3e0b 	0x30b3e0b
     c3c:	0300000e 	0x300000e
     c40:	0b0b0024 	j	c2c0090 <end+0xbeb6090>
     c44:	08030b3e 	j	c2cf8 <sigill_handler-0x33d308>
     c48:	16040000 	bne	s0,a0,c4c <sigill_handler-0x3ff3b4>
     c4c:	3a0e0300 	xori	t6,s0,0x300
     c50:	390b3b0b 	xori	t3,t0,0x3b0b
     c54:	0013490b 	0x13490b
     c58:	01130500 	0x1130500
     c5c:	050b0e03 	tltiu	t0,3587
     c60:	3a0b0188 	xori	t3,s0,0x188
     c64:	390b3b0b 	xori	t3,t0,0x3b0b
     c68:	0013010b 	0x13010b
     c6c:	000d0600 	sll	zero,t5,0x18
     c70:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     c74:	0b390b3b 	j	ce42cec <end+0xca38cec>
     c78:	0b381349 	j	ce04d24 <end+0xc9fad24>
     c7c:	01070000 	0x1070000
     c80:	01134901 	0x1134901
     c84:	08000013 	j	4c <sigill_handler-0x3fffb4>
     c88:	13490021 	beq	k0,t1,d10 <sigill_handler-0x3ff2f0>
     c8c:	00000b2f 	0xb2f
     c90:	49002609 	bc2f	a4b8 <sigill_handler-0x3f5b48>
     c94:	0a000013 	j	800004c <end+0x7bf604c>
     c98:	0b0b000f 	j	c2c003c <end+0xbeb603c>
     c9c:	00001349 	0x1349
     ca0:	0300160b 	0x300160b
     ca4:	3b0b3a08 	xori	t3,t8,0x3a08
     ca8:	490b390b 	bc2tl	$cc2,f0d8 <sigill_handler-0x3f0f28>
     cac:	0c000013 	jal	4c <sigill_handler-0x3fffb4>
     cb0:	08030113 	j	c044c <sigill_handler-0x33fbb4>
     cb4:	0b3a0b0b 	j	ce82c2c <end+0xca78c2c>
     cb8:	0b390b3b 	j	ce42cec <end+0xca38cec>
     cbc:	00001301 	0x1301
     cc0:	2701150d 	addiu	at,t8,5389
     cc4:	01134919 	0x1134919
     cc8:	0e000013 	jal	800004c <end+0x7bf604c>
     ccc:	13490005 	beq	k0,t1,ce4 <sigill_handler-0x3ff31c>
     cd0:	0f0f0000 	jal	c3c0000 <end+0xbfb6000>
     cd4:	000b0b00 	sll	at,t3,0xc
     cd8:	00261000 	0x261000
     cdc:	13110000 	beq	t8,s1,ce0 <sigill_handler-0x3ff320>
     ce0:	0b0e0301 	j	c380c04 <end+0xbf76c04>
     ce4:	3b0b3a0b 	xori	t3,t8,0x3a0b
     ce8:	010b390b 	0x10b390b
     cec:	12000013 	beqz	s0,d3c <sigill_handler-0x3ff2c4>
     cf0:	0e03000d 	jal	80c0034 <end+0x7cb6034>
     cf4:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     cf8:	13490b39 	beq	k0,t1,39e0 <sigill_handler-0x3fc620>
     cfc:	380b0188 	xori	t3,zero,0x188
     d00:	1300000b 	beqz	t8,d30 <sigill_handler-0x3ff2d0>
     d04:	0e030034 	jal	80c00d0 <end+0x7cb60d0>
     d08:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     d0c:	13490b39 	beq	k0,t1,39f4 <sigill_handler-0x3fc60c>
     d10:	193c193f 	0x193c193f
     d14:	34140000 	li	s4,0x0
     d18:	3a134700 	xori	s3,s0,0x4700
     d1c:	390b3b0b 	xori	t3,t0,0x3b0b
     d20:	0018020b 	0x18020b
     d24:	002e1500 	0x2e1500
     d28:	0e03193f 	jal	80c64fc <end+0x7cbc4fc>
     d2c:	053b0b3a 	0x53b0b3a
     d30:	19270b39 	0x19270b39
     d34:	01111349 	0x1111349
     d38:	18400612 	blez	v0,2584 <sigill_handler-0x3fda7c>
     d3c:	00194296 	0x194296
     d40:	012e1600 	0x12e1600
     d44:	0e03193f 	jal	80c64fc <end+0x7cbc4fc>
     d48:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     d4c:	19270b39 	0x19270b39
     d50:	01111349 	0x1111349
     d54:	18400612 	blez	v0,25a0 <sigill_handler-0x3fda60>
     d58:	01194296 	0x1194296
     d5c:	17000013 	bnez	t8,dac <sigill_handler-0x3ff254>
     d60:	0e030005 	jal	80c0014 <end+0x7cb6014>
     d64:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     d68:	13490b39 	beq	k0,t1,3a50 <sigill_handler-0x3fc5b0>
     d6c:	00001802 	srl	v1,zero,0x0
     d70:	03003418 	0x3003418
     d74:	3b0b3a08 	xori	t3,t8,0x3a08
     d78:	490b390b 	bc2tl	$cc2,f1a8 <sigill_handler-0x3f0e58>
     d7c:	00180213 	0x180213
     d80:	00341900 	0x341900
     d84:	0b3a0e03 	j	ce8380c <end+0xca7980c>
     d88:	0b390b3b 	j	ce42cec <end+0xca38cec>
     d8c:	18021349 	0x18021349
     d90:	0b1a0000 	j	c680000 <end+0xc276000>
     d94:	12011101 	beq	s0,at,519c <sigill_handler-0x3fae64>
     d98:	1b000006 	blez	t8,db4 <sigill_handler-0x3ff24c>
     d9c:	0e03012e 	jal	80c04b8 <end+0x7cb64b8>
     da0:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     da4:	19270b39 	0x19270b39
     da8:	01111349 	0x1111349
     dac:	18400612 	blez	v0,25f8 <sigill_handler-0x3fda08>
     db0:	01194296 	0x1194296
     db4:	1c000013 	bgtz	zero,e04 <sigill_handler-0x3ff1fc>
     db8:	08030005 	j	c0014 <sigill_handler-0x33ffec>
     dbc:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     dc0:	13490b39 	beq	k0,t1,3aa8 <sigill_handler-0x3fc558>
     dc4:	00001802 	srl	v1,zero,0x0
     dc8:	3f012e1d 	0x3f012e1d
     dcc:	3a0e0319 	xori	t6,s0,0x319
     dd0:	390b3b0b 	xori	t3,t0,0x3b0b
     dd4:	4919270b 	bc2t	$cc6,aa04 <sigill_handler-0x3f55fc>
     dd8:	12011113 	beq	s0,at,5228 <sigill_handler-0x3fadd8>
     ddc:	96184006 	lhu	t8,16390(s0)
     de0:	00001942 	srl	v1,zero,0x5
     de4:	0300341e 	0x300341e
     de8:	3b0b3a08 	xori	t3,t8,0x3a08
     dec:	490b390b 	bc2tl	$cc2,f21c <sigill_handler-0x3f0de4>
     df0:	1f000013 	bgtz	t8,e40 <sigill_handler-0x3ff1c0>
     df4:	0111010b 	0x111010b
     df8:	13010612 	beq	t8,at,2644 <sigill_handler-0x3fd9bc>
     dfc:	01000000 	0x1000000
     e00:	0e250111 	jal	8940444 <end+0x8536444>
     e04:	0e030b13 	jal	80c2c4c <end+0x7cb8c4c>
     e08:	01110e1b 	0x1110e1b
     e0c:	17100612 	bne	t8,s0,2658 <sigill_handler-0x3fd9a8>
     e10:	24020000 	li	v0,0
     e14:	3e0b0b00 	0x3e0b0b00
     e18:	0008030b 	0x8030b
     e1c:	00240300 	0x240300
     e20:	0b3e0b0b 	j	cf82c2c <end+0xcb78c2c>
     e24:	00000e03 	sra	at,zero,0x18
     e28:	03001604 	0x3001604
     e2c:	3b0b3a0e 	xori	t3,t8,0x3a0e
     e30:	490b390b 	bc2tl	$cc2,f260 <sigill_handler-0x3f0da0>
     e34:	05000013 	bltz	t0,e84 <sigill_handler-0x3ff17c>
     e38:	08030016 	j	c0058 <sigill_handler-0x33ffa8>
     e3c:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     e40:	13490b39 	beq	k0,t1,3b28 <sigill_handler-0x3fc4d8>
     e44:	13060000 	beq	t8,a2,e48 <sigill_handler-0x3ff1b8>
     e48:	0b0e0301 	j	c380c04 <end+0xbf76c04>
     e4c:	3b0b3a0b 	xori	t3,t8,0x3a0b
     e50:	010b390b 	0x10b390b
     e54:	07000013 	bltz	t8,ea4 <sigill_handler-0x3ff15c>
     e58:	0e03000d 	jal	80c0034 <end+0x7cb6034>
     e5c:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     e60:	13490b39 	beq	k0,t1,3b48 <sigill_handler-0x3fc4b8>
     e64:	00000b38 	0xb38
     e68:	03000d08 	0x3000d08
     e6c:	3b0b3a08 	xori	t3,t8,0x3a08
     e70:	490b390b 	bc2tl	$cc2,f2a0 <sigill_handler-0x3f0d60>
     e74:	000b3813 	0xb3813
     e78:	01010900 	0x1010900
     e7c:	13011349 	beq	t8,at,5ba4 <sigill_handler-0x3fa45c>
     e80:	210a0000 	addi	t2,t0,0
     e84:	2f134900 	sltiu	s3,t8,18688
     e88:	0b00000b 	j	c00002c <end+0xbbf602c>
     e8c:	19270115 	0x19270115
     e90:	00001301 	0x1301
     e94:	4900050c 	bc2f	22c8 <sigill_handler-0x3fdd38>
     e98:	0d000013 	jal	400004c <end+0x3bf604c>
     e9c:	0b0b000f 	j	c2c003c <end+0xbeb603c>
     ea0:	00001349 	0x1349
     ea4:	0b01130e 	j	c044c38 <end+0xbc3ac38>
     ea8:	3b0b3a0b 	xori	t3,t8,0x3a0b
     eac:	010b390b 	0x10b390b
     eb0:	0f000013 	jal	c00004c <end+0xbbf604c>
     eb4:	08030113 	j	c044c <sigill_handler-0x33fbb4>
     eb8:	0b3a050b 	j	ce8142c <end+0xca7742c>
     ebc:	0b390b3b 	j	ce42cec <end+0xca38cec>
     ec0:	00001301 	0x1301
     ec4:	49002610 	bc2f	a708 <sigill_handler-0x3f58f8>
     ec8:	11000013 	beqz	t0,f18 <sigill_handler-0x3ff0e8>
     ecc:	0b3e0104 	j	cf80410 <end+0xcb76410>
     ed0:	13490b0b 	beq	k0,t1,3b00 <sigill_handler-0x3fc500>
     ed4:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     ed8:	13010b39 	beq	t8,at,3bc0 <sigill_handler-0x3fc440>
     edc:	28120000 	slti	s2,zero,0
     ee0:	1c0e0300 	0x1c0e0300
     ee4:	1300000b 	beqz	t8,f14 <sigill_handler-0x3ff0ec>
     ee8:	0e030113 	jal	80c044c <end+0x7cb644c>
     eec:	0b3a050b 	j	ce8142c <end+0xca7742c>
     ef0:	0b390b3b 	j	ce42cec <end+0xca38cec>
     ef4:	00001301 	0x1301
     ef8:	03000d14 	0x3000d14
     efc:	3b0b3a0e 	xori	t3,t8,0x3a0e
     f00:	490b390b 	bc2tl	$cc2,f330 <sigill_handler-0x3f0cd0>
     f04:	00053813 	0x53813
     f08:	00211500 	0x211500
     f0c:	052f1349 	0x52f1349
     f10:	13160000 	beq	t8,s6,f14 <sigill_handler-0x3ff0ec>
     f14:	0b080301 	j	c200c04 <end+0xbdf6c04>
     f18:	3b0b3a0b 	xori	t3,t8,0x3a0b
     f1c:	010b390b 	0x10b390b
     f20:	17000013 	bnez	t8,f70 <sigill_handler-0x3ff090>
     f24:	0b0b000f 	j	c2c003c <end+0xbeb603c>
     f28:	34180000 	li	t8,0x0
     f2c:	3a0e0300 	xori	t6,s0,0x300
     f30:	390b3b0b 	xori	t3,t0,0x3b0b
     f34:	3f13490b 	0x3f13490b
     f38:	05018819 	bgez	t0,fffe2fa0 <end+0xffbd8fa0>
     f3c:	00001802 	srl	v1,zero,0x0
     f40:	3f002e19 	0x3f002e19
     f44:	3a0e0319 	xori	t6,s0,0x319
     f48:	390b3b0b 	xori	t3,t0,0x3b0b
     f4c:	4919270b 	bc2t	$cc6,ab7c <sigill_handler-0x3f5484>
     f50:	12011113 	beq	s0,at,53a0 <sigill_handler-0x3fac60>
     f54:	96184006 	lhu	t8,16390(s0)
     f58:	00001942 	srl	v1,zero,0x5
     f5c:	3f012e1a 	0x3f012e1a
     f60:	3a0e0319 	xori	t6,s0,0x319
     f64:	390b3b0b 	xori	t3,t0,0x3b0b
     f68:	4919270b 	bc2t	$cc6,ab98 <sigill_handler-0x3f5468>
     f6c:	12011113 	beq	s0,at,53bc <sigill_handler-0x3fac44>
     f70:	96184006 	lhu	t8,16390(s0)
     f74:	13011942 	beq	t8,at,7480 <sigill_handler-0x3f8b80>
     f78:	051b0000 	0x51b0000
     f7c:	3a0e0300 	xori	t6,s0,0x300
     f80:	390b3b0b 	xori	t3,t0,0x3b0b
     f84:	0213490b 	0x213490b
     f88:	1c000018 	bgtz	zero,fec <sigill_handler-0x3ff014>
     f8c:	08030034 	j	c00d0 <sigill_handler-0x33ff30>
     f90:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
     f94:	13490b39 	beq	k0,t1,3c7c <sigill_handler-0x3fc384>
     f98:	00001802 	srl	v1,zero,0x0
     f9c:	0300341d 	0x300341d
     fa0:	3b0b3a0e 	xori	t3,t8,0x3a0e
     fa4:	490b390b 	bc2tl	$cc2,f3d4 <sigill_handler-0x3f0c2c>
     fa8:	00180213 	0x180213
     fac:	00051e00 	sll	v1,a1,0x18
     fb0:	0b3a0803 	j	ce8200c <end+0xca7800c>
     fb4:	0b390b3b 	j	ce42cec <end+0xca38cec>
     fb8:	18021349 	0x18021349
     fbc:	2e1f0000 	sltiu	ra,s0,0
     fc0:	3a0e0301 	xori	t6,s0,0x301
     fc4:	390b3b0b 	xori	t3,t0,0x3b0b
     fc8:	4919270b 	bc2t	$cc6,abf8 <sigill_handler-0x3f5408>
     fcc:	12011113 	beq	s0,at,541c <sigill_handler-0x3fabe4>
     fd0:	96184006 	lhu	t8,16390(s0)
     fd4:	13011942 	beq	t8,at,74e0 <sigill_handler-0x3f8b20>
     fd8:	01000000 	0x1000000
     fdc:	0e250111 	jal	8940444 <end+0x8536444>
     fe0:	0e030b13 	jal	80c2c4c <end+0x7cb8c4c>
     fe4:	01110e1b 	0x1110e1b
     fe8:	17100612 	bne	t8,s0,2834 <sigill_handler-0x3fd7cc>
     fec:	24020000 	li	v0,0
     ff0:	3e0b0b00 	0x3e0b0b00
     ff4:	0008030b 	0x8030b
     ff8:	00240300 	0x240300
     ffc:	0b3e0b0b 	j	cf82c2c <end+0xcb78c2c>
    1000:	00000e03 	sra	at,zero,0x18
    1004:	03001604 	0x3001604
    1008:	3b0b3a0e 	xori	t3,t8,0x3a0e
    100c:	490b390b 	bc2tl	$cc2,f43c <sigill_handler-0x3f0bc4>
    1010:	05000013 	bltz	t0,1060 <sigill_handler-0x3fefa0>
    1014:	13490101 	beq	k0,t1,141c <sigill_handler-0x3febe4>
    1018:	00001301 	0x1301
    101c:	49002106 	bc2f	9438 <sigill_handler-0x3f6bc8>
    1020:	000b2f13 	0xb2f13
    1024:	01130700 	0x1130700
    1028:	0b0b0803 	j	c2c200c <end+0xbeb800c>
    102c:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    1030:	13010b39 	beq	t8,at,3d18 <sigill_handler-0x3fc2e8>
    1034:	0d080000 	jal	4200000 <end+0x3df6000>
    1038:	3a0e0300 	xori	t6,s0,0x300
    103c:	390b3b0b 	xori	t3,t0,0x3b0b
    1040:	3813490b 	xori	s3,zero,0x490b
    1044:	0900000b 	j	400002c <end+0x3bf602c>
    1048:	0b0b000f 	j	c2c003c <end+0xbeb603c>
    104c:	00001349 	0x1349
    1050:	2701150a 	addiu	at,t8,5386
    1054:	01134919 	0x1134919
    1058:	0b000013 	j	c00004c <end+0xbbf604c>
    105c:	13490005 	beq	k0,t1,1074 <sigill_handler-0x3fef8c>
    1060:	0f0c0000 	jal	c300000 <end+0xbef6000>
    1064:	000b0b00 	sll	at,t3,0xc
    1068:	00260d00 	0x260d00
    106c:	130e0000 	beq	t8,t6,1070 <sigill_handler-0x3fef90>
    1070:	0b0e0301 	j	c380c04 <end+0xbf76c04>
    1074:	3b0b3a0b 	xori	t3,t8,0x3a0b
    1078:	010b390b 	0x10b390b
    107c:	0f000013 	jal	c00004c <end+0xbbf604c>
    1080:	0e030034 	jal	80c00d0 <end+0x7cb60d0>
    1084:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    1088:	13490b39 	beq	k0,t1,3d70 <sigill_handler-0x3fc290>
    108c:	193c193f 	0x193c193f
    1090:	34100000 	li	s0,0x0
    1094:	3a134700 	xori	s3,s0,0x4700
    1098:	390b3b0b 	xori	t3,t0,0x3b0b
    109c:	0018020b 	0x18020b
    10a0:	012e1100 	0x12e1100
    10a4:	0b3a0e03 	j	ce8380c <end+0xca7980c>
    10a8:	0b390b3b 	j	ce42cec <end+0xca38cec>
    10ac:	13491927 	beq	k0,t1,754c <sigill_handler-0x3f8ab4>
    10b0:	06120111 	bltzall	s0,14f8 <sigill_handler-0x3feb08>
    10b4:	42961840 	c0	0x961840
    10b8:	00130119 	0x130119
    10bc:	00051200 	sll	v0,a1,0x8
    10c0:	0b3a0803 	j	ce8200c <end+0xca7800c>
    10c4:	0b390b3b 	j	ce42cec <end+0xca38cec>
    10c8:	18021349 	0x18021349
    10cc:	05130000 	bgezall	t0,10d0 <sigill_handler-0x3fef30>
    10d0:	3a0e0300 	xori	t6,s0,0x300
    10d4:	390b3b0b 	xori	t3,t0,0x3b0b
    10d8:	0213490b 	0x213490b
    10dc:	14000018 	bnez	zero,1140 <sigill_handler-0x3feec0>
    10e0:	0e03012e 	jal	80c04b8 <end+0x7cb64b8>
    10e4:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    10e8:	19270b39 	0x19270b39
    10ec:	01111349 	0x1111349
    10f0:	18400612 	blez	v0,293c <sigill_handler-0x3fd6c4>
    10f4:	01194297 	0x1194297
    10f8:	15000013 	bnez	t0,1148 <sigill_handler-0x3feeb8>
    10fc:	08030034 	j	c00d0 <sigill_handler-0x33ff30>
    1100:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    1104:	13490b39 	beq	k0,t1,3dec <sigill_handler-0x3fc214>
    1108:	00001802 	srl	v1,zero,0x0
    110c:	3f012e16 	0x3f012e16
    1110:	3a0e0319 	xori	t6,s0,0x319
    1114:	390b3b0b 	xori	t3,t0,0x3b0b
    1118:	4919270b 	bc2t	$cc6,ad48 <sigill_handler-0x3f52b8>
    111c:	12011113 	beq	s0,at,556c <sigill_handler-0x3faa94>
    1120:	96184006 	lhu	t8,16390(s0)
    1124:	13011942 	beq	t8,at,7630 <sigill_handler-0x3f89d0>
    1128:	2e170000 	sltiu	s7,s0,0
    112c:	03193f01 	0x3193f01
    1130:	3b0b3a0e 	xori	t3,t8,0x3a0e
    1134:	270b390b 	addiu	t3,t8,14603
    1138:	11134919 	beq	t0,s3,135a0 <sigill_handler-0x3eca60>
    113c:	40061201 	0x40061201
    1140:	19429618 	0x19429618
    1144:	01000000 	0x1000000
    1148:	0e250111 	jal	8940444 <end+0x8536444>
    114c:	0e030b13 	jal	80c2c4c <end+0x7cb8c4c>
    1150:	01110e1b 	0x1110e1b
    1154:	17100612 	bne	t8,s0,29a0 <sigill_handler-0x3fd660>
    1158:	24020000 	li	v0,0
    115c:	3e0b0b00 	0x3e0b0b00
    1160:	0008030b 	0x8030b
    1164:	00160300 	sll	zero,s6,0xc
    1168:	0b3a0e03 	j	ce8380c <end+0xca7980c>
    116c:	0b390b3b 	j	ce42cec <end+0xca38cec>
    1170:	00001349 	0x1349
    1174:	0b002404 	j	c009010 <end+0xbbff010>
    1178:	030b3e0b 	0x30b3e0b
    117c:	0500000e 	bltz	t0,11b8 <sigill_handler-0x3fee48>
    1180:	13490026 	beq	k0,t1,121c <sigill_handler-0x3fede4>
    1184:	0f060000 	jal	c180000 <end+0xbd76000>
    1188:	000b0b00 	sll	at,t3,0xc
    118c:	000f0700 	sll	zero,t7,0x1c
    1190:	0e030b0b 	jal	80c2c2c <end+0x7cb8c2c>
    1194:	0f080000 	jal	c200000 <end+0xbdf6000>
    1198:	490b0b00 	bc2tl	$cc2,3d9c <sigill_handler-0x3fc264>
    119c:	09000013 	j	400004c <end+0x3bf604c>
    11a0:	0e030113 	jal	80c044c <end+0x7cb644c>
    11a4:	0b3a0b0b 	j	ce82c2c <end+0xca78c2c>
    11a8:	0b390b3b 	j	ce42cec <end+0xca38cec>
    11ac:	00001301 	0x1301
    11b0:	03000d0a 	0x3000d0a
    11b4:	3b0b3a08 	xori	t3,t8,0x3a08
    11b8:	490b390b 	bc2tl	$cc2,f5e8 <sigill_handler-0x3f0a18>
    11bc:	000b3813 	0xb3813
    11c0:	012e0b00 	0x12e0b00
    11c4:	0e03193f 	jal	80c64fc <end+0x7cbc4fc>
    11c8:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    11cc:	19270b39 	0x19270b39
    11d0:	01111349 	0x1111349
    11d4:	18400612 	blez	v0,2a20 <sigill_handler-0x3fd5e0>
    11d8:	01194296 	0x1194296
    11dc:	0c000013 	jal	4c <sigill_handler-0x3fffb4>
    11e0:	08030005 	j	c0014 <sigill_handler-0x33ffec>
    11e4:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    11e8:	13490b39 	beq	k0,t1,3ed0 <sigill_handler-0x3fc130>
    11ec:	00001802 	srl	v1,zero,0x0
    11f0:	0000180d 	break	0x0,0x60
    11f4:	00340e00 	0x340e00
    11f8:	0b3a0803 	j	ce8200c <end+0xca7800c>
    11fc:	0b390b3b 	j	ce42cec <end+0xca38cec>
    1200:	18021349 	0x18021349
    1204:	2e0f0000 	sltiu	t7,s0,0
    1208:	3a0e0301 	xori	t6,s0,0x301
    120c:	390b3b0b 	xori	t3,t0,0x3b0b
    1210:	4919270b 	bc2t	$cc6,ae40 <sigill_handler-0x3f51c0>
    1214:	12011113 	beq	s0,at,5664 <sigill_handler-0x3fa99c>
    1218:	96184006 	lhu	t8,16390(s0)
    121c:	13011942 	beq	t8,at,7728 <sigill_handler-0x3f88d8>
    1220:	2e100000 	sltiu	s0,s0,0
    1224:	3a0e0301 	xori	t6,s0,0x301
    1228:	390b3b0b 	xori	t3,t0,0x3b0b
    122c:	1119270b 	beq	t0,t9,ae5c <sigill_handler-0x3f51a4>
    1230:	40061201 	0x40061201
    1234:	19429618 	0x19429618
    1238:	00001301 	0x1301
    123c:	03000511 	0x3000511
    1240:	3b0b3a0e 	xori	t3,t8,0x3a0e
    1244:	490b390b 	bc2tl	$cc2,f674 <sigill_handler-0x3f098c>
    1248:	00180213 	0x180213
    124c:	11010000 	beq	t0,at,1250 <sigill_handler-0x3fedb0>
    1250:	130e2501 	beq	t8,t6,a658 <sigill_handler-0x3f59a8>
    1254:	1b0e030b 	0x1b0e030b
    1258:	1201110e 	beq	s0,at,5694 <sigill_handler-0x3fa96c>
    125c:	00171006 	srlv	v0,s7,zero
    1260:	00240200 	0x240200
    1264:	0b3e0b0b 	j	cf82c2c <end+0xcb78c2c>
    1268:	00000803 	sra	at,zero,0x0
    126c:	0b002403 	j	c00900c <end+0xbbff00c>
    1270:	030b3e0b 	0x30b3e0b
    1274:	0400000e 	bltz	zero,12b0 <sigill_handler-0x3fed50>
    1278:	0e030016 	jal	80c0058 <end+0x7cb6058>
    127c:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    1280:	13490b39 	beq	k0,t1,3f68 <sigill_handler-0x3fc098>
    1284:	16050000 	bne	s0,a1,1288 <sigill_handler-0x3fed78>
    1288:	3a080300 	xori	t0,s0,0x300
    128c:	390b3b0b 	xori	t3,t0,0x3b0b
    1290:	0013490b 	0x13490b
    1294:	01130600 	0x1130600
    1298:	0b0b0e03 	j	c2c380c <end+0xbeb980c>
    129c:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    12a0:	13010b39 	beq	t8,at,3f88 <sigill_handler-0x3fc078>
    12a4:	0d070000 	jal	41c0000 <end+0x3db6000>
    12a8:	3a0e0300 	xori	t6,s0,0x300
    12ac:	390b3b0b 	xori	t3,t0,0x3b0b
    12b0:	3813490b 	xori	s3,zero,0x490b
    12b4:	0800000b 	j	2c <sigill_handler-0x3fffd4>
    12b8:	0803000d 	j	c0034 <sigill_handler-0x33ffcc>
    12bc:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    12c0:	13490b39 	beq	k0,t1,3fa8 <sigill_handler-0x3fc058>
    12c4:	00000b38 	0xb38
    12c8:	49010109 	bc2t	16f0 <sigill_handler-0x3fe910>
    12cc:	00130113 	0x130113
    12d0:	00210a00 	0x210a00
    12d4:	0b2f1349 	j	cbc4d24 <end+0xc7bad24>
    12d8:	150b0000 	bne	t0,t3,12dc <sigill_handler-0x3fed24>
    12dc:	01192701 	0x1192701
    12e0:	0c000013 	jal	4c <sigill_handler-0x3fffb4>
    12e4:	13490005 	beq	k0,t1,12fc <sigill_handler-0x3fed04>
    12e8:	0f0d0000 	jal	c340000 <end+0xbf36000>
    12ec:	490b0b00 	bc2tl	$cc2,3ef0 <sigill_handler-0x3fc110>
    12f0:	0e000013 	jal	800004c <end+0x7bf604c>
    12f4:	0b0b0113 	j	c2c044c <end+0xbeb644c>
    12f8:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    12fc:	13010b39 	beq	t8,at,3fe4 <sigill_handler-0x3fc01c>
    1300:	130f0000 	beq	t8,t7,1304 <sigill_handler-0x3fecfc>
    1304:	0b080301 	j	c200c04 <end+0xbdf6c04>
    1308:	3b0b3a05 	xori	t3,t8,0x3a05
    130c:	010b390b 	0x10b390b
    1310:	10000013 	b	1360 <sigill_handler-0x3feca0>
    1314:	13490026 	beq	k0,t1,13b0 <sigill_handler-0x3fec50>
    1318:	35110000 	ori	s1,t0,0x0
    131c:	00134900 	sll	t1,s3,0x4
    1320:	012e1200 	0x12e1200
    1324:	0e03193f 	jal	80c64fc <end+0x7cbc4fc>
    1328:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    132c:	19270b39 	0x19270b39
    1330:	06120111 	bltzall	s0,1778 <sigill_handler-0x3fe888>
    1334:	42961840 	c0	0x961840
    1338:	13000019 	beqz	t8,13a0 <sigill_handler-0x3fec60>
    133c:	0e030005 	jal	80c0014 <end+0x7cb6014>
    1340:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    1344:	13490b39 	beq	k0,t1,402c <sigill_handler-0x3fbfd4>
    1348:	00001802 	srl	v1,zero,0x0
    134c:	03003414 	0x3003414
    1350:	3b0b3a08 	xori	t3,t8,0x3a08
    1354:	490b390b 	bc2tl	$cc2,f784 <sigill_handler-0x3f087c>
    1358:	00180213 	0x180213
    135c:	11010000 	beq	t0,at,1360 <sigill_handler-0x3feca0>
    1360:	130e2501 	beq	t8,t6,a768 <sigill_handler-0x3f5898>
    1364:	1b0e030b 	0x1b0e030b
    1368:	1201110e 	beq	s0,at,57a4 <sigill_handler-0x3fa85c>
    136c:	00171006 	srlv	v0,s7,zero
    1370:	00240200 	0x240200
    1374:	0b3e0b0b 	j	cf82c2c <end+0xcb78c2c>
    1378:	00000803 	sra	at,zero,0x0
    137c:	03001603 	0x3001603
    1380:	3b0b3a0e 	xori	t3,t8,0x3a0e
    1384:	490b390b 	bc2tl	$cc2,f7b4 <sigill_handler-0x3f084c>
    1388:	04000013 	bltz	zero,13d8 <sigill_handler-0x3fec28>
    138c:	0b0b0024 	j	c2c0090 <end+0xbeb6090>
    1390:	0e030b3e 	jal	80c2cf8 <end+0x7cb8cf8>
    1394:	13050000 	beq	t8,a1,1398 <sigill_handler-0x3fec68>
    1398:	3a0b0b01 	xori	t3,s0,0xb01
    139c:	390b3b0b 	xori	t3,t0,0x3b0b
    13a0:	0013010b 	0x13010b
    13a4:	000d0600 	sll	zero,t5,0x18
    13a8:	0b3a0e03 	j	ce8380c <end+0xca7980c>
    13ac:	0b390b3b 	j	ce42cec <end+0xca38cec>
    13b0:	0b381349 	j	ce04d24 <end+0xc9fad24>
    13b4:	01070000 	0x1070000
    13b8:	01134901 	0x1134901
    13bc:	08000013 	j	4c <sigill_handler-0x3fffb4>
    13c0:	13490021 	beq	k0,t1,1448 <sigill_handler-0x3febb8>
    13c4:	00000b2f 	0xb2f
    13c8:	49002609 	bc2f	abf0 <sigill_handler-0x3f5410>
    13cc:	0a000013 	j	800004c <end+0x7bf604c>
    13d0:	0b0b000f 	j	c2c003c <end+0xbeb603c>
    13d4:	0f0b0000 	jal	c2c0000 <end+0xbeb6000>
    13d8:	490b0b00 	bc2tl	$cc2,3fdc <sigill_handler-0x3fc024>
    13dc:	0c000013 	jal	4c <sigill_handler-0x3fffb4>
    13e0:	00000026 	xor	zero,zero,zero
    13e4:	0300160d 	break	0x300,0x58
    13e8:	3b0b3a08 	xori	t3,t8,0x3a08
    13ec:	490b390b 	bc2tl	$cc2,f81c <sigill_handler-0x3f07e4>
    13f0:	0e000013 	jal	800004c <end+0x7bf604c>
    13f4:	0e030113 	jal	80c044c <end+0x7cb644c>
    13f8:	0b3a0b0b 	j	ce82c2c <end+0xca78c2c>
    13fc:	0b390b3b 	j	ce42cec <end+0xca38cec>
    1400:	00001301 	0x1301
    1404:	03000d0f 	0x3000d0f
    1408:	3b0b3a08 	xori	t3,t8,0x3a08
    140c:	490b390b 	bc2tl	$cc2,f83c <sigill_handler-0x3f07c4>
    1410:	000b3813 	0xb3813
    1414:	01151000 	0x1151000
    1418:	13011927 	beq	t8,at,78b8 <sigill_handler-0x3f8748>
    141c:	05110000 	bgezal	t0,1420 <sigill_handler-0x3febe0>
    1420:	00134900 	sll	t1,s3,0x4
    1424:	01131200 	0x1131200
    1428:	050b0803 	tltiu	t0,2051
    142c:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    1430:	13010b39 	beq	t8,at,4118 <sigill_handler-0x3fbee8>
    1434:	04130000 	bgezall	zero,1438 <sigill_handler-0x3febc8>
    1438:	0b0b3e01 	j	c2cf804 <end+0xbec5804>
    143c:	3a13490b 	xori	s3,s0,0x490b
    1440:	390b3b0b 	xori	t3,t0,0x3b0b
    1444:	0013010b 	0x13010b
    1448:	00281400 	0x281400
    144c:	0b1c0e03 	j	c70380c <end+0xc2f980c>
    1450:	2e150000 	sltiu	s5,s0,0
    1454:	03193f01 	0x3193f01
    1458:	3b0b3a0e 	xori	t3,t8,0x3a0e
    145c:	270b390b 	addiu	t3,t8,14603
    1460:	11134919 	beq	t0,s3,138c8 <sigill_handler-0x3ec738>
    1464:	40061201 	0x40061201
    1468:	19429618 	0x19429618
    146c:	00001301 	0x1301
    1470:	03000516 	0x3000516
    1474:	3b0b3a0e 	xori	t3,t8,0x3a0e
    1478:	490b390b 	bc2tl	$cc2,f8a8 <sigill_handler-0x3f0758>
    147c:	00180213 	0x180213
    1480:	00181700 	sll	v0,t8,0x1c
    1484:	34180000 	li	t8,0x0
    1488:	3a080300 	xori	t0,s0,0x300
    148c:	390b3b0b 	xori	t3,t0,0x3b0b
    1490:	0213490b 	0x213490b
    1494:	19000018 	blez	t0,14f8 <sigill_handler-0x3feb08>
    1498:	0e030034 	jal	80c00d0 <end+0x7cb60d0>
    149c:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    14a0:	13490b39 	beq	k0,t1,4188 <sigill_handler-0x3fbe78>
    14a4:	00001802 	srl	v1,zero,0x0
    14a8:	03000a1a 	0x3000a1a
    14ac:	3b0b3a08 	xori	t3,t8,0x3a08
    14b0:	110b390b 	beq	t0,t3,f8e0 <sigill_handler-0x3f0720>
    14b4:	1b000001 	blez	t8,14bc <sigill_handler-0x3feb44>
    14b8:	0e03000a 	jal	80c0028 <end+0x7cb6028>
    14bc:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    14c0:	01110b39 	0x1110b39
    14c4:	0b1c0000 	j	c700000 <end+0xc2f6000>
    14c8:	01175501 	0x1175501
    14cc:	1d000013 	bgtz	t0,151c <sigill_handler-0x3feae4>
    14d0:	1755010b 	bne	k0,s5,1900 <sigill_handler-0x3fe700>
    14d4:	0b1e0000 	j	c780000 <end+0xc376000>
    14d8:	12011101 	beq	s0,at,58e0 <sigill_handler-0x3fa720>
    14dc:	00130106 	0x130106
    14e0:	010b1f00 	0x10b1f00
    14e4:	06120111 	bltzall	s0,192c <sigill_handler-0x3fe6d4>
    14e8:	1d200000 	bgtz	t1,14ec <sigill_handler-0x3feb14>
    14ec:	11133100 	beq	t0,s3,d8f0 <sigill_handler-0x3f2710>
    14f0:	58061201 	0x58061201
    14f4:	570b590b 	bnel	t8,t3,17924 <sigill_handler-0x3e86dc>
    14f8:	2100000b 	addi	zero,t0,11
    14fc:	13490021 	beq	k0,t1,1584 <sigill_handler-0x3fea7c>
    1500:	0000052f 	0x52f
    1504:	03012e22 	0x3012e22
    1508:	3b0b3a0e 	xori	t3,t8,0x3a0e
    150c:	270b390b 	addiu	t3,t8,14603
    1510:	11134919 	beq	t0,s3,13978 <sigill_handler-0x3ec688>
    1514:	40061201 	0x40061201
    1518:	19429618 	0x19429618
    151c:	00001301 	0x1301
    1520:	03000523 	0x3000523
    1524:	3b0b3a08 	xori	t3,t8,0x3a08
    1528:	490b390b 	bc2tl	$cc2,f958 <sigill_handler-0x3f06a8>
    152c:	00180213 	0x180213
    1530:	002e2400 	0x2e2400
    1534:	0b3a0e03 	j	ce8380c <end+0xca7980c>
    1538:	0b390b3b 	j	ce42cec <end+0xca38cec>
    153c:	13491927 	beq	k0,t1,79dc <sigill_handler-0x3f8624>
    1540:	00000b20 	0xb20
    1544:	01110100 	0x1110100
    1548:	0b130e25 	j	c4c3894 <end+0xc0b9894>
    154c:	0e1b0e03 	jal	86c380c <end+0x82b980c>
    1550:	06120111 	bltzall	s0,1998 <sigill_handler-0x3fe668>
    1554:	00001710 	0x1710
    1558:	0b002402 	j	c009008 <end+0xbbff008>
    155c:	030b3e0b 	0x30b3e0b
    1560:	03000008 	jr	t8
    1564:	0b0b0024 	j	c2c0090 <end+0xbeb6090>
    1568:	0e030b3e 	jal	80c2cf8 <end+0x7cb8cf8>
    156c:	16040000 	bne	s0,a0,1570 <sigill_handler-0x3fea90>
    1570:	3a0e0300 	xori	t6,s0,0x300
    1574:	390b3b0b 	xori	t3,t0,0x3b0b
    1578:	0013490b 	0x13490b
    157c:	00160500 	sll	zero,s6,0x14
    1580:	0b3a0803 	j	ce8200c <end+0xca7800c>
    1584:	0b390b3b 	j	ce42cec <end+0xca38cec>
    1588:	00001349 	0x1349
    158c:	03011306 	0x3011306
    1590:	3a0b0b0e 	xori	t3,s0,0xb0e
    1594:	390b3b0b 	xori	t3,t0,0x3b0b
    1598:	0013010b 	0x13010b
    159c:	000d0700 	sll	zero,t5,0x1c
    15a0:	0b3a0e03 	j	ce8380c <end+0xca7980c>
    15a4:	0b390b3b 	j	ce42cec <end+0xca38cec>
    15a8:	0b381349 	j	ce04d24 <end+0xc9fad24>
    15ac:	0d080000 	jal	4200000 <end+0x3df6000>
    15b0:	3a080300 	xori	t0,s0,0x300
    15b4:	390b3b0b 	xori	t3,t0,0x3b0b
    15b8:	3813490b 	xori	s3,zero,0x490b
    15bc:	0900000b 	j	400002c <end+0x3bf602c>
    15c0:	13490101 	beq	k0,t1,19c8 <sigill_handler-0x3fe638>
    15c4:	00001301 	0x1301
    15c8:	4900210a 	bc2f	99f4 <sigill_handler-0x3f660c>
    15cc:	000b2f13 	0xb2f13
    15d0:	01150b00 	0x1150b00
    15d4:	13011927 	beq	t8,at,7a74 <sigill_handler-0x3f858c>
    15d8:	050c0000 	teqi	t0,0
    15dc:	00134900 	sll	t1,s3,0x4
    15e0:	000f0d00 	sll	at,t7,0x14
    15e4:	13490b0b 	beq	k0,t1,4214 <sigill_handler-0x3fbdec>
    15e8:	130e0000 	beq	t8,t6,15ec <sigill_handler-0x3fea14>
    15ec:	3a0b0b01 	xori	t3,s0,0xb01
    15f0:	390b3b0b 	xori	t3,t0,0x3b0b
    15f4:	0013010b 	0x13010b
    15f8:	01130f00 	0x1130f00
    15fc:	050b0803 	tltiu	t0,2051
    1600:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    1604:	13010b39 	beq	t8,at,42ec <sigill_handler-0x3fbd14>
    1608:	26100000 	addiu	s0,s0,0
    160c:	00134900 	sll	t1,s3,0x4
    1610:	00351100 	0x351100
    1614:	00001349 	0x1349
    1618:	03011312 	0x3011312
    161c:	3a0b0b08 	xori	t3,s0,0xb08
    1620:	390b3b0b 	xori	t3,t0,0x3b0b
    1624:	0013010b 	0x13010b
    1628:	01151300 	0x1151300
    162c:	13491927 	beq	k0,t1,7acc <sigill_handler-0x3f8534>
    1630:	00001301 	0x1301
    1634:	0b000f14 	j	c003c50 <end+0xbbf9c50>
    1638:	1500000b 	bnez	t0,1668 <sigill_handler-0x3fe998>
    163c:	00000026 	xor	zero,zero,zero
    1640:	03003416 	0x3003416
    1644:	3b0b3a0e 	xori	t3,t8,0x3a0e
    1648:	490b390b 	bc2tl	$cc2,fa78 <sigill_handler-0x3f0588>
    164c:	3c193f13 	lui	t9,0x3f13
    1650:	17000019 	bnez	t8,16b8 <sigill_handler-0x3fe948>
    1654:	08030034 	j	c00d0 <sigill_handler-0x33ff30>
    1658:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    165c:	13490b39 	beq	k0,t1,4344 <sigill_handler-0x3fbcbc>
    1660:	193c193f 	0x193c193f
    1664:	34180000 	li	t8,0x0
    1668:	3a134700 	xori	s3,s0,0x4700
    166c:	390b3b0b 	xori	t3,t0,0x3b0b
    1670:	0018020b 	0x18020b
    1674:	012e1900 	0x12e1900
    1678:	0b3a0e03 	j	ce8380c <end+0xca7980c>
    167c:	0b390b3b 	j	ce42cec <end+0xca38cec>
    1680:	13491927 	beq	k0,t1,7b20 <sigill_handler-0x3f84e0>
    1684:	06120111 	bltzall	s0,1acc <sigill_handler-0x3fe534>
    1688:	42971840 	c0	0x971840
    168c:	00130119 	0x130119
    1690:	00051a00 	sll	v1,a1,0x8
    1694:	0b3a0803 	j	ce8200c <end+0xca7800c>
    1698:	0b390b3b 	j	ce42cec <end+0xca38cec>
    169c:	18021349 	0x18021349
    16a0:	051b0000 	0x51b0000
    16a4:	3a0e0300 	xori	t6,s0,0x300
    16a8:	390b3b0b 	xori	t3,t0,0x3b0b
    16ac:	0213490b 	0x213490b
    16b0:	1c000018 	bgtz	zero,1714 <sigill_handler-0x3fe8ec>
    16b4:	0e03012e 	jal	80c04b8 <end+0x7cb64b8>
    16b8:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    16bc:	19270b39 	0x19270b39
    16c0:	01111349 	0x1111349
    16c4:	18400612 	blez	v0,2f10 <sigill_handler-0x3fd0f0>
    16c8:	01194296 	0x1194296
    16cc:	1d000013 	bgtz	t0,171c <sigill_handler-0x3fe8e4>
    16d0:	193f012e 	0x193f012e
    16d4:	0b3a0e03 	j	ce8380c <end+0xca7980c>
    16d8:	0b390b3b 	j	ce42cec <end+0xca38cec>
    16dc:	13491927 	beq	k0,t1,7b7c <sigill_handler-0x3f8484>
    16e0:	06120111 	bltzall	s0,1b28 <sigill_handler-0x3fe4d8>
    16e4:	42961840 	c0	0x961840
    16e8:	00130119 	0x130119
    16ec:	00341e00 	0x341e00
    16f0:	0b3a0803 	j	ce8200c <end+0xca7800c>
    16f4:	0b390b3b 	j	ce42cec <end+0xca38cec>
    16f8:	18021349 	0x18021349
    16fc:	341f0000 	li	ra,0x0
    1700:	3a0e0300 	xori	t6,s0,0x300
    1704:	390b3b0b 	xori	t3,t0,0x3b0b
    1708:	0213490b 	0x213490b
    170c:	20000018 	addi	zero,zero,24
    1710:	0803000a 	j	c0028 <sigill_handler-0x33ffd8>
    1714:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    1718:	01110b39 	0x1110b39
    171c:	0a210000 	j	8840000 <end+0x8436000>
    1720:	3a0e0300 	xori	t6,s0,0x300
    1724:	390b3b0b 	xori	t3,t0,0x3b0b
    1728:	0001110b 	0x1110b
    172c:	11010000 	beq	t0,at,1730 <sigill_handler-0x3fe8d0>
    1730:	130e2501 	beq	t8,t6,ab38 <sigill_handler-0x3f54c8>
    1734:	1b0e030b 	0x1b0e030b
    1738:	1201110e 	beq	s0,at,5b74 <sigill_handler-0x3fa48c>
    173c:	00171006 	srlv	v0,s7,zero
    1740:	00240200 	0x240200
    1744:	0b3e0b0b 	j	cf82c2c <end+0xcb78c2c>
    1748:	00000803 	sra	at,zero,0x0
    174c:	03001603 	0x3001603
    1750:	3b0b3a0e 	xori	t3,t8,0x3a0e
    1754:	490b390b 	bc2tl	$cc2,fb84 <sigill_handler-0x3f047c>
    1758:	04000013 	bltz	zero,17a8 <sigill_handler-0x3fe858>
    175c:	0b0b0024 	j	c2c0090 <end+0xbeb6090>
    1760:	0e030b3e 	jal	80c2cf8 <end+0x7cb8cf8>
    1764:	13050000 	beq	t8,a1,1768 <sigill_handler-0x3fe898>
    1768:	3a0b0b01 	xori	t3,s0,0xb01
    176c:	390b3b0b 	xori	t3,t0,0x3b0b
    1770:	0013010b 	0x13010b
    1774:	000d0600 	sll	zero,t5,0x18
    1778:	0b3a0e03 	j	ce8380c <end+0xca7980c>
    177c:	0b390b3b 	j	ce42cec <end+0xca38cec>
    1780:	0b381349 	j	ce04d24 <end+0xc9fad24>
    1784:	01070000 	0x1070000
    1788:	01134901 	0x1134901
    178c:	08000013 	j	4c <sigill_handler-0x3fffb4>
    1790:	13490021 	beq	k0,t1,1818 <sigill_handler-0x3fe7e8>
    1794:	00000b2f 	0xb2f
    1798:	49002609 	bc2f	afc0 <sigill_handler-0x3f5040>
    179c:	0a000013 	j	800004c <end+0x7bf604c>
    17a0:	0b0b000f 	j	c2c003c <end+0xbeb603c>
    17a4:	00001349 	0x1349
    17a8:	2701150b 	addiu	at,t8,5387
    17ac:	01134919 	0x1134919
    17b0:	0c000013 	jal	4c <sigill_handler-0x3fffb4>
    17b4:	13490005 	beq	k0,t1,17cc <sigill_handler-0x3fe834>
    17b8:	0f0d0000 	jal	c340000 <end+0xbf36000>
    17bc:	000b0b00 	sll	at,t3,0xc
    17c0:	00260e00 	0x260e00
    17c4:	2e0f0000 	sltiu	t7,s0,0
    17c8:	03193f01 	0x3193f01
    17cc:	3b0b3a0e 	xori	t3,t8,0x3a0e
    17d0:	270b390b 	addiu	t3,t8,14603
    17d4:	11134919 	beq	t0,s3,13c3c <sigill_handler-0x3ec3c4>
    17d8:	40061201 	0x40061201
    17dc:	19429618 	0x19429618
    17e0:	00001301 	0x1301
    17e4:	03000510 	0x3000510
    17e8:	3b0b3a08 	xori	t3,t8,0x3a08
    17ec:	490b390b 	bc2tl	$cc2,fc1c <sigill_handler-0x3f03e4>
    17f0:	00180213 	0x180213
    17f4:	00051100 	sll	v0,a1,0x4
    17f8:	0b3a0e03 	j	ce8380c <end+0xca7980c>
    17fc:	0b390b3b 	j	ce42cec <end+0xca38cec>
    1800:	18021349 	0x18021349
    1804:	34120000 	li	s2,0x0
    1808:	3a080300 	xori	t0,s0,0x300
    180c:	390b3b0b 	xori	t3,t0,0x3b0b
    1810:	0213490b 	0x213490b
    1814:	13000018 	beqz	t8,1878 <sigill_handler-0x3fe788>
    1818:	0e030034 	jal	80c00d0 <end+0x7cb60d0>
    181c:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    1820:	13490b39 	beq	k0,t1,4508 <sigill_handler-0x3fbaf8>
    1824:	00001802 	srl	v1,zero,0x0
    1828:	11010b14 	beq	t0,at,447c <sigill_handler-0x3fbb84>
    182c:	01061201 	0x1061201
    1830:	15000013 	bnez	t0,1880 <sigill_handler-0x3fe780>
    1834:	0111010b 	0x111010b
    1838:	00000612 	0x612
    183c:	3f012e16 	0x3f012e16
    1840:	3a0e0319 	xori	t6,s0,0x319
    1844:	390b3b0b 	xori	t3,t0,0x3b0b
    1848:	4919270b 	bc2t	$cc6,b478 <sigill_handler-0x3f4b88>
    184c:	12011113 	beq	s0,at,5c9c <sigill_handler-0x3fa364>
    1850:	97184006 	lhu	t8,16390(t8)
    1854:	13011942 	beq	t8,at,7d60 <sigill_handler-0x3f82a0>
    1858:	01000000 	0x1000000
    185c:	0e250111 	jal	8940444 <end+0x8536444>
    1860:	0e030b13 	jal	80c2c4c <end+0x7cb8c4c>
    1864:	01110e1b 	0x1110e1b
    1868:	17100612 	bne	t8,s0,30b4 <sigill_handler-0x3fcf4c>
    186c:	16020000 	bne	s0,v0,1870 <sigill_handler-0x3fe790>
    1870:	3a0e0300 	xori	t6,s0,0x300
    1874:	390b3b0b 	xori	t3,t0,0x3b0b
    1878:	0013490b 	0x13490b
    187c:	000f0300 	sll	zero,t7,0xc
    1880:	0e030b0b 	jal	80c2c2c <end+0x7cb8c2c>
    1884:	24040000 	li	a0,0
    1888:	3e0b0b00 	0x3e0b0b00
    188c:	0008030b 	0x8030b
    1890:	00240500 	0x240500
    1894:	0b3e0b0b 	j	cf82c2c <end+0xcb78c2c>
    1898:	00000e03 	sra	at,zero,0x18
    189c:	0b000f06 	j	c003c18 <end+0xbbf9c18>
    18a0:	0013490b 	0x13490b
    18a4:	01150700 	0x1150700
    18a8:	13011927 	beq	t8,at,7d48 <sigill_handler-0x3f82b8>
    18ac:	05080000 	tgei	t0,0
    18b0:	00134900 	sll	t1,s3,0x4
    18b4:	000f0900 	sll	at,t7,0x4
    18b8:	00000b0b 	0xb0b
    18bc:	4900260a 	bc2f	b0e8 <sigill_handler-0x3f4f18>
    18c0:	0b000013 	j	c00004c <end+0xbbf604c>
    18c4:	0e03012e 	jal	80c04b8 <end+0x7cb64b8>
    18c8:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    18cc:	19270b39 	0x19270b39
    18d0:	06120111 	bltzall	s0,1d18 <sigill_handler-0x3fe2e8>
    18d4:	42961840 	c0	0x961840
    18d8:	00130119 	0x130119
    18dc:	00050c00 	sll	at,a1,0x10
    18e0:	0b3a0803 	j	ce8200c <end+0xca7800c>
    18e4:	0b390b3b 	j	ce42cec <end+0xca38cec>
    18e8:	18021349 	0x18021349
    18ec:	050d0000 	0x50d0000
    18f0:	3a0e0300 	xori	t6,s0,0x300
    18f4:	390b3b0b 	xori	t3,t0,0x3b0b
    18f8:	0213490b 	0x213490b
    18fc:	0e000018 	jal	8000060 <end+0x7bf6060>
    1900:	0e030034 	jal	80c00d0 <end+0x7cb60d0>
    1904:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    1908:	13490b39 	beq	k0,t1,45f0 <sigill_handler-0x3fba10>
    190c:	00001802 	srl	v1,zero,0x0
    1910:	0300340f 	0x300340f
    1914:	3b0b3a08 	xori	t3,t8,0x3a08
    1918:	490b390b 	bc2tl	$cc2,fd48 <sigill_handler-0x3f02b8>
    191c:	00180213 	0x180213
    1920:	00341000 	0x341000
    1924:	0b3a0e03 	j	ce8380c <end+0xca7980c>
    1928:	0b39053b 	j	ce414ec <end+0xca374ec>
    192c:	18021349 	0x18021349
    1930:	34110000 	li	s1,0x0
    1934:	3a080300 	xori	t0,s0,0x300
    1938:	39053b0b 	xori	a1,t0,0x3b0b
    193c:	0213490b 	0x213490b
    1940:	12000018 	beqz	s0,19a4 <sigill_handler-0x3fe65c>
    1944:	0111010b 	0x111010b
    1948:	13010612 	beq	t8,at,3194 <sigill_handler-0x3fce6c>
    194c:	0b130000 	j	c4c0000 <end+0xc0b6000>
    1950:	12011101 	beq	s0,at,5d58 <sigill_handler-0x3fa2a8>
    1954:	14000006 	bnez	zero,1970 <sigill_handler-0x3fe690>
    1958:	13490101 	beq	k0,t1,1d60 <sigill_handler-0x3fe2a0>
    195c:	00001301 	0x1301
    1960:	49002115 	bc2f	9db8 <sigill_handler-0x3f6248>
    1964:	00182f13 	0x182f13
    1968:	012e1600 	0x12e1600
    196c:	0e03193f 	jal	80c64fc <end+0x7cbc4fc>
    1970:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    1974:	19270b39 	0x19270b39
    1978:	06120111 	bltzall	s0,1dc0 <sigill_handler-0x3fe240>
    197c:	42961840 	c0	0x961840
    1980:	00130119 	0x130119
    1984:	010b1700 	0x10b1700
    1988:	00001755 	0x1755
    198c:	01110100 	0x1110100
    1990:	0b130e25 	j	c4c3894 <end+0xc0b9894>
    1994:	0e1b0e03 	jal	86c380c <end+0x82b980c>
    1998:	06120111 	bltzall	s0,1de0 <sigill_handler-0x3fe220>
    199c:	00001710 	0x1710
    19a0:	0b002402 	j	c009008 <end+0xbbff008>
    19a4:	030b3e0b 	0x30b3e0b
    19a8:	03000008 	jr	t8
    19ac:	0e030016 	jal	80c0058 <end+0x7cb6058>
    19b0:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    19b4:	13490b39 	beq	k0,t1,469c <sigill_handler-0x3fb964>
    19b8:	24040000 	li	a0,0
    19bc:	3e0b0b00 	0x3e0b0b00
    19c0:	000e030b 	0xe030b
    19c4:	012e0500 	0x12e0500
    19c8:	0e03193f 	jal	80c64fc <end+0x7cbc4fc>
    19cc:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    19d0:	19270b39 	0x19270b39
    19d4:	01111349 	0x1111349
    19d8:	18400612 	blez	v0,3224 <sigill_handler-0x3fcddc>
    19dc:	01194297 	0x1194297
    19e0:	06000013 	bltz	s0,1a30 <sigill_handler-0x3fe5d0>
    19e4:	08030005 	j	c0014 <sigill_handler-0x33ffec>
    19e8:	0b3b0b3a 	j	cec2ce8 <end+0xcab8ce8>
    19ec:	13490b39 	beq	k0,t1,46d4 <sigill_handler-0x3fb92c>
    19f0:	00001802 	srl	v1,zero,0x0
    19f4:	0b000f07 	j	c003c1c <end+0xbbf9c1c>
    19f8:	0013490b 	0x13490b
    19fc:	00260800 	0x260800
    1a00:	00001349 	0x1349
    1a04:	03003409 	jalr.hb	a2,t8
    1a08:	3b0b3a08 	xori	t3,t8,0x3a08
    1a0c:	490b390b 	bc2tl	$cc2,fe3c <sigill_handler-0x3f01c4>
    1a10:	00180213 	0x180213
    1a14:	00340a00 	0x340a00
    1a18:	0b3a0e03 	j	ce8380c <end+0xca7980c>
    1a1c:	0b390b3b 	j	ce42cec <end+0xca38cec>
    1a20:	18021349 	0x18021349
    1a24:	0f0b0000 	jal	c2c0000 <end+0xbeb6000>
    1a28:	000b0b00 	sll	at,t3,0xc
    1a2c:	00260c00 	0x260c00
    1a30:	地址 0x0000000000001a30 越界。


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	0x1c
   4:	00000002 	srl	zero,zero,0x0
   8:	00040000 	sll	zero,a0,0x0
   c:	00000000 	nop
  10:	00400000 	0x400000
  14:	000002c4 	0x2c4
	...
  20:	0000001c 	0x1c
  24:	018e0002 	0x18e0002
  28:	00040000 	sll	zero,a0,0x0
  2c:	00000000 	nop
  30:	004002d0 	0x4002d0
  34:	00000010 	mfhi	zero
	...
  40:	0000001c 	0x1c
  44:	01b40002 	0x1b40002
  48:	00040000 	sll	zero,a0,0x0
  4c:	00000000 	nop
  50:	004002e0 	0x4002e0
  54:	0000000c 	syscall
	...
  60:	0000001c 	0x1c
  64:	01da0002 	0x1da0002
  68:	00040000 	sll	zero,a0,0x0
  6c:	00000000 	nop
  70:	004002f0 	tge	v0,zero,0xb
  74:	0000034c 	syscall	0xd
	...
  80:	0000001c 	0x1c
  84:	04720002 	bltzall	v1,90 <sigill_handler-0x3fff70>
  88:	00040000 	sll	zero,a0,0x0
  8c:	00000000 	nop
  90:	00400640 	0x400640
  94:	0000046c 	0x46c
	...
  a0:	0000001c 	0x1c
  a4:	0abb0002 	j	aec0008 <end+0xaab6008>
  a8:	00040000 	sll	zero,a0,0x0
  ac:	00000000 	nop
  b0:	00400ab0 	tge	v0,zero,0x2a
  b4:	00000790 	0x790
	...
  c0:	0000001c 	0x1c
  c4:	11a70002 	beq	t5,a3,d0 <sigill_handler-0x3fff30>
  c8:	00040000 	sll	zero,a0,0x0
  cc:	00000000 	nop
  d0:	00401240 	0x401240
  d4:	000005f4 	teq	zero,zero,0x17
	...
  e0:	0000001c 	0x1c
  e4:	18d00002 	0x18d00002
  e8:	00040000 	sll	zero,a0,0x0
  ec:	00000000 	nop
  f0:	00401840 	0x401840
  f4:	00000164 	0x164
	...
 100:	0000001c 	0x1c
 104:	1caa0002 	0x1caa0002
 108:	00040000 	sll	zero,a0,0x0
 10c:	00000000 	nop
 110:	004019b0 	tge	v0,zero,0x66
 114:	00000be4 	0xbe4
	...
 120:	0000001c 	0x1c
 124:	27460002 	addiu	a2,k0,2
 128:	00040000 	sll	zero,a0,0x0
 12c:	00000000 	nop
 130:	004025a0 	0x4025a0
 134:	000000bc 	0xbc
	...
 140:	0000001c 	0x1c
 144:	28870002 	slti	a3,a0,2
 148:	00040000 	sll	zero,a0,0x0
 14c:	00000000 	nop
 150:	00402660 	0x402660
 154:	00000928 	0x928
	...
 160:	0000001c 	0x1c
 164:	2fcc0002 	sltiu	t4,s8,2
 168:	00040000 	sll	zero,a0,0x0
 16c:	00000000 	nop
 170:	00402f90 	0x402f90
 174:	00000400 	sll	zero,zero,0x10
	...
 180:	0000001c 	0x1c
 184:	36fa0002 	ori	k0,s7,0x2
 188:	00040000 	sll	zero,a0,0x0
 18c:	00000000 	nop
 190:	00403390 	0x403390
 194:	00000300 	sll	zero,zero,0xc
	...
 1a0:	0000001c 	0x1c
 1a4:	3ac70002 	xori	a3,s6,0x2
 1a8:	00040000 	sll	zero,a0,0x0
 1ac:	00000000 	nop
 1b0:	00403690 	0x403690
 1b4:	000001d4 	0x1d4
	...
 1c0:	0000001c 	0x1c
 1c4:	3ce20002 	0x3ce20002
 1c8:	00040000 	sll	zero,a0,0x0
 1cc:	00000000 	nop
 1d0:	00403870 	tge	v0,zero,0xe1
 1d4:	0000008c 	syscall	0x2
	...
 1e0:	0000001c 	0x1c
 1e4:	401f0002 	mfc0	ra,$0,2
 1e8:	00040000 	sll	zero,a0,0x0
 1ec:	00000000 	nop
 1f0:	00403900 	0x403900
 1f4:	000009f8 	0x9f8
	...
 200:	0000001c 	0x1c
 204:	49560002 	0x49560002
 208:	00040000 	sll	zero,a0,0x0
 20c:	00000000 	nop
 210:	00404300 	0x404300
 214:	00000668 	0x668
	...
 220:	0000001c 	0x1c
 224:	51370002 	beql	t1,s7,230 <sigill_handler-0x3ffdd0>
 228:	00040000 	sll	zero,a0,0x0
 22c:	00000000 	nop
 230:	00404970 	tge	v0,zero,0x125
 234:	00000354 	0x354
	...
 240:	0000001c 	0x1c
 244:	55660002 	bnel	t3,a2,250 <sigill_handler-0x3ffdb0>
 248:	00040000 	sll	zero,a0,0x0
 24c:	00000000 	nop
 250:	00404cd0 	0x404cd0
 254:	00000c70 	tge	zero,zero,0x31
	...
 260:	0000001c 	0x1c
 264:	596a0002 	0x596a0002
 268:	00040000 	sll	zero,a0,0x0
 26c:	00000000 	nop
 270:	00405940 	0x405940
 274:	0000049c 	0x49c
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000000c7 	0xc7
       4:	00420003 	0x420003
       8:	01010000 	0x1010000
       c:	000d0efb 	0xd0efb
      10:	01010101 	0x1010101
      14:	01000000 	0x1000000
      18:	2e010000 	sltiu	at,s0,0
      1c:	6e692f2e 	0x6e692f2e
      20:	64756c63 	0x64756c63
      24:	74000065 	jalx	194 <sigill_handler-0x3ffe6c>
      28:	73747365 	0x73747365
      2c:	6c696769 	0x6c696769
      30:	00632e6c 	0x632e6c
      34:	74000000 	jalx	0 <sigill_handler-0x400000>
      38:	73657079 	0x73657079
      3c:	0100682e 	0x100682e
      40:	69730000 	0x69730000
      44:	00682e67 	0x682e67
      48:	00000001 	movf	zero,zero,$fcc0
      4c:	05001e05 	bltz	t0,7864 <sigill_handler-0x3f879c>
      50:	40000002 	mfc0	zero,$0,2
      54:	05051700 	0x5051700
      58:	ad083d08 	sw	t0,15624(t0)
      5c:	08090583 	j	24160c <sigill_handler-0x1be9f4>
      60:	820705ad 	lb	a3,1453(s0)
      64:	02000e05 	0x2000e05
      68:	05820104 	bltzl	t4,47c <sigill_handler-0x3ffb84>
      6c:	af088301 	sw	t0,-31999(t8)
      70:	3d080505 	0x3d080505
      74:	0105ad08 	0x105ad08
      78:	af08ad08 	sw	t0,-21240(t8)
      7c:	3d080605 	0x3d080605
      80:	3d080505 	0x3d080505
      84:	0105ad08 	0x105ad08
      88:	0c05ad08 	jal	16b420 <sigill_handler-0x294be0>
      8c:	0605ae08 	0x605ae08
      90:	081305f3 	j	4c17cc <end+0xb77cc>
      94:	bb05053e 	swr	a1,1342(t8)
      98:	13053d08 	beq	t8,a1,f4bc <sigill_handler-0x3f0b44>
      9c:	05057608 	0x5057608
      a0:	053d08bb 	0x53d08bb
      a4:	05760813 	0x5760813
      a8:	3d08bb05 	0x3d08bb05
      ac:	76081105 	jalx	8204414 <end+0x7dfa414>
      b0:	05bb0805 	0x5bb0805
      b4:	09058207 	j	416081c <end+0x3d5681c>
      b8:	f3f3f383 	0xf3f3f383
      bc:	bc840505 	cache	0x4,1285(a0)
      c0:	05f30c05 	bgezall	t7,30d8 <sigill_handler-0x3fcf28>
      c4:	18024b01 	0x18024b01
      c8:	37010100 	ori	at,t8,0x100
      cc:	03000000 	0x3000000
      d0:	00002200 	sll	a0,zero,0x8
      d4:	fb010100 	sdc2	$1,256(t8)
      d8:	01000d0e 	0x1000d0e
      dc:	00010101 	0x10101
      e0:	00010000 	sll	zero,at,0x0
      e4:	696c0100 	0x696c0100
      e8:	65000062 	0x65000062
      ec:	7972746e 	0x7972746e
      f0:	0100532e 	0x100532e
      f4:	00000000 	nop
      f8:	02d00205 	0x2d00205
      fc:	4b160040 	c2	0x1160040
     100:	0008024b 	0x8024b
     104:	003d0101 	0x3d0101
     108:	00030000 	sll	zero,v1,0x0
     10c:	00000029 	0x29
     110:	0efb0101 	jal	bec0404 <end+0xbab6404>
     114:	0101000d 	break	0x101
     118:	00000101 	0x101
     11c:	00000100 	sll	zero,zero,0x4
     120:	62696c01 	0x62696c01
     124:	79730000 	0x79730000
     128:	6c616373 	0x6c616373
     12c:	72775f6c 	0x72775f6c
     130:	532e7061 	beql	t9,t6,1c2b8 <sigill_handler-0x3e3d48>
     134:	00000100 	sll	zero,zero,0x4
     138:	02050000 	0x2050000
     13c:	004002e0 	0x4002e0
     140:	08024b18 	j	92c60 <sigill_handler-0x36d3a0>
     144:	16010100 	bne	s0,at,548 <sigill_handler-0x3ffab8>
     148:	03000001 	movf	zero,t8,$fcc0
     14c:	00006800 	sll	t5,zero,0x0
     150:	fb010100 	sdc2	$1,256(t8)
     154:	01000d0e 	0x1000d0e
     158:	00010101 	0x10101
     15c:	00010000 	sll	zero,at,0x0
     160:	696c0100 	0x696c0100
     164:	752f0062 	jalx	4bc0188 <end+0x47b6188>
     168:	6c2f7273 	0x6c2f7273
     16c:	672f6269 	0x672f6269
     170:	632d6363 	0x632d6363
     174:	73736f72 	0x73736f72
     178:	70696d2f 	0x70696d2f
     17c:	696c2d73 	0x696c2d73
     180:	2d78756e 	sltiu	t8,t3,30062
     184:	2f756e67 	sltiu	s5,k1,28263
     188:	692f3031 	0x692f3031
     18c:	756c636e 	jalx	5b18db8 <end+0x570edb8>
     190:	00006564 	0x6564
     194:	75626564 	jalx	5899590 <end+0x548f590>
     198:	632e6667 	0x632e6667
     19c:	00000100 	sll	zero,zero,0x4
     1a0:	64647473 	0x64647473
     1a4:	682e6665 	0x682e6665
     1a8:	00000200 	sll	zero,zero,0x8
     1ac:	61647473 	0x61647473
     1b0:	682e6772 	0x682e6772
     1b4:	00000200 	sll	zero,zero,0x8
     1b8:	00300500 	0x300500
     1bc:	02f00205 	0x2f00205
     1c0:	0a030040 	j	80c0100 <end+0x7cb6100>
     1c4:	08090501 	j	241404 <sigill_handler-0x1bebfc>
     1c8:	8205053d 	lb	a1,1341(s0)
     1cc:	05862105 	0x5862105
     1d0:	05054a0b 	0x5054a0b
     1d4:	0305ac08 	0x305ac08
     1d8:	080b05bb 	j	2c16ec <sigill_handler-0x13e914>
     1dc:	030305e6 	0x30305e6
     1e0:	0105f27a 	0x105f27a
     1e4:	083f0551 	j	fc1544 <end+0xbb7544>
     1e8:	08140576 	j	5015d8 <end+0xf75d8>
     1ec:	840805ad 	lh	t0,1453(zero)
     1f0:	05831b05 	bgezl	t4,6e08 <sigill_handler-0x3f91f8>
     1f4:	05bb820a 	0x5bb820a
     1f8:	03054a18 	0x3054a18
     1fc:	08050582 	j	141608 <sigill_handler-0x2be9f8>
     200:	0c05f375 	jal	17cdd4 <sigill_handler-0x28322c>
     204:	bb0305f3 	swr	v1,1523(t8)
     208:	7a030c05 	0x7a030c05
     20c:	821205ba 	lb	s2,1466(s0)
     210:	05820805 	bltzl	t4,2228 <sigill_handler-0x3fddd8>
     214:	1705c209 	bne	t8,a1,ffff0a3c <end+0xffbe6a3c>
     218:	8202054a 	lb	v0,1354(s0)
     21c:	75080b05 	jalx	4202c14 <end+0x3df8c14>
     220:	75080105 	jalx	4200414 <end+0x3df6414>
     224:	ae083205 	sw	t0,12805(s0)
     228:	76080a05 	jalx	8202814 <end+0x7df8814>
     22c:	084b0205 	j	12c0814 <end+0xeb6814>
     230:	f30105e5 	0xf30105e5
     234:	ae082305 	sw	t0,8965(s0)
     238:	e6080205 	swc1	$f8,517(s0)
     23c:	08010583 	j	4160c <sigill_handler-0x3be9f4>
     240:	0844053e 	j	11014f8 <end+0xcf74f8>
     244:	080205ae 	j	816b8 <sigill_handler-0x37e948>
     248:	837608e5 	lb	s6,2277(k1)
     24c:	05f33e08 	bgezall	t7,fa70 <sigill_handler-0x3f0590>
     250:	02058543 	0x2058543
     254:	7608e508 	jalx	8239420 <end+0x7e2f420>
     258:	f33e0883 	0xf33e0883
     25c:	01001002 	0x1001002
     260:	0001a201 	0x1a201
     264:	6e000300 	0x6e000300
     268:	01000000 	0x1000000
     26c:	0d0efb01 	jal	43bec04 <end+0x3fb4c04>
     270:	01010100 	0x1010100
     274:	00000001 	movf	zero,zero,$fcc0
     278:	01000001 	movf	zero,t0,$fcc0
     27c:	0062696c 	0x62696c
     280:	692f2e2e 	0x692f2e2e
     284:	756c636e 	jalx	5b18db8 <end+0x570edb8>
     288:	69006564 	0x69006564
     28c:	756c636e 	jalx	5b18db8 <end+0x570edb8>
     290:	00006564 	0x6564
     294:	6f62696c 	0x6f62696c
     298:	00632e73 	tltu	v1,v1,0xb9
     29c:	74000001 	jalx	4 <sigill_handler-0x3ffffc>
     2a0:	73657079 	0x73657079
     2a4:	0200682e 	0x200682e
     2a8:	72740000 	madd	s3,s4
     2ac:	682e7061 	0x682e7061
     2b0:	00000200 	sll	zero,zero,0x8
     2b4:	2e676973 	sltiu	a3,s3,26995
     2b8:	00020068 	0x20068
     2bc:	766e6500 	jalx	9b99400 <end+0x978f400>
     2c0:	0200682e 	0x200682e
     2c4:	6d6d0000 	0x6d6d0000
     2c8:	00682e75 	0x682e75
     2cc:	6c000002 	0x6c000002
     2d0:	682e6269 	0x682e6269
     2d4:	00000300 	sll	zero,zero,0xc
     2d8:	00110500 	sll	zero,s1,0x14
     2dc:	06400205 	bltz	s2,af4 <sigill_handler-0x3ff50c>
     2e0:	05170040 	0x5170040
     2e4:	bb85f502 	swr	a1,-2814(gp)
     2e8:	b2082505 	0xb2082505
     2ec:	76080e05 	jalx	8203814 <end+0x7df9814>
     2f0:	05ba0d05 	0x5ba0d05
     2f4:	053c0808 	0x53c0808
     2f8:	05058206 	0x5058206
     2fc:	84020584 	lh	v0,1412(zero)
     300:	855405f5 	lh	s4,1525(t2)
     304:	ad080c05 	sw	t0,3077(t0)
     308:	3d080105 	0x3d080105
     30c:	76081f05 	jalx	8207c14 <end+0x7dfdc14>
     310:	75080c05 	jalx	4203014 <end+0x3df9014>
     314:	05f30105 	bgezall	t7,72c <sigill_handler-0x3ff8d4>
     318:	05770821 	0x5770821
     31c:	0c05f310 	jal	17cc40 <sigill_handler-0x2833c0>
     320:	4b010583 	c2	0x1010583
     324:	3f082005 	0x3f082005
     328:	05f31005 	bgezall	t7,4340 <sigill_handler-0x3fbcc0>
     32c:	0105bb0c 	syscall	0x416ec
     330:	082c054b 	j	b0152c <end+0x6f752c>
     334:	0807053f 	j	1c14fc <sigill_handler-0x23eb04>
     338:	001a053d 	0x1a053d
     33c:	ba010402 	swr	at,1026(s0)
     340:	bcf31005 	cache	0x13,4101(a3)
     344:	05822205 	bltzl	t4,8b5c <sigill_handler-0x3f74a4>
     348:	10058216 	beq	zero,a1,fffe0ba4 <end+0xffbd6ba4>
     34c:	bb0c0582 	swr	t4,1410(t8)
     350:	054b0105 	tltiu	t2,261
     354:	053f082c 	0x53f082c
     358:	053d0807 	0x53d0807
     35c:	0402001a 	bltzl	zero,3c8 <sigill_handler-0x3ffc38>
     360:	1005ba01 	beq	zero,a1,fffeeb68 <end+0xffbe4b68>
     364:	2305bcf3 	addi	a1,t8,-17165
     368:	82170582 	lb	s7,1410(s0)
     36c:	05821305 	bltzl	t4,4f84 <sigill_handler-0x3fb07c>
     370:	0c054a10 	jal	152840 <sigill_handler-0x2ad7c0>
     374:	4b0105bb 	c2	0x10105bb
     378:	3f083405 	0x3f083405
     37c:	3d080705 	0x3d080705
     380:	02001a05 	0x2001a05
     384:	05ba0104 	0x5ba0104
     388:	0d05f310 	jal	417cc40 <end+0x3d72c40>
     38c:	822405bc 	lb	a0,1468(s1)
     390:	05821805 	bltzl	t4,63a8 <sigill_handler-0x3f9c58>
     394:	07058213 	0x7058213
     398:	8310054a 	lb	s0,1354(t8)
     39c:	05bc0c05 	0x5bc0c05
     3a0:	29054b01 	slti	a1,t0,19201
     3a4:	0d053f08 	jal	414fc20 <end+0x3d45c20>
     3a8:	820705f3 	lb	a3,1523(s0)
     3ac:	05831005 	bgezl	t4,43c4 <sigill_handler-0x3fbc3c>
     3b0:	0105bc0c 	syscall	0x416f0
     3b4:	0850054b 	j	140152c <end+0xff752c>
     3b8:	0819053f 	j	6414fc <end+0x2374fc>
     3bc:	82280575 	lb	t0,1397(s1)
     3c0:	05821f05 	bltzl	t4,7fd8 <sigill_handler-0x3f8028>
     3c4:	0c054a10 	jal	152840 <sigill_handler-0x2ad7c0>
     3c8:	4b010583 	c2	0x1010583
     3cc:	3f084f05 	0x3f084f05
     3d0:	75081905 	jalx	4206414 <end+0x3dfc414>
     3d4:	05822805 	bltzl	t4,a3ec <sigill_handler-0x3f5c14>
     3d8:	1005821f 	beq	zero,a1,fffe0c58 <end+0xffbd6c58>
     3dc:	830c054a 	lb	t4,1354(t8)
     3e0:	054b0105 	tltiu	t2,261
     3e4:	05410846 	bgez	t2,2500 <sigill_handler-0x3fdb00>
     3e8:	05ad080c 	0x5ad080c
     3ec:	053d0801 	0x53d0801
     3f0:	05770820 	0x5770820
     3f4:	2605f315 	addiu	a1,s0,-3307
     3f8:	4a100582 	c2	0x100582
     3fc:	05830c05 	bgezl	t4,3414 <sigill_handler-0x3fcbec>
     400:	14024b01 	bne	zero,v0,13008 <sigill_handler-0x3ecff8>
     404:	5e010100 	0x5e010100
     408:	03000002 	0x3000002
     40c:	00007a00 	sll	t7,zero,0x8
     410:	fb010100 	sdc2	$1,256(t8)
     414:	01000d0e 	0x1000d0e
     418:	00010101 	0x10101
     41c:	00010000 	sll	zero,at,0x0
     420:	696c0100 	0x696c0100
     424:	6e690062 	0x6e690062
     428:	64756c63 	0x64756c63
     42c:	2e2e0065 	sltiu	t6,s1,101
     430:	636e692f 	0x636e692f
     434:	6564756c 	0x6564756c
     438:	6f660000 	0x6f660000
     43c:	632e6b72 	0x632e6b72
     440:	00000100 	sll	zero,zero,0x4
     444:	2e62696c 	sltiu	v0,s3,26988
     448:	00020068 	0x20068
     44c:	70797400 	0x70797400
     450:	682e7365 	0x682e7365
     454:	00000300 	sll	zero,zero,0xc
     458:	2e756d6d 	sltiu	s5,s3,28013
     45c:	00030068 	0x30068
     460:	61727400 	0x61727400
     464:	00682e70 	tge	v1,t0,0xb9
     468:	73000003 	0x73000003
     46c:	682e6769 	0x682e6769
     470:	00000300 	sll	zero,zero,0xc
     474:	2e766e65 	sltiu	s6,s3,28261
     478:	00030068 	0x30068
     47c:	73797300 	0x73797300
     480:	6c6c6163 	0x6c6c6163
     484:	0300682e 	0x300682e
     488:	05000000 	bltz	t0,48c <sigill_handler-0x3ffb74>
     48c:	02050047 	0x2050047
     490:	00400ab0 	tge	v0,zero,0x2a
     494:	05010f03 	bgez	t0,40a4 <sigill_handler-0x3fbf5c>
     498:	053d0808 	0x53d0808
     49c:	0705c109 	0x705c109
     4a0:	0c057408 	jal	15d020 <sigill_handler-0x2a2fe0>
     4a4:	82040583 	lb	a0,1411(s0)
     4a8:	05830305 	bgezl	t4,10c0 <sigill_handler-0x3fef40>
     4ac:	f3e80807 	0xf3e80807
     4b0:	05bd0205 	0x5bd0205
     4b4:	1628020f 	bne	s1,t0,cf4 <sigill_handler-0x3ff30c>
     4b8:	08ba0205 	j	2e80814 <end+0x2a76814>
     4bc:	15440277 	bne	t2,a0,e9c <sigill_handler-0x3ff164>
     4c0:	24020a05 	li	v0,2565
     4c4:	08020514 	j	81450 <sigill_handler-0x37ebb0>
     4c8:	0873033d 	j	1cc0cf4 <end+0x18b6cf4>
     4cc:	05bdc1e4 	0x5bdc1e4
     4d0:	2d054e01 	sltiu	a1,t0,19969
     4d4:	74081703 	jalx	205c0c <sigill_handler-0x1fa3f4>
     4d8:	7b081105 	0x7b081105
     4dc:	05820705 	bltzl	t4,20f4 <sigill_handler-0x3fdf0c>
     4e0:	0705bb09 	0x705bb09
     4e4:	880b0582 	lwl	t3,1410(zero)
     4e8:	05820405 	bltzl	t4,1500 <sigill_handler-0x3feb00>
     4ec:	0402001e 	bltzl	zero,568 <sigill_handler-0x3ffa98>
     4f0:	14058201 	bne	zero,a1,fffe0cf8 <end+0xffbd6cf8>
     4f4:	01040200 	0x1040200
     4f8:	00330582 	ror	zero,s3,0x16
     4fc:	82020402 	lb	v0,1026(s0)
     500:	02002905 	0x2002905
     504:	05820204 	bltzl	t4,d18 <sigill_handler-0x3ff2e8>
     508:	05f38308 	bgezall	t7,fffe112c <end+0xffbd712c>
     50c:	0305bb1b 	0x305bb1b
     510:	4a350582 	c2	0x350582
     514:	05820305 	bltzl	t4,112c <sigill_handler-0x3feed4>
     518:	1324021b 	beq	t9,a0,d88 <sigill_handler-0x3ff278>
     51c:	05820305 	bltzl	t4,1134 <sigill_handler-0x3feecc>
     520:	03054a31 	tgeu	t8,a1,0x128
     524:	021b0582 	0x21b0582
     528:	0305152c 	0x305152c
     52c:	4a350582 	c2	0x350582
     530:	05820305 	bltzl	t4,1148 <sigill_handler-0x3feeb8>
     534:	14240201 	bne	at,a0,d3c <sigill_handler-0x3ff2c4>
     538:	e6087705 	swc1	$f8,30469(s0)
     53c:	e5082805 	swc1	$f8,10245(t0)
     540:	05820205 	bltzl	t4,d58 <sigill_handler-0x3ff2a8>
     544:	16240225 	bne	s1,a0,ddc <sigill_handler-0x3ff224>
     548:	05821a05 	bltzl	t4,6d60 <sigill_handler-0x3f92a0>
     54c:	0e05ba15 	jal	816e854 <end+0x7d64854>
     550:	4b040582 	c2	0x1040582
     554:	05bb0305 	0x5bb0305
     558:	132c0209 	beq	t9,t4,d80 <sigill_handler-0x3ff280>
     55c:	08830305 	j	20c0c14 <end+0x1cb6c14>
     560:	053e08e5 	0x53e08e5
     564:	14300209 	bne	at,s0,d8c <sigill_handler-0x3ff274>
     568:	02001c05 	0x2001c05
     56c:	05f20104 	bltzall	t7,980 <sigill_handler-0x3ff680>
     570:	04020030 	bltzl	zero,634 <sigill_handler-0x3ff9cc>
     574:	4405f202 	0x4405f202
     578:	03040200 	0x3040200
     57c:	f30905f2 	0xf30905f2
     580:	05850a05 	0x5850a05
     584:	0f05f303 	jal	c17cc0c <end+0xbd72c0c>
     588:	0605e508 	0x605e508
     58c:	02053e08 	0x2053e08
     590:	03053d08 	0x3053d08
     594:	e4087003 	swc1	$f8,28675(zero)
     598:	ba0a03bc 	swr	t2,956(s0)
     59c:	054f0105 	0x54f0105
     5a0:	05760818 	0x5760818
     5a4:	0105f309 	0x105f309
     5a8:	10053d08 	beq	zero,a1,f9cc <sigill_handler-0x3f0634>
     5ac:	74080d03 	jalx	20340c <sigill_handler-0x1fcbf4>
     5b0:	05f70905 	0x5f70905
     5b4:	0505ba22 	0x505ba22
     5b8:	83030582 	lb	v1,1410(t8)
     5bc:	01040200 	0x1040200
     5c0:	12240206 	beq	s1,a0,ddc <sigill_handler-0x3ff224>
     5c4:	bd060905 	cache	0x6,2309(t0)
     5c8:	05ba1e05 	0x5ba1e05
     5cc:	03058205 	0x3058205
     5d0:	04020083 	bltzl	zero,7e0 <sigill_handler-0x3ff820>
     5d4:	24020601 	li	v0,1537
     5d8:	05020412 	bltzl	t0,1624 <sigill_handler-0x3fe9dc>
     5dc:	a9030609 	swl	v1,1545(t0)
     5e0:	0104ba7f 	0x104ba7f
     5e4:	dd030805 	0xdd030805
     5e8:	05e40800 	0x5e40800
     5ec:	10054b05 	beq	zero,a1,13204 <sigill_handler-0x3ecdfc>
     5f0:	ba0e05bb 	swr	t6,1467(s0)
     5f4:	ac080705 	sw	t0,1797(zero)
     5f8:	05830a05 	bgezl	t4,2e10 <sigill_handler-0x3fd1f0>
     5fc:	0205bf0d 	break	0x205,0x2fc
     600:	830c054a 	lb	t4,1354(t8)
     604:	05820b05 	bltzl	t4,321c <sigill_handler-0x3fcde4>
     608:	053c0815 	0x53c0815
     60c:	26054a06 	addiu	a1,s0,18950
     610:	01040200 	0x1040200
     614:	00250582 	ror	zero,a1,0x16
     618:	82010402 	lb	at,1026(s0)
     61c:	02002f05 	0x2002f05
     620:	05f20104 	bltzall	t7,a34 <sigill_handler-0x3ff5cc>
     624:	0402001e 	bltzl	zero,6a0 <sigill_handler-0x3ff960>
     628:	19054a01 	0x19054a01
     62c:	820a0583 	lb	t2,1411(s0)
     630:	02002805 	0x2002805
     634:	05f00204 	bltzal	t7,e48 <sigill_handler-0x3ff1b8>
     638:	04020002 	bltzl	zero,644 <sigill_handler-0x3ff9bc>
     63c:	0c03ba01 	jal	ee804 <sigill_handler-0x3117fc>
     640:	02007408 	0x2007408
     644:	02060104 	0x2060104
     648:	bb061224 	swr	a2,4644(t8)
     64c:	01040200 	0x1040200
     650:	12240206 	beq	s1,a0,e6c <sigill_handler-0x3ff194>
     654:	0200bb06 	0x200bb06
     658:	08060104 	j	180410 <sigill_handler-0x27fbf0>
     65c:	060905e4 	tgeiu	s0,1508
     660:	4b0105bb 	c2	0x10105bb
     664:	01001802 	0x1001802
     668:	00016f01 	0x16f01
     66c:	5e000300 	bgtzl	s0,1270 <sigill_handler-0x3fed90>
     670:	01000000 	0x1000000
     674:	0d0efb01 	jal	43bec04 <end+0x3fb4c04>
     678:	01010100 	0x1010100
     67c:	00000001 	movf	zero,zero,$fcc0
     680:	01000001 	movf	zero,t0,$fcc0
     684:	0062696c 	0x62696c
     688:	692f2e2e 	0x692f2e2e
     68c:	756c636e 	jalx	5b18db8 <end+0x570edb8>
     690:	00006564 	0x6564
     694:	63737973 	0x63737973
     698:	5f6c6c61 	0x5f6c6c61
     69c:	2e62696c 	sltiu	v0,s3,26988
     6a0:	00010063 	0x10063
     6a4:	61727400 	0x61727400
     6a8:	00682e70 	tge	v1,t0,0xb9
     6ac:	73000002 	mul	zero,t8,zero
     6b0:	682e6769 	0x682e6769
     6b4:	00000200 	sll	zero,zero,0x8
     6b8:	65707974 	0x65707974
     6bc:	00682e73 	tltu	v1,t0,0xb9
     6c0:	73000002 	mul	zero,t8,zero
     6c4:	61637379 	0x61637379
     6c8:	682e6c6c 	0x682e6c6c
     6cc:	00000200 	sll	zero,zero,0x8
     6d0:	001e0500 	sll	zero,s8,0x14
     6d4:	12400205 	beqz	s2,eec <sigill_handler-0x3ff114>
     6d8:	05180040 	0x5180040
     6dc:	053d0802 	0x53d0802
     6e0:	3405f301 	li	a1,0xf301
     6e4:	0905ae08 	j	416b820 <end+0x3d61820>
     6e8:	01057508 	0x1057508
     6ec:	1e053d08 	0x1e053d08
     6f0:	09057608 	j	415d820 <end+0x3d53820>
     6f4:	bb0105f3 	swr	at,1523(t8)
     6f8:	76081a05 	jalx	8206814 <end+0x7dfc814>
     6fc:	05f30205 	bgezall	t7,f14 <sigill_handler-0x3ff0ec>
     700:	2605bb01 	addiu	a1,s0,-17663
     704:	0905ae08 	j	416b820 <end+0x3d61820>
     708:	01053d08 	0x1053d08
     70c:	084e05f3 	j	13817cc <end+0xf777cc>
     710:	08090576 	j	2415d8 <sigill_handler-0x1bea28>
     714:	08010575 	j	415d4 <sigill_handler-0x3bea2c>
     718:	083a053d 	j	e814f4 <end+0xa774f4>
     71c:	08090576 	j	2415d8 <sigill_handler-0x1bea28>
     720:	080105ad 	j	416b4 <sigill_handler-0x3be94c>
     724:	08550575 	j	15415d4 <end+0x11375d4>
     728:	08090576 	j	2415d8 <sigill_handler-0x1bea28>
     72c:	020105e5 	0x20105e5
     730:	2e051328 	sltiu	a1,s0,4904
     734:	09057608 	j	415d820 <end+0x3d53820>
     738:	01057508 	0x1057508
     73c:	37053d08 	ori	a1,t8,0x3d08
     740:	09057608 	j	415d820 <end+0x3d53820>
     744:	01057508 	0x1057508
     748:	3e053d08 	0x3e053d08
     74c:	09057608 	j	415d820 <end+0x3d53820>
     750:	01057508 	0x1057508
     754:	25053d08 	addiu	a1,t0,15624
     758:	0a057608 	j	815d820 <end+0x7d53820>
     75c:	02053d08 	0x2053d08
     760:	53053d08 	beql	t8,a1,fb84 <sigill_handler-0x3f047c>
     764:	0905e708 	j	4179c20 <end+0x3d6fc20>
     768:	0105e508 	0x105e508
     76c:	2305e508 	addi	a1,t8,-6904
     770:	09057608 	j	415d820 <end+0x3d53820>
     774:	01053d08 	0x1053d08
     778:	081505f3 	j	5417cc <end+0x1377cc>
     77c:	f3090576 	0xf3090576
     780:	05bb0105 	0x5bb0105
     784:	05760838 	0x5760838
     788:	05ae0809 	tnei	t5,2057
     78c:	05750801 	0x5750801
     790:	05760837 	0x5760837
     794:	05ae0809 	tnei	t5,2057
     798:	05750801 	0x5750801
     79c:	0576084f 	0x576084f
     7a0:	05ad0809 	0x5ad0809
     7a4:	05750801 	0x5750801
     7a8:	0576085c 	0x576085c
     7ac:	05ad0809 	0x5ad0809
     7b0:	05750801 	0x5750801
     7b4:	05760827 	0x5760827
     7b8:	05750809 	0x5750809
     7bc:	053d0801 	0x53d0801
     7c0:	0576086e 	0x576086e
     7c4:	05750809 	0x5750809
     7c8:	053d0801 	0x53d0801
     7cc:	05760833 	0x5760833
     7d0:	05750809 	0x5750809
     7d4:	023d0801 	movt	at,s1,$fcc7
     7d8:	01010018 	mult	t0,at
     7dc:	000000c7 	0xc7
     7e0:	006c0003 	0x6c0003
     7e4:	01010000 	0x1010000
     7e8:	000d0efb 	0xd0efb
     7ec:	01010101 	0x1010101
     7f0:	01000000 	0x1000000
     7f4:	6c010000 	0x6c010000
     7f8:	2e006269 	sltiu	zero,s0,25193
     7fc:	6e692f2e 	0x6e692f2e
     800:	64756c63 	0x64756c63
     804:	6e690065 	0x6e690065
     808:	64756c63 	0x64756c63
     80c:	69000065 	0x69000065
     810:	632e6370 	0x632e6370
     814:	00000100 	sll	zero,zero,0x4
     818:	65707974 	0x65707974
     81c:	00682e73 	tltu	v1,t0,0xb9
     820:	74000002 	jalx	8 <sigill_handler-0x3ffff8>
     824:	2e706172 	sltiu	s0,s3,24946
     828:	00020068 	0x20068
     82c:	67697300 	0x67697300
     830:	0200682e 	0x200682e
     834:	6e650000 	0x6e650000
     838:	00682e76 	tne	v1,t0,0xb9
     83c:	6d000002 	0x6d000002
     840:	682e756d 	0x682e756d
     844:	00000200 	sll	zero,zero,0x8
     848:	2e62696c 	sltiu	v0,s3,26988
     84c:	00030068 	0x30068
     850:	45050000 	bc1t	$fcc1,854 <sigill_handler-0x3ff7ac>
     854:	40020500 	0x40020500
     858:	03004018 	0x3004018
     85c:	0805010b 	j	14042c <sigill_handler-0x2bfbd4>
     860:	0305e608 	0x305e608
     864:	810e0583 	lb	t6,1411(t0)
     868:	ac080805 	sw	t0,2053(zero)
     86c:	00f50205 	0xf50205
     870:	06010402 	bgez	s0,187c <sigill_handler-0x3fe784>
     874:	060105ba 	bgez	s0,1f60 <sigill_handler-0x3fe0a0>
     878:	05132402 	bgezall	t0,9884 <sigill_handler-0x3f677c>
     87c:	05b20837 	bltzall	t5,295c <sigill_handler-0x3fd6a4>
     880:	05ad080a 	0x5ad080a
     884:	0305f305 	0x305f305
     888:	080505bb 	j	1416ec <sigill_handler-0x2be914>
     88c:	bb0e05e7 	swr	t6,1511(t8)
     890:	05ba0905 	0x5ba0905
     894:	0e058505 	jal	8161414 <end+0x7d57414>
     898:	ba0905bb 	swr	t1,1467(s0)
     89c:	05850c05 	0x5850c05
     8a0:	1802bb01 	0x1802bb01
     8a4:	de010100 	0xde010100
     8a8:	03000003 	0x3000003
     8ac:	00007300 	sll	t6,zero,0xc
     8b0:	fb010100 	sdc2	$1,256(t8)
     8b4:	01000d0e 	0x1000d0e
     8b8:	00010101 	0x10101
     8bc:	00010000 	sll	zero,at,0x0
     8c0:	696c0100 	0x696c0100
     8c4:	2e2e0062 	sltiu	t6,s1,98
     8c8:	636e692f 	0x636e692f
     8cc:	6564756c 	0x6564756c
     8d0:	636e6900 	0x636e6900
     8d4:	6564756c 	0x6564756c
     8d8:	64660000 	0x64660000
     8dc:	0100632e 	0x100632e
     8e0:	79740000 	0x79740000
     8e4:	2e736570 	sltiu	s3,s3,25968
     8e8:	00020068 	0x20068
     8ec:	756d6d00 	jalx	5b5b400 <end+0x5751400>
     8f0:	0200682e 	0x200682e
     8f4:	72740000 	madd	s3,s4
     8f8:	682e7061 	0x682e7061
     8fc:	00000200 	sll	zero,zero,0x8
     900:	2e676973 	sltiu	a3,s3,26995
     904:	00020068 	0x20068
     908:	766e6500 	jalx	9b99400 <end+0x978f400>
     90c:	0200682e 	0x200682e
     910:	64660000 	0x64660000
     914:	0300682e 	0x300682e
     918:	696c0000 	0x696c0000
     91c:	00682e62 	0x682e62
     920:	00000003 	sra	zero,zero,0x0
     924:	05002e05 	bltz	t0,c13c <sigill_handler-0x3f3ec4>
     928:	4019b002 	mfc0	t9,$22,2
     92c:	010b0300 	0x10b0300
     930:	75080b05 	jalx	4202c14 <end+0x3df8c14>
     934:	054a0205 	tlti	t2,517
     938:	1005830d 	beq	zero,a1,fffe1570 <end+0xffbd7570>
     93c:	06057408 	0x6057408
     940:	bb11054a 	swr	s1,1354(t8)
     944:	74080905 	jalx	202414 <sigill_handler-0x1fdbec>
     948:	05830b05 	bgezl	t4,3560 <sigill_handler-0x3fcaa0>
     94c:	0402001e 	bltzl	zero,9c8 <sigill_handler-0x3ff638>
     950:	1805b702 	0x1805b702
     954:	01040200 	0x1040200
     958:	000205ba 	0x205ba
     95c:	08010402 	j	41008 <sigill_handler-0x3beff8>
     960:	88070574 	lwl	a3,1396(zero)
     964:	05832f05 	bgezl	t4,c57c <sigill_handler-0x3f3a84>
     968:	09058202 	j	4160808 <end+0x3d56808>
     96c:	0105ad08 	0x105ad08
     970:	031e054b 	0x31e054b
     974:	0574080c 	0x574080c
     978:	0205f60c 	syscall	0x817d8
     97c:	8308054a 	lb	t0,1354(t8)
     980:	05f20605 	bltzall	t7,2198 <sigill_handler-0x3fde68>
     984:	0b05840f 	j	c16103c <end+0xbd5703c>
     988:	08180582 	j	601608 <end+0x1f7608>
     98c:	4a06053c 	c2	0x6053c
     990:	05830a05 	bgezl	t4,31a8 <sigill_handler-0x3fce58>
     994:	0b054a08 	j	c152820 <end+0xbd48820>
     998:	bd0f0583 	cache	0xf,1411(t0)
     99c:	05820b05 	bltzl	t4,35b4 <sigill_handler-0x3fca4c>
     9a0:	0605f218 	0x605f218
     9a4:	830a054a 	lb	t2,1354(t8)
     9a8:	054a0805 	tlti	t2,2053
     9ac:	2705830b 	addiu	a1,t8,-31989
     9b0:	02040200 	0x2040200
     9b4:	05ba7603 	0x5ba7603
     9b8:	04020002 	bltzl	zero,9c4 <sigill_handler-0x3ff63c>
     9bc:	0905ba01 	j	416e804 <end+0x3d64804>
     9c0:	05f20e03 	bltzall	t7,41d0 <sigill_handler-0x3fbe30>
     9c4:	1e054b01 	0x1e054b01
     9c8:	02053e08 	0x2053e08
     9cc:	02003d08 	0x2003d08
     9d0:	08060104 	j	180410 <sigill_handler-0x27fbf0>
     9d4:	060105e4 	bgez	s0,2168 <sigill_handler-0x3fde98>
     9d8:	2a05e508 	slti	a1,s0,-6904
     9dc:	0505b408 	0x505b408
     9e0:	0a053f08 	j	814fc20 <end+0x7d45c20>
     9e4:	bd0705f3 	cache	0x7,1523(t0)
     9e8:	3c080505 	lui	t0,0x505
     9ec:	054c0e05 	teqi	t2,3589
     9f0:	1705820a 	bne	t8,a1,fffe121c <end+0xffbd721c>
     9f4:	4a0505f2 	c2	0x505f2
     9f8:	05830905 	bgezl	t4,2e10 <sigill_handler-0x3fd1f0>
     9fc:	0a054a07 	j	815281c <end+0x7d4881c>
     a00:	bd090583 	cache	0x9,1411(t0)
     a04:	054b0105 	tltiu	t2,261
     a08:	053e081e 	0x53e081e
     a0c:	053d0811 	0x53d0811
     a10:	053d0801 	0x53d0801
     a14:	0576081b 	0x576081b
     a18:	1405f30a 	bne	zero,a1,ffffd644 <end+0xffbf3644>
     a1c:	821f054a 	lb	ra,1354(s0)
     a20:	054b0105 	tltiu	t2,261
     a24:	f33e0814 	0xf33e0814
     a28:	3d080105 	0x3d080105
     a2c:	3e081605 	0x3e081605
     a30:	3e080e05 	0x3e080e05
     a34:	054d0b05 	0x54d0b05
     a38:	05740805 	0x5740805
     a3c:	0402003b 	bltzl	zero,b2c <sigill_handler-0x3ff4d4>
     a40:	2e05ba01 	sltiu	a1,s0,-17919
     a44:	01040200 	0x1040200
     a48:	00260582 	ror	zero,a2,0x16
     a4c:	08010402 	j	41008 <sigill_handler-0x3beff8>
     a50:	bb0a0574 	swr	t2,1396(t8)
     a54:	05bd0b05 	0x5bd0b05
     a58:	02054a07 	0x2054a07
     a5c:	09057508 	j	415d420 <end+0x3d53420>
     a60:	000105f3 	tltu	zero,at,0x17
     a64:	4b010402 	c2	0x1010402
     a68:	76081605 	jalx	8205814 <end+0x7dfb814>
     a6c:	05f50905 	0x5f50905
     a70:	03054a02 	0x3054a02
     a74:	03040200 	0x3040200
     a78:	001a0583 	sra	zero,k0,0x16
     a7c:	b9030402 	swr	v1,1026(t0)
     a80:	02000205 	0x2000205
     a84:	05ba0104 	0x5ba0104
     a88:	2505f501 	addiu	a1,t0,-2815
     a8c:	e4080e03 	swc1	$f8,3587(zero)
     a90:	7b080b05 	0x7b080b05
     a94:	74080505 	jalx	201414 <sigill_handler-0x1febec>
     a98:	05bb0a05 	0x5bb0a05
     a9c:	1705be02 	bne	t8,a1,ffff02a8 <end+0xffbe62a8>
     aa0:	080805bc 	j	2016f0 <sigill_handler-0x1fe910>
     aa4:	3d084c3c 	0x3d084c3c
     aa8:	05f50a05 	0x5f50a05
     aac:	05058209 	0x5058209
     ab0:	0a053c08 	j	814f020 <end+0x7d45020>
     ab4:	4a030583 	c2	0x30583
     ab8:	05830e05 	bgezl	t4,42d0 <sigill_handler-0x3fbd30>
     abc:	0805f20d 	j	17c834 <sigill_handler-0x2837cc>
     ac0:	840c05ba 	lh	t4,1466(zero)
     ac4:	05820705 	bltzl	t4,26dc <sigill_handler-0x3fd924>
     ac8:	0805840e 	j	161038 <sigill_handler-0x29efc8>
     acc:	05124002 	bltzall	t0,10ad8 <sigill_handler-0x3ef528>
     ad0:	0402001c 	bltzl	zero,b44 <sigill_handler-0x3ff4bc>
     ad4:	0305b502 	0x305b502
     ad8:	01040200 	0x1040200
     adc:	030b05ba 	0x30b05ba
     ae0:	053c080d 	0x53c080d
     ae4:	32054a33 	andi	a1,s0,0x4a33
     ae8:	ba3f0582 	swr	ra,1410(s1)
     aec:	054a0b05 	tlti	t2,2821
     af0:	12240205 	beq	s1,a0,1308 <sigill_handler-0x3fecf8>
     af4:	05bf0905 	0x5bf0905
     af8:	ba750306 	swr	s5,774(s3)
     afc:	05c20305 	bltzl	t6,1714 <sigill_handler-0x3fe8ec>
     b00:	02005102 	0x2005102
     b04:	08060104 	j	180410 <sigill_handler-0x27fbf0>
     b08:	060905e4 	tgeiu	s0,1508
     b0c:	0205e608 	0x205e608
     b10:	8303054a 	lb	v1,1354(t8)
     b14:	01040200 	0x1040200
     b18:	122c0206 	beq	s1,t4,1334 <sigill_handler-0x3feccc>
     b1c:	02001b05 	0x2001b05
     b20:	08060204 	j	180810 <sigill_handler-0x27f7f0>
     b24:	000205e3 	0x205e3
     b28:	ba010402 	swr	at,1026(s0)
     b2c:	40080905 	0x40080905
     b30:	02000105 	0x2000105
     b34:	054b0104 	tltiu	t2,260
     b38:	08090329 	j	240ca4 <sigill_handler-0x1bf35c>
     b3c:	08020574 	j	815d0 <sigill_handler-0x37ea30>
     b40:	040200b4 	bltzl	zero,e14 <sigill_handler-0x3ff1ec>
     b44:	24020601 	li	v0,1537
     b48:	00bb0612 	0xbb0612
     b4c:	06010402 	bgez	s0,1b58 <sigill_handler-0x3fe4a8>
     b50:	05122c02 	bltzall	t0,bb5c <sigill_handler-0x3f44a4>
     b54:	05be0609 	0x5be0609
     b58:	05058214 	0x5058214
     b5c:	bb0a054a 	swr	t2,1354(t8)
     b60:	05be0905 	0x5be0905
     b64:	22058206 	addi	a1,s0,-32250
     b68:	4a06054a 	c2	0x6054a
     b6c:	b2080405 	0xb2080405
     b70:	05bb1105 	0x5bb1105
     b74:	05760809 	0x5760809
     b78:	04020001 	bltzl	zero,b80 <sigill_handler-0x3ff480>
     b7c:	2a054b01 	slti	a1,s0,19201
     b80:	0b057608 	j	c15d820 <end+0xbd53820>
     b84:	0205af08 	0x205af08
     b88:	8307054a 	lb	a3,1354(t8)
     b8c:	30020605 	andi	v0,zero,0x605
     b90:	bb0b0514 	swr	t3,1300(t8)
     b94:	05bd0605 	0x5bd0605
     b98:	0402001d 	bltzl	zero,c10 <sigill_handler-0x3ff3f0>
     b9c:	ba790302 	swr	t9,770(s3)
     ba0:	02001405 	0x2001405
     ba4:	05f20104 	bltzall	t7,fb8 <sigill_handler-0x3ff048>
     ba8:	04020002 	bltzl	zero,bb4 <sigill_handler-0x3ff44c>
     bac:	04054a01 	0x4054a01
     bb0:	09057c08 	j	415f020 <end+0x3d55020>
     bb4:	4b01054e 	c2	0x101054e
     bb8:	76083005 	jalx	820c014 <end+0x7e02014>
     bbc:	b1080b05 	0xb1080b05
     bc0:	74080505 	jalx	201414 <sigill_handler-0x1febec>
     bc4:	02003b05 	0x2003b05
     bc8:	05ba0104 	0x5ba0104
     bcc:	0402002e 	bltzl	zero,c88 <sigill_handler-0x3ff378>
     bd0:	26058201 	addiu	a1,s0,-32255
     bd4:	01040200 	0x1040200
     bd8:	0a057408 	j	815d020 <end+0x7d53020>
     bdc:	bd0905bb 	cache	0x9,1467(t0)
     be0:	05821405 	bltzl	t4,5bf8 <sigill_handler-0x3fa408>
     be4:	0a054a05 	j	8152814 <end+0x7d48814>
     be8:	bd090583 	cache	0x9,1411(t0)
     bec:	05820605 	bltzl	t4,2404 <sigill_handler-0x3fdbfc>
     bf0:	06054a23 	0x6054a23
     bf4:	0805054a 	j	141528 <sigill_handler-0x2bead8>
     bf8:	bb1105ad 	swr	s1,1453(t8)
     bfc:	77080905 	jalx	c202414 <end+0xbdf8414>
     c00:	02000105 	0x2000105
     c04:	054b0104 	tltiu	t2,260
     c08:	05760823 	0x5760823
     c0c:	0578080b 	0x578080b
     c10:	05740805 	0x5740805
     c14:	0405bb0a 	0x405bb0a
     c18:	4a1005bd 	c2	0x1005bd
     c1c:	05830905 	bgezl	t4,3034 <sigill_handler-0x3fcfcc>
     c20:	04020001 	bltzl	zero,c28 <sigill_handler-0x3ff3d8>
     c24:	29054b01 	slti	a1,t0,19201
     c28:	0e057608 	jal	815d820 <end+0x7d53820>
     c2c:	0b057608 	j	c15d820 <end+0xbd53820>
     c30:	0805054d 	j	141534 <sigill_handler-0x2beacc>
     c34:	003b0574 	teq	at,k1,0x15
     c38:	ba010402 	swr	at,1026(s0)
     c3c:	02002e05 	0x2002e05
     c40:	05820104 	bltzl	t4,1054 <sigill_handler-0x3fefac>
     c44:	04020026 	bltzl	zero,ce0 <sigill_handler-0x3ff320>
     c48:	05740801 	0x5740801
     c4c:	1305bb0a 	beq	t8,a1,fffef878 <end+0xffbe5878>
     c50:	831005bd 	lb	s0,1469(t8)
     c54:	05831105 	bgezl	t4,506c <sigill_handler-0x3faf94>
     c58:	0e05830f 	jal	8160c3c <end+0x7d56c3c>
     c5c:	4a0a05bb 	c2	0xa05bb
     c60:	02000105 	0x2000105
     c64:	75080104 	jalx	4200410 <end+0x3df6410>
     c68:	76082f05 	jalx	820bc14 <end+0x7e01c14>
     c6c:	77080c05 	jalx	c203014 <end+0xbdf9014>
     c70:	3c080505 	lui	t0,0x505
     c74:	05bb0a05 	0x5bb0a05
     c78:	0205bd06 	0x205bd06
     c7c:	09053d08 	j	414f420 <end+0x3d45420>
     c80:	4b0105bb 	c2	0x10105bb
     c84:	01001802 	0x1001802
     c88:	00009301 	0x9301
     c8c:	4d000300 	bc3f	1890 <sigill_handler-0x3fe770>
     c90:	01000000 	0x1000000
     c94:	0d0efb01 	jal	43bec04 <end+0x3fb4c04>
     c98:	01010100 	0x1010100
     c9c:	00000001 	movf	zero,zero,$fcc0
     ca0:	01000001 	movf	zero,t0,$fcc0
     ca4:	0062696c 	0x62696c
     ca8:	692f2e2e 	0x692f2e2e
     cac:	756c636e 	jalx	5b18db8 <end+0x570edb8>
     cb0:	00006564 	0x6564
     cb4:	65676170 	0x65676170
     cb8:	2e666572 	sltiu	a2,s3,25970
     cbc:	00010063 	0x10063
     cc0:	70797400 	0x70797400
     cc4:	682e7365 	0x682e7365
     cc8:	00000200 	sll	zero,zero,0x8
     ccc:	2e756d6d 	sltiu	s5,s3,28013
     cd0:	00020068 	0x20068
     cd4:	616d7000 	0x616d7000
     cd8:	00682e70 	tge	v1,t0,0xb9
     cdc:	00000002 	srl	zero,zero,0x0
     ce0:	05001605 	bltz	t0,64f8 <sigill_handler-0x3f9b08>
     ce4:	4025a002 	0x4025a002
     ce8:	010d0300 	0x10d0300
     cec:	05f60c05 	0x5f60c05
     cf0:	1405820b 	bne	zero,a1,fffe1520 <end+0xffbd7520>
     cf4:	05053c08 	0x5053c08
     cf8:	830a054a 	lb	t2,1354(t8)
     cfc:	05be0c05 	0x5be0c05
     d00:	0605820b 	0x605820b
     d04:	840c05ba 	lh	t4,1466(zero)
     d08:	05820505 	bltzl	t4,2120 <sigill_handler-0x3fdee0>
     d0c:	0f05830a 	jal	c160c28 <end+0xbd56c28>
     d10:	820e05bd 	lb	t6,1469(s0)
     d14:	ac081805 	sw	t0,6149(zero)
     d18:	02830105 	0x2830105
     d1c:	01010014 	0x1010014
     d20:	00000310 	0x310
     d24:	00950003 	0x950003
     d28:	01010000 	0x1010000
     d2c:	000d0efb 	0xd0efb
     d30:	01010101 	0x1010101
     d34:	01000000 	0x1000000
     d38:	6c010000 	0x6c010000
     d3c:	69006269 	0x69006269
     d40:	756c636e 	jalx	5b18db8 <end+0x570edb8>
     d44:	2f006564 	sltiu	zero,t8,25956
     d48:	2f727375 	sltiu	s2,k1,29557
     d4c:	2f62696c 	sltiu	v0,k1,26988
     d50:	2d636367 	sltiu	v1,t3,25447
     d54:	736f7263 	0x736f7263
     d58:	696d2f73 	0x696d2f73
     d5c:	6c2d7370 	0x6c2d7370
     d60:	78756e69 	0x78756e69
     d64:	756e672d 	jalx	5b99cb4 <end+0x578fcb4>
     d68:	2f30312f 	sltiu	s0,t9,12591
     d6c:	6c636e69 	0x6c636e69
     d70:	00656475 	0x656475
     d74:	692f2e2e 	0x692f2e2e
     d78:	756c636e 	jalx	5b18db8 <end+0x570edb8>
     d7c:	00006564 	0x6564
     d80:	656c6966 	0x656c6966
     d84:	0100632e 	0x100632e
     d88:	73660000 	madd	k1,a2
     d8c:	0200682e 	0x200682e
     d90:	74730000 	jalx	1cc0000 <end+0x18b6000>
     d94:	746e6964 	jalx	1b9a590 <end+0x1790590>
     d98:	6363672d 	0x6363672d
     d9c:	0300682e 	0x300682e
     da0:	79740000 	0x79740000
     da4:	2e736570 	sltiu	s3,s3,25968
     da8:	00040068 	0x40068
     dac:	756d6d00 	jalx	5b5b400 <end+0x5751400>
     db0:	0400682e 	bltz	zero,1ae6c <sigill_handler-0x3e5194>
     db4:	64660000 	0x64660000
     db8:	0200682e 	0x200682e
     dbc:	05000000 	bltz	t0,dc0 <sigill_handler-0x3ff240>
     dc0:	02050026 	xor	zero,s0,a1
     dc4:	00402660 	0x402660
     dc8:	05011b03 	bgez	t0,79d8 <sigill_handler-0x3f8628>
     dcc:	007b0802 	0x7b0802
     dd0:	06010402 	bgez	s0,1ddc <sigill_handler-0x3fe224>
     dd4:	bd06e408 	cache	0x6,-7160(t0)
     dd8:	01040200 	0x1040200
     ddc:	122c0206 	beq	s1,t4,15f8 <sigill_handler-0x3fea08>
     de0:	c2060705 	ll	a2,1797(s0)
     de4:	3d080605 	0x3d080605
     de8:	05830705 	bgezl	t4,2a00 <sigill_handler-0x3fd600>
     dec:	0b05bb09 	j	c16ec24 <end+0xbd64c24>
     df0:	4a0205bc 	c2	0x205bc
     df4:	00840305 	0x840305
     df8:	06010402 	bgez	s0,1e04 <sigill_handler-0x3fe1fc>
     dfc:	05123402 	bltzall	t0,de08 <sigill_handler-0x3f21f8>
     e00:	0402001e 	bltzl	zero,e7c <sigill_handler-0x3ff184>
     e04:	05b80602 	0x5b80602
     e08:	04020014 	bltzl	zero,e5c <sigill_handler-0x3ff1a4>
     e0c:	0205ba01 	0x205ba01
     e10:	01040200 	0x1040200
     e14:	f909054a 	sdc2	$9,1354(t0)
     e18:	02000105 	0x2000105
     e1c:	05f30104 	bgezall	t7,1230 <sigill_handler-0x3fedd0>
     e20:	0578081f 	0x578081f
     e24:	05430806 	bgezl	t2,2e40 <sigill_handler-0x3fd1c0>
     e28:	07058309 	0x7058309
     e2c:	0905bdbb 	j	416f6ec <end+0x3d656ec>
     e30:	4a0205f5 	c2	0x205f5
     e34:	05830c05 	bgezl	t4,3e4c <sigill_handler-0x3fc1b4>
     e38:	053c0806 	0x53c0806
     e3c:	0b05bb04 	j	c16ec10 <end+0xbd64c10>
     e40:	001a05f3 	tltu	zero,k0,0x17
     e44:	b7020402 	0xb7020402
     e48:	02000205 	0x2000205
     e4c:	05ba0104 	0x5ba0104
     e50:	0544080b 	0x544080b
     e54:	0305f205 	0x305f205
     e58:	f30a05bb 	0xf30a05bb
     e5c:	05be0505 	0x5be0505
     e60:	0905bb0a 	j	416ec28 <end+0x3d64c28>
     e64:	4a0205bc 	c2	0x205bc
     e68:	05830c05 	bgezl	t4,3e80 <sigill_handler-0x3fc180>
     e6c:	05e40806 	0x5e40806
     e70:	0b05bb04 	j	c16ec10 <end+0xbd64c10>
     e74:	001a05f3 	tltu	zero,k0,0x17
     e78:	b7020402 	0xb7020402
     e7c:	02000205 	0x2000205
     e80:	05ba0104 	0x5ba0104
     e84:	05420809 	bltzl	t2,2eac <sigill_handler-0x3fd154>
     e88:	47054b01 	c1	0x1054b01
     e8c:	04057a08 	0x4057a08
     e90:	0705e708 	0x705e708
     e94:	bc050585 	cache	0x5,1413(zero)
     e98:	3d080a05 	0x3d080a05
     e9c:	05bd0d05 	0x5bd0d05
     ea0:	05f3ba05 	bgezall	t7,fffef6b8 <end+0xffbe56b8>
     ea4:	0205f516 	0x205f516
     ea8:	080905f2 	j	2417c8 <sigill_handler-0x1be838>
     eac:	4b0105ad 	c2	0x10105ad
     eb0:	79083305 	0x79083305
     eb4:	b1080b05 	0xb1080b05
     eb8:	74080505 	jalx	201414 <sigill_handler-0x1febec>
     ebc:	05bb0a05 	0x5bb0a05
     ec0:	1e05bd08 	0x1e05bd08
     ec4:	82050582 	lb	a1,1410(s0)
     ec8:	05830a05 	bgezl	t4,36e0 <sigill_handler-0x3fc920>
     ecc:	0505bd07 	0x505bd07
     ed0:	05bc3c08 	0x5bc3c08
     ed4:	053d080a 	0x53d080a
     ed8:	0b05bd0c 	j	c16f430 <end+0xbd65430>
     edc:	08150582 	j	541608 <end+0x137608>
     ee0:	4a05053c 	c2	0x5053c
     ee4:	02002705 	0x2002705
     ee8:	05820104 	bltzl	t4,12fc <sigill_handler-0x3fed04>
     eec:	04020026 	bltzl	zero,f88 <sigill_handler-0x3ff078>
     ef0:	30058201 	andi	a1,zero,0x8201
     ef4:	01040200 	0x1040200
     ef8:	001e05f2 	tlt	zero,s8,0x17
     efc:	4a010402 	c2	0x10402
     f00:	05830a05 	bgezl	t4,3718 <sigill_handler-0x3fc8e8>
     f04:	0905bd07 	j	416f41c <end+0x3d6541c>
     f08:	000105bb 	0x105bb
     f0c:	4b010402 	c2	0x1010402
     f10:	78084e05 	0x78084e05
     f14:	e9080405 	swc2	$8,1029(t0)
     f18:	05850605 	0x5850605
     f1c:	0a05f405 	j	817d014 <end+0x7d73014>
     f20:	15057508 	bne	t0,a1,1e344 <sigill_handler-0x3e1cbc>
     f24:	820505bd 	lb	a1,1469(s0)
     f28:	05f30c05 	bgezall	t7,3f40 <sigill_handler-0x3fc0c0>
     f2c:	05e40806 	0x5e40806
     f30:	1105bb0b 	beq	t0,a1,fffefb60 <end+0xffbe5b60>
     f34:	f20205bf 	0xf20205bf
     f38:	ad080905 	sw	t0,2309(t0)
     f3c:	054b0105 	tltiu	t2,261
     f40:	05760836 	0x5760836
     f44:	05770804 	0x5770804
     f48:	1f05840b 	0x1f05840b
     f4c:	8202054a 	lb	v0,1354(s0)
     f50:	05f31905 	bgezall	t7,7368 <sigill_handler-0x3f8c98>
     f54:	1a05820e 	0x1a05820e
     f58:	82220583 	lb	v0,1411(s1)
     f5c:	05f20f05 	bltzall	t7,4b74 <sigill_handler-0x3fb48c>
     f60:	01058309 	0x1058309
     f64:	0826054b 	j	98152c <end+0x57752c>
     f68:	08050578 	j	1415e0 <sigill_handler-0x2bea20>
     f6c:	080a057a 	j	2815e8 <sigill_handler-0x17ea18>
     f70:	bd0b0575 	cache	0xb,1397(t0)
     f74:	74080505 	jalx	201414 <sigill_handler-0x1febec>
     f78:	05bb0a05 	0x5bb0a05
     f7c:	1e05bd08 	0x1e05bd08
     f80:	82050582 	lb	a1,1410(s0)
     f84:	05830a05 	bgezl	t4,379c <sigill_handler-0x3fc864>
     f88:	0905bd04 	j	416f410 <end+0x3d65410>
     f8c:	bb0a0583 	swr	t2,1411(t8)
     f90:	05bb1305 	0x5bb1305
     f94:	0505bc0b 	0x505bc0b
     f98:	0a053c08 	j	814f020 <end+0x7d45020>
     f9c:	bd0d05bb 	cache	0xd,1467(t0)
     fa0:	3f080b05 	0x3f080b05
     fa4:	05ba0905 	0x5ba0905
     fa8:	0c05ba02 	jal	16e808 <sigill_handler-0x2917f8>
     fac:	02060583 	0x2060583
     fb0:	0d051228 	jal	41448a0 <end+0x3d3a8a0>
     fb4:	080705bb 	j	1c16ec <sigill_handler-0x23e914>
     fb8:	bb0c053d 	swr	t4,1341(t8)
     fbc:	05bc0b05 	0x5bc0b05
     fc0:	0402003c 	bltzl	zero,10b4 <sigill_handler-0x3fef4c>
     fc4:	ba7a0302 	swr	k0,770(s3)
     fc8:	02002605 	0x2002605
     fcc:	05ba0104 	0x5ba0104
     fd0:	04020024 	bltzl	zero,1064 <sigill_handler-0x3fef9c>
     fd4:	0205f201 	0x205f201
     fd8:	01040200 	0x1040200
     fdc:	030b054a 	0x30b054a
     fe0:	0905ba0b 	j	416e82c <end+0x3d6482c>
     fe4:	ba0205ba 	swr	v0,1466(s0)
     fe8:	05830c05 	bgezl	t4,4000 <sigill_handler-0x3fc000>
     fec:	05e40806 	0x5e40806
     ff0:	3c05bb04 	lui	a1,0xbb04
     ff4:	02040200 	0x2040200
     ff8:	05103402 	bltzal	t0,e004 <sigill_handler-0x3f1ffc>
     ffc:	04020023 	bltzl	zero,108c <sigill_handler-0x3fef74>
    1000:	2105ba01 	addi	a1,t0,-17919
    1004:	01040200 	0x1040200
    1008:	000205f2 	tlt	zero,v0,0x17
    100c:	4a010402 	c2	0x10402
    1010:	05c00905 	bltz	t6,3428 <sigill_handler-0x3fcbd8>
    1014:	04020001 	bltzl	zero,101c <sigill_handler-0x3fefe4>
    1018:	1e054b01 	0x1e054b01
    101c:	09057808 	j	415e020 <end+0x3d54020>
    1020:	01054008 	0x1054008
    1024:	081005bb 	j	4016ec <syscall_sigprocmask+0x1c>
    1028:	f3090578 	0xf3090578
    102c:	02830105 	0x2830105
    1030:	01010018 	mult	t0,at
    1034:	0000015d 	0x15d
    1038:	00780003 	0x780003
    103c:	01010000 	0x1010000
    1040:	000d0efb 	0xd0efb
    1044:	01010101 	0x1010101
    1048:	01000000 	0x1000000
    104c:	6c010000 	0x6c010000
    1050:	2e006269 	sltiu	zero,s0,25193
    1054:	6e692f2e 	0x6e692f2e
    1058:	64756c63 	0x64756c63
    105c:	6e690065 	0x6e690065
    1060:	64756c63 	0x64756c63
    1064:	66000065 	0x66000065
    1068:	63706973 	0x63706973
    106c:	0100632e 	0x100632e
    1070:	79740000 	0x79740000
    1074:	2e736570 	sltiu	s3,s3,25968
    1078:	00020068 	0x20068
    107c:	61727400 	0x61727400
    1080:	00682e70 	tge	v1,t0,0xb9
    1084:	73000002 	mul	zero,t8,zero
    1088:	682e6769 	0x682e6769
    108c:	00000200 	sll	zero,zero,0x8
    1090:	2e766e65 	sltiu	s6,s3,28261
    1094:	00020068 	0x20068
    1098:	72736600 	0x72736600
    109c:	682e7165 	0x682e7165
    10a0:	00000300 	sll	zero,zero,0xc
    10a4:	682e6466 	0x682e6466
    10a8:	00000300 	sll	zero,zero,0xc
    10ac:	2e756d6d 	sltiu	s5,s3,28013
    10b0:	00020068 	0x20068
    10b4:	45050000 	bc1t	$fcc1,10b8 <sigill_handler-0x3fef48>
    10b8:	90020500 	lbu	v0,1280(zero)
    10bc:	0300402f 	0x300402f
    10c0:	0f050115 	jal	c140454 <end+0xbd36454>
    10c4:	0205e708 	0x205e708
    10c8:	08090582 	j	241608 <sigill_handler-0x1be9f8>
    10cc:	080105ad 	j	416b4 <sigill_handler-0x3be94c>
    10d0:	033e0575 	0x33e0575
    10d4:	05740809 	0x5740809
    10d8:	bdb00806 	cache	0x10,2054(t5)
    10dc:	05ba0505 	0x5ba0505
    10e0:	1105bb0a 	beq	t0,a1,fffefd0c <end+0xffbe5d0c>
    10e4:	4a0205bd 	c2	0x205bd
    10e8:	05f31105 	bgezall	t7,5500 <sigill_handler-0x3fab00>
    10ec:	0105bb09 	0x105bb09
    10f0:	01040200 	0x1040200
    10f4:	3805ad08 	xori	a1,zero,0xad08
    10f8:	74080a03 	jalx	20280c <sigill_handler-0x1fd7f4>
    10fc:	b1080605 	0xb1080605
    1100:	bbbb1205 	swr	k1,4613(sp)
    1104:	05bc0b05 	0x5bc0b05
    1108:	05e40805 	0x5e40805
    110c:	0c05bb0a 	jal	16ec28 <sigill_handler-0x2913d8>
    1110:	ba0505bd 	swr	a1,1469(s0)
    1114:	05bb0305 	0x5bb0305
    1118:	152c0209 	bne	t1,t4,1940 <sigill_handler-0x3fe6c0>
    111c:	02000105 	0x2000105
    1120:	054b0104 	tltiu	t2,260
    1124:	0578082e 	0x578082e
    1128:	05770806 	0x5770806
    112c:	1005bb12 	beq	zero,a1,fffefd78 <end+0xffbe5d78>
    1130:	bb0905bb 	swr	t1,1467(t8)
    1134:	75080105 	jalx	4200414 <end+0x3df6414>
    1138:	78081f05 	0x78081f05
    113c:	3f080605 	0x3f080605
    1140:	05bb1205 	0x5bb1205
    1144:	0105bb09 	0x105bb09
    1148:	2d057508 	sltiu	a1,t0,29960
    114c:	06057808 	0x6057808
    1150:	12057708 	beq	s0,a1,1ed74 <sigill_handler-0x3e128c>
    1154:	0905bbbb 	j	416eeec <end+0x3d64eec>
    1158:	080105bb 	j	416ec <sigill_handler-0x3be914>
    115c:	08240575 	j	9015d4 <end+0x4f75d4>
    1160:	080c0578 	j	3015e0 <sigill_handler-0xfea20>
    1164:	ba060540 	swr	a2,1344(s0)
    1168:	054b0405 	tltiu	t2,1029
    116c:	0402000e 	bltzl	zero,11a8 <sigill_handler-0x3fee58>
    1170:	0a05ba01 	j	816e804 <end+0x7d64804>
    1174:	bd1705f3 	cache	0x17,1523(t0)
    1178:	05be1105 	0x5be1105
    117c:	09054a02 	j	4152808 <end+0x3d48808>
    1180:	080105f5 	j	417d4 <sigill_handler-0x3be82c>
    1184:	08160575 	j	5815d4 <end+0x1775d4>
    1188:	f3090579 	0xf3090579
    118c:	ad080105 	sw	t0,261(t0)
    1190:	01001802 	0x1001802
    1194:	00011001 	movt	v0,zero,$fcc0
    1198:	4a000300 	c2	0x300
    119c:	01000000 	0x1000000
    11a0:	0d0efb01 	jal	43bec04 <end+0x3fb4c04>
    11a4:	01010100 	0x1010100
    11a8:	00000001 	movf	zero,zero,$fcc0
    11ac:	01000001 	movf	zero,t0,$fcc0
    11b0:	0062696c 	0x62696c
    11b4:	6c636e69 	0x6c636e69
    11b8:	00656475 	0x656475
    11bc:	692f2e2e 	0x692f2e2e
    11c0:	756c636e 	jalx	5b18db8 <end+0x570edb8>
    11c4:	00006564 	0x6564
    11c8:	736e6f63 	0x736e6f63
    11cc:	2e656c6f 	sltiu	a1,s3,27759
    11d0:	00010063 	0x10063
    11d4:	2e646600 	sltiu	a0,s3,26112
    11d8:	00020068 	0x20068
    11dc:	70797400 	0x70797400
    11e0:	682e7365 	0x682e7365
    11e4:	00000300 	sll	zero,zero,0xc
    11e8:	00170500 	sll	zero,s7,0x14
    11ec:	33900205 	andi	s0,gp,0x205
    11f0:	11030040 	beq	t0,v1,12f4 <sigill_handler-0x3fed0c>
    11f4:	080b0501 	j	2c1404 <sigill_handler-0x13ebfc>
    11f8:	08050540 	j	141500 <sigill_handler-0x2beb00>
    11fc:	bb0a0574 	swr	t2,1396(t8)
    1200:	05bc0b05 	0x5bc0b05
    1204:	17058221 	bne	t8,a1,fffe1a8c <end+0xffbd7a8c>
    1208:	00010582 	srl	zero,at,0x16
    120c:	bb010402 	swr	at,1026(t8)
    1210:	76081405 	jalx	8205014 <end+0x7dfb014>
    1214:	05f60b05 	0x5f60b05
    1218:	053c0805 	0x53c0805
    121c:	0b05bb0a 	j	c16ec28 <end+0xbd64c28>
    1220:	080505bc 	j	1416f0 <sigill_handler-0x2be910>
    1224:	bb0a05ac 	swr	t2,1452(t8)
    1228:	05bc1905 	0x5bc1905
    122c:	10058204 	beq	zero,a1,fffe1a40 <end+0xffbd7a40>
    1230:	4b04054a 	c2	0x104054a
    1234:	054a0f05 	tlti	t2,3845
    1238:	01058309 	0x1058309
    123c:	01040200 	0x1040200
    1240:	084105f3 	j	10417cc <end+0xc377cc>
    1244:	08050576 	j	1415d8 <sigill_handler-0x2bea28>
    1248:	bb0a05e7 	swr	t2,1511(t8)
    124c:	05be0305 	0x5be0305
    1250:	0805810e 	j	160438 <sigill_handler-0x29fbc8>
    1254:	be0505ba 	cache	0x5,1466(s0)
    1258:	08f30305 	j	3cc0c14 <end+0x38b6c14>
    125c:	f40505ae 	sdc1	$f5,1454(zero)
    1260:	05bb0a05 	0x5bb0a05
    1264:	0a05bc05 	j	816f014 <end+0x7d65014>
    1268:	bc1005f3 	cache	0x10,1523(zero)
    126c:	3d080905 	0x3d080905
    1270:	054b0105 	tltiu	t2,261
    1274:	05760847 	0x5760847
    1278:	05e5080a 	0x5e5080a
    127c:	053d0805 	0x53d0805
    1280:	0905bb0a 	j	416ec28 <end+0x3d64c28>
    1284:	4b0105bc 	c2	0x10105bc
    1288:	76081f05 	jalx	8207c14 <end+0x7dfdc14>
    128c:	05f30905 	bgezall	t7,36a4 <sigill_handler-0x3fc95c>
    1290:	31054b01 	andi	a1,t0,0x4b01
    1294:	0d053e08 	jal	414f820 <end+0x3d45820>
    1298:	02057508 	0x2057508
    129c:	0809054a 	j	241528 <sigill_handler-0x1bead8>
    12a0:	4b01053d 	c2	0x101053d
    12a4:	01001802 	0x1001802
    12a8:	0000d601 	0xd601
    12ac:	69000300 	0x69000300
    12b0:	01000000 	0x1000000
    12b4:	0d0efb01 	jal	43bec04 <end+0x3fb4c04>
    12b8:	01010100 	0x1010100
    12bc:	00000001 	movf	zero,zero,$fcc0
    12c0:	01000001 	movf	zero,t0,$fcc0
    12c4:	0062696c 	0x62696c
    12c8:	7273752f 	0x7273752f
    12cc:	62696c2f 	0x62696c2f
    12d0:	6363672f 	0x6363672f
    12d4:	6f72632d 	0x6f72632d
    12d8:	6d2f7373 	0x6d2f7373
    12dc:	2d737069 	sltiu	s3,t3,28777
    12e0:	756e696c 	jalx	5b9a5b0 <end+0x57905b0>
    12e4:	6e672d78 	0x6e672d78
    12e8:	30312f75 	andi	s1,at,0x2f75
    12ec:	636e692f 	0x636e692f
    12f0:	6564756c 	0x6564756c
    12f4:	70660000 	madd	v1,a2
    12f8:	746e6972 	jalx	1b9a5c8 <end+0x17905c8>
    12fc:	00632e66 	0x632e66
    1300:	73000001 	maddu	t8,zero
    1304:	65646474 	0x65646474
    1308:	00682e66 	0x682e66
    130c:	73000002 	mul	zero,t8,zero
    1310:	72616474 	0x72616474
    1314:	00682e67 	0x682e67
    1318:	00000002 	srl	zero,zero,0x0
    131c:	05003f05 	bltz	t0,10f34 <sigill_handler-0x3ef0cc>
    1320:	40369002 	0x40369002
    1324:	14051a00 	bne	zero,a1,7b28 <sigill_handler-0x3f84d8>
    1328:	0905ad08 	j	416b420 <end+0x3d61420>
    132c:	82050583 	lb	a1,1411(s0)
    1330:	05850a05 	0x5850a05
    1334:	05e50805 	0x5e50805
    1338:	3e08bb0c 	0x3e08bb0c
    133c:	7a030305 	0x7a030305
    1340:	0105e408 	0x105e408
    1344:	083a0552 	j	e81548 <end+0xa77548>
    1348:	08090576 	j	2415d8 <sigill_handler-0x1bea28>
    134c:	830a05ae 	lb	t2,1454(t8)
    1350:	054b0205 	tltiu	t2,517
    1354:	05e5080c 	0x5e5080c
    1358:	2b054b01 	slti	a1,t8,19201
    135c:	02057608 	0x2057608
    1360:	0a05e608 	j	8179820 <end+0x7d6f820>
    1364:	08090583 	j	24160c <sigill_handler-0x1be9f4>
    1368:	4b0105ae 	c2	0x10105ae
    136c:	76082205 	jalx	8208814 <end+0x7dfe814>
    1370:	e6080205 	swc1	$f8,517(s0)
    1374:	05830a05 	bgezl	t4,3b8c <sigill_handler-0x3fc474>
    1378:	05ae0809 	tnei	t5,2057
    137c:	18024b01 	0x18024b01
    1380:	99010100 	lwr	at,256(t0)
    1384:	03000000 	0x3000000
    1388:	00005c00 	sll	t3,zero,0x10
    138c:	fb010100 	sdc2	$1,256(t8)
    1390:	01000d0e 	0x1000d0e
    1394:	00010101 	0x10101
    1398:	00010000 	sll	zero,at,0x0
    139c:	696c0100 	0x696c0100
    13a0:	2e2e0062 	sltiu	t6,s1,98
    13a4:	636e692f 	0x636e692f
    13a8:	6564756c 	0x6564756c
    13ac:	61770000 	0x61770000
    13b0:	632e7469 	0x632e7469
    13b4:	00000100 	sll	zero,zero,0x4
    13b8:	65707974 	0x65707974
    13bc:	00682e73 	tltu	v1,t0,0xb9
    13c0:	74000002 	jalx	8 <sigill_handler-0x3ffff8>
    13c4:	2e706172 	sltiu	s0,s3,24946
    13c8:	00020068 	0x20068
    13cc:	67697300 	0x67697300
    13d0:	0200682e 	0x200682e
    13d4:	6e650000 	0x6e650000
    13d8:	00682e76 	tne	v1,t0,0xb9
    13dc:	6d000002 	0x6d000002
    13e0:	682e756d 	0x682e756d
    13e4:	00000200 	sll	zero,zero,0x8
    13e8:	00180500 	sll	zero,t8,0x14
    13ec:	38700205 	xori	s0,v1,0x205
    13f0:	05140040 	0x5140040
    13f4:	053f080c 	0x53f080c
    13f8:	0405820b 	0x405820b
    13fc:	08053c08 	j	14f020 <sigill_handler-0x2b0fe0>
    1400:	830305bb 	lb	v1,1467(t8)
    1404:	05810a05 	bgez	t4,3c1c <sigill_handler-0x3fc3e4>
    1408:	20058208 	addi	a1,zero,-32248
    140c:	01040200 	0x1040200
    1410:	001c05ba 	0x1c05ba
    1414:	82010402 	lb	at,1026(s0)
    1418:	02850105 	0x2850105
    141c:	0101001c 	0x101001c
    1420:	000003e6 	0x3e6
    1424:	00cd0003 	0xcd0003
    1428:	01010000 	0x1010000
    142c:	000d0efb 	0xd0efb
    1430:	01010101 	0x1010101
    1434:	01000000 	0x1000000
    1438:	6c010000 	0x6c010000
    143c:	69006269 	0x69006269
    1440:	756c636e 	jalx	5b18db8 <end+0x570edb8>
    1444:	2f006564 	sltiu	zero,t8,25956
    1448:	2f727375 	sltiu	s2,k1,29557
    144c:	2f62696c 	sltiu	v0,k1,26988
    1450:	2d636367 	sltiu	v1,t3,25447
    1454:	736f7263 	0x736f7263
    1458:	696d2f73 	0x696d2f73
    145c:	6c2d7370 	0x6c2d7370
    1460:	78756e69 	0x78756e69
    1464:	756e672d 	jalx	5b99cb4 <end+0x578fcb4>
    1468:	2f30312f 	sltiu	s0,t9,12591
    146c:	6c636e69 	0x6c636e69
    1470:	00656475 	0x656475
    1474:	692f2e2e 	0x692f2e2e
    1478:	756c636e 	jalx	5b18db8 <end+0x570edb8>
    147c:	00006564 	0x6564
    1480:	77617073 	jalx	d85c1cc <end+0xd4521cc>
    1484:	00632e6e 	0x632e6e
    1488:	6c000001 	0x6c000001
    148c:	682e6269 	0x682e6269
    1490:	00000200 	sll	zero,zero,0x8
    1494:	64647473 	0x64647473
    1498:	682e6665 	0x682e6665
    149c:	00000300 	sll	zero,zero,0xc
    14a0:	69647473 	0x69647473
    14a4:	672d746e 	0x672d746e
    14a8:	682e6363 	0x682e6363
    14ac:	00000300 	sll	zero,zero,0xc
    14b0:	65707974 	0x65707974
    14b4:	00682e73 	tltu	v1,t0,0xb9
    14b8:	65000004 	0x65000004
    14bc:	682e666c 	0x682e666c
    14c0:	00000400 	sll	zero,zero,0x10
    14c4:	2e756d6d 	sltiu	s5,s3,28013
    14c8:	00040068 	0x40068
    14cc:	61727400 	0x61727400
    14d0:	00682e70 	tge	v1,t0,0xb9
    14d4:	73000004 	msub	t8,zero
    14d8:	682e6769 	0x682e6769
    14dc:	00000400 	sll	zero,zero,0x10
    14e0:	2e766e65 	sltiu	s6,s3,28261
    14e4:	00040068 	0x40068
    14e8:	73797300 	0x73797300
    14ec:	6c6c6163 	0x6c6c6163
    14f0:	0400682e 	bltz	zero,1b5ac <sigill_handler-0x3e4a54>
    14f4:	05000000 	bltz	t0,14f8 <sigill_handler-0x3feb08>
    14f8:	0205003a 	0x205003a
    14fc:	00403900 	0x403900
    1500:	08060519 	j	181464 <sigill_handler-0x27eb9c>
    1504:	4b0c05b3 	c2	0x10c05b3
    1508:	054a0205 	tlti	t2,517
    150c:	04020015 	bltzl	zero,1564 <sigill_handler-0x3fea9c>
    1510:	0a058303 	j	8160c0c <end+0x7d56c0c>
    1514:	03040200 	0x3040200
    1518:	001d05f2 	tlt	zero,sp,0x17
    151c:	f2030402 	0xf2030402
    1520:	02000705 	0x2000705
    1524:	054a0304 	tlti	t2,772
    1528:	04020021 	bltzl	zero,15b0 <sigill_handler-0x3fea50>
    152c:	1505b903 	bne	t0,a1,fffef93c <end+0xffbe593c>
    1530:	01040200 	0x1040200
    1534:	000205ba 	0x205ba
    1538:	08010402 	j	41008 <sigill_handler-0x3beff8>
    153c:	8706053c 	lh	a2,1340(t8)
    1540:	05f22005 	bltzall	t7,9558 <sigill_handler-0x3f6aa8>
    1544:	14058218 	bne	zero,a1,fffe1da8 <end+0xffbd7da8>
    1548:	4a05054a 	c2	0x5054a
    154c:	05bb0a05 	0x5bb0a05
    1550:	0a05be28 	j	816f8a0 <end+0x7d658a0>
    1554:	f3270582 	0xf3270582
    1558:	05f24105 	bltzall	t7,11970 <sigill_handler-0x3ee690>
    155c:	35058239 	ori	a1,t0,0x8239
    1560:	f207054a 	0xf207054a
    1564:	054c0b05 	teqi	t2,2821
    1568:	05ac0805 	teqi	t5,2053
    156c:	0805bb0a 	j	16ec28 <sigill_handler-0x2913d8>
    1570:	830905c0 	lb	t1,1472(t8)
    1574:	054a0205 	tlti	t2,517
    1578:	0d058313 	jal	4160c4c <end+0x3d56c4c>
    157c:	830a05f2 	lb	t2,1522(t8)
    1580:	054a0305 	tlti	t2,773
    1584:	0402000d 	bltzl	zero,15bc <sigill_handler-0x3fea44>
    1588:	0b058303 	j	c160c0c <end+0xbd56c0c>
    158c:	03040200 	0x3040200
    1590:	00090582 	srl	zero,t1,0x16
    1594:	83030402 	lb	v1,1026(t8)
    1598:	02000d05 	0x2000d05
    159c:	05bb0304 	0x5bb0304
    15a0:	04020025 	bltzl	zero,1638 <sigill_handler-0x3fe9c8>
    15a4:	1e05b703 	0x1e05b703
    15a8:	01040200 	0x1040200
    15ac:	001305ba 	0x1305ba
    15b0:	f2010402 	0xf2010402
    15b4:	02000305 	0x2000305
    15b8:	3c080104 	lui	t0,0x104
    15bc:	02000a05 	0x2000a05
    15c0:	05f70204 	0x5f70204
    15c4:	04020008 	bltzl	zero,15e8 <sigill_handler-0x3fea18>
    15c8:	19058302 	0x19058302
    15cc:	02040200 	0x2040200
    15d0:	05ba7803 	0x5ba7803
    15d4:	04020002 	bltzl	zero,15e0 <sigill_handler-0x3fea20>
    15d8:	3305ba01 	andi	a1,t8,0xba01
    15dc:	3c080e03 	lui	t0,0xe03
    15e0:	054a3105 	tlti	t2,12549
    15e4:	0905ba08 	j	416e820 <end+0x3d64820>
    15e8:	4a02054b 	c2	0x2054b
    15ec:	02000705 	0x2000705
    15f0:	05830304 	bgezl	t4,2204 <sigill_handler-0x3fddfc>
    15f4:	0402000d 	bltzl	zero,162c <sigill_handler-0x3fe9d4>
    15f8:	0b05f203 	j	c17c80c <end+0xbd7280c>
    15fc:	03040200 	0x3040200
    1600:	0017054a 	0x17054a
    1604:	4b030402 	c2	0x1030402
    1608:	02000c05 	0x2000c05
    160c:	05f20304 	bltzall	t7,2220 <sigill_handler-0x3fdde0>
    1610:	0402001c 	bltzl	zero,1684 <sigill_handler-0x3fe97c>
    1614:	0905f203 	j	417c80c <end+0x3d7280c>
    1618:	03040200 	0x3040200
    161c:	0019054a 	0x19054a
    1620:	b8030402 	swr	v1,1026(zero)
    1624:	02000205 	0x2000205
    1628:	05ba0104 	0x5ba0104
    162c:	05420807 	bltzl	t2,364c <sigill_handler-0x3fc9b4>
    1630:	0f05bb06 	jal	c16ec18 <end+0xbd64c18>
    1634:	4a0d05f2 	c2	0xd05f2
    1638:	05500c05 	bltzal	t2,4650 <sigill_handler-0x3fb9b0>
    163c:	2d05bb2f 	sltiu	a1,t0,-17617
    1640:	ba0d054a 	swr	t5,1354(s0)
    1644:	05830b05 	bgezl	t4,425c <sigill_handler-0x3fbda4>
    1648:	2d05bb0d 	sltiu	a1,t0,-17651
    164c:	4a2b05bd 	c2	0x2b05bd
    1650:	84ba0b05 	lh	k0,2821(a1)
    1654:	2c020505 	sltiu	v0,zero,1285
    1658:	be0b0512 	cache	0xb,1298(s0)
    165c:	74080505 	jalx	201414 <sigill_handler-0x1febec>
    1660:	05be0905 	0x5be0905
    1664:	ba7a0303 	swr	k0,771(s3)
    1668:	500205bd 	beql	zero,v0,2d60 <sigill_handler-0x3fd2a0>
    166c:	3d080905 	0x3d080905
    1670:	054b0105 	tltiu	t2,261
    1674:	05770810 	0x5770810
    1678:	05e50808 	0x5e50808
    167c:	0200bb02 	0x200bb02
    1680:	02060104 	0x2060104
    1684:	05051228 	0x5051228
    1688:	0b05bb06 	j	c16ec18 <end+0xbd64c18>
    168c:	020605bb 	0x20605bb
    1690:	04051330 	0x4051330
    1694:	080b05bb 	j	2c16ec <sigill_handler-0x13e914>
    1698:	bc19053d 	cache	0x19,1341(zero)
    169c:	05f20305 	bltzall	t7,22b4 <sigill_handler-0x3fdd4c>
    16a0:	053d080a 	0x53d080a
    16a4:	05ae0809 	tnei	t5,2057
    16a8:	24054b01 	li	a1,19201
    16ac:	0c057c08 	jal	15f020 <sigill_handler-0x2a0fe0>
    16b0:	05057808 	0x5057808
    16b4:	0a053c08 	j	814f020 <end+0x7d45020>
    16b8:	030605bb 	0x30605bb
    16bc:	0505ba0a 	0x505ba0a
    16c0:	05bb7408 	0x5bb7408
    16c4:	1b058303 	0x1b058303
    16c8:	08050585 	j	141614 <sigill_handler-0x2be9ec>
    16cc:	0305bb75 	0x305bb75
    16d0:	84090583 	lh	t1,1411(zero)
    16d4:	b5030204 	0xb5030204
    16d8:	0104ba7f 	0x104ba7f
    16dc:	d1030805 	0xd1030805
    16e0:	05e40800 	0x5e40800
    16e4:	4a09030b 	c2	0x9030b
    16e8:	e4080505 	swc1	$f8,1285(zero)
    16ec:	05c00205 	bltz	t6,1f04 <sigill_handler-0x3fe0fc>
    16f0:	057a080c 	0x57a080c
    16f4:	053c0806 	0x53c0806
    16f8:	0705bd1d 	0x705bd1d
    16fc:	08320582 	j	c81608 <end+0x877608>
    1700:	820605ac 	lb	a2,1452(s0)
    1704:	05bd0f05 	0x5bd0f05
    1708:	06058309 	0x6058309
    170c:	c00c0582 	ll	t4,1410(zero)
    1710:	24020605 	li	v0,1541
    1714:	c10c0512 	ll	t4,1298(t0)
    1718:	28020605 	slti	v0,zero,1541
    171c:	00020512 	0x20512
    1720:	03020402 	0x3020402
    1724:	0200ba66 	0x200ba66
    1728:	02060104 	0x2060104
    172c:	03061224 	0x3061224
    1730:	05ac081f 	teqi	t5,2079
    1734:	1c05bc1d 	0x1c05bc1d
    1738:	08130582 	j	4c1608 <end+0xb7608>
    173c:	080d05ac 	j	3416b0 <sigill_handler-0xbe950>
    1740:	830e05ad 	lb	t6,1453(t8)
    1744:	05830b05 	bgezl	t4,435c <sigill_handler-0x3fbca4>
    1748:	05ac0805 	teqi	t5,2053
    174c:	0205bf0d 	break	0x205,0x2fc
    1750:	830c054a 	lb	t4,1354(t8)
    1754:	74081405 	jalx	205014 <sigill_handler-0x1fafec>
    1758:	054a0605 	tlti	t2,1541
    175c:	0305850e 	0x305850e
    1760:	8316054a 	lb	s6,1354(t8)
    1764:	05820a05 	bltzl	t4,3f7c <sigill_handler-0x3fc084>
    1768:	1905bb14 	0x1905bb14
    176c:	4a0a05f2 	c2	0xa05f2
    1770:	05830e05 	bgezl	t4,4f88 <sigill_handler-0x3fb078>
    1774:	20058207 	addi	a1,zero,-32249
    1778:	01040200 	0x1040200
    177c:	00170582 	srl	zero,s7,0x16
    1780:	82010402 	lb	at,1026(s0)
    1784:	05831c05 	bgezl	t4,879c <sigill_handler-0x3f7864>
    1788:	0e05820b 	jal	816082c <end+0x7d5682c>
    178c:	0208054c 	syscall	0x82015
    1790:	06051228 	0x6051228
    1794:	05e508bb 	0x5e508bb
    1798:	04020030 	bltzl	zero,185c <sigill_handler-0x3fe7a4>
    179c:	82780302 	lb	t8,770(s3)
    17a0:	02000305 	0x2000305
    17a4:	05ba0104 	0x5ba0104
    17a8:	05720804 	bltzall	t3,37bc <sigill_handler-0x3fc844>
    17ac:	04020036 	bltzl	zero,1888 <sigill_handler-0x3fe778>
    17b0:	02054802 	0x2054802
    17b4:	01040200 	0x1040200
    17b8:	030b05ba 	0x30b05ba
    17bc:	0505f212 	0x505f212
    17c0:	03057408 	0x3057408
    17c4:	05ad08bb 	0x5ad08bb
    17c8:	03058409 	0x3058409
    17cc:	05ba6603 	0x5ba6603
    17d0:	4a1d0302 	c2	0x1d0302
    17d4:	05f30905 	bgezall	t7,3bec <sigill_handler-0x3fc414>
    17d8:	7fb80303 	0x7fb80303
    17dc:	030405ba 	0x30405ba
    17e0:	05bdba0c 	0x5bdba0c
    17e4:	ba0a0305 	swr	t2,773(s0)
    17e8:	030205c1 	0x30205c1
    17ec:	05f44a2a 	0x5f44a2a
    17f0:	0105bb09 	0x105bb09
    17f4:	01040200 	0x1040200
    17f8:	0829054b 	j	a4152c <end+0x63752c>
    17fc:	08090576 	j	2415d8 <sigill_handler-0x1bea28>
    1800:	080105e7 	j	4179c <sigill_handler-0x3be864>
    1804:	0018023d 	0x18023d
    1808:	02c00101 	0x2c00101
    180c:	00030000 	sll	zero,v1,0x0
    1810:	00000075 	0x75
    1814:	0efb0101 	jal	bec0404 <end+0xbab6404>
    1818:	0101000d 	break	0x101
    181c:	00000101 	0x101
    1820:	00000100 	sll	zero,zero,0x4
    1824:	62696c01 	0x62696c01
    1828:	2f2e2e00 	sltiu	t6,t9,11776
    182c:	6c636e69 	0x6c636e69
    1830:	00656475 	0x656475
    1834:	6c636e69 	0x6c636e69
    1838:	00656475 	0x656475
    183c:	70697000 	0x70697000
    1840:	00632e65 	0x632e65
    1844:	74000001 	jalx	4 <sigill_handler-0x3ffffc>
    1848:	73657079 	0x73657079
    184c:	0200682e 	0x200682e
    1850:	6d6d0000 	0x6d6d0000
    1854:	00682e75 	0x682e75
    1858:	74000002 	jalx	8 <sigill_handler-0x3ffff8>
    185c:	2e706172 	sltiu	s0,s3,24946
    1860:	00020068 	0x20068
    1864:	67697300 	0x67697300
    1868:	0200682e 	0x200682e
    186c:	6e650000 	0x6e650000
    1870:	00682e76 	tne	v1,t0,0xb9
    1874:	66000002 	0x66000002
    1878:	00682e64 	0x682e64
    187c:	6c000003 	0x6c000003
    1880:	682e6269 	0x682e6269
    1884:	00000300 	sll	zero,zero,0xc
    1888:	00160500 	sll	zero,s6,0x14
    188c:	43000205 	c0	0x1000205
    1890:	23030040 	addi	v1,t8,64
    1894:	080b0501 	j	2c1404 <sigill_handler-0x13ebfc>
    1898:	0805057a 	j	1415e8 <sigill_handler-0x2bea18>
    189c:	0027053c 	0x27053c
    18a0:	ba010402 	swr	at,1026(s0)
    18a4:	02001f05 	0x2001f05
    18a8:	ac080104 	sw	t0,260(zero)
    18ac:	05be0b05 	0x5be0b05
    18b0:	053c0805 	0x53c0805
    18b4:	04020027 	bltzl	zero,1954 <sigill_handler-0x3fe6ac>
    18b8:	1f05ba01 	0x1f05ba01
    18bc:	01040200 	0x1040200
    18c0:	0705ac08 	0x705ac08
    18c4:	080b05bf 	j	2c16fc <sigill_handler-0x13e904>
    18c8:	0805053d 	j	1414f4 <sigill_handler-0x2beb0c>
    18cc:	bd0b0574 	cache	0xb,1396(t0)
    18d0:	38020505 	xori	v0,zero,0x505
    18d4:	c01a0512 	ll	k0,1298(zero)
    18d8:	05820505 	bltzl	t4,2cf0 <sigill_handler-0x3fd310>
    18dc:	05054a11 	0x5054a11
    18e0:	4a10054b 	c2	0x10054b
    18e4:	054c1a05 	teqi	t2,6661
    18e8:	11058205 	beq	t0,a1,fffe2100 <end+0xffbd8100>
    18ec:	4b05054a 	c2	0x105054a
    18f0:	054a1005 	tlti	t2,4101
    18f4:	02058424 	0x2058424
    18f8:	4a320582 	c2	0x320582
    18fc:	05823105 	bltzl	t4,dd14 <sigill_handler-0x3f22ec>
    1900:	0b05ba02 	j	c16e808 <end+0xbd64808>
    1904:	0905af08 	j	416bc20 <end+0x3d61c20>
    1908:	0b053c08 	j	c14f020 <end+0xbd45020>
    190c:	4a050583 	c2	0x50583
    1910:	05820b05 	bltzl	t4,4528 <sigill_handler-0x3fbad8>
    1914:	054bba09 	tltiu	t2,-17911
    1918:	ba710303 	swr	s1,771(s3)
    191c:	12030205 	beq	s0,v1,2134 <sigill_handler-0x3fdecc>
    1920:	0303054a 	0x303054a
    1924:	0574086a 	0x574086a
    1928:	4a180302 	c2	0x180302
    192c:	62030305 	0x62030305
    1930:	0205ac08 	0x205ac08
    1934:	054a2003 	tlti	t2,8195
    1938:	085c0303 	j	1700c0c <end+0x12f6c0c>
    193c:	030905ac 	0x30905ac
    1940:	01054a26 	0x1054a26
    1944:	01040200 	0x1040200
    1948:	033b054b 	0x33b054b
    194c:	05ac080d 	teqi	t5,2061
    1950:	0402000d 	bltzl	zero,1988 <sigill_handler-0x3fe678>
    1954:	08100301 	j	400c04 <cow_entry+0x154>
    1958:	00080574 	teq	zero,t0,0x15
    195c:	ba010402 	swr	at,1026(s0)
    1960:	02000c05 	0x2000c05
    1964:	054b0104 	tltiu	t2,260
    1968:	0402000e 	bltzl	zero,19a4 <sigill_handler-0x3fe65c>
    196c:	1305f301 	beq	t8,a1,ffffe574 <end+0xffbf4574>
    1970:	01040200 	0x1040200
    1974:	000d05f4 	teq	zero,t5,0x17
    1978:	ba010402 	swr	at,1026(s0)
    197c:	02000205 	0x2000205
    1980:	054a0104 	tlti	t2,260
    1984:	01058410 	0x1058410
    1988:	48053d08 	0x48053d08
    198c:	74080f03 	jalx	203c0c <sigill_handler-0x1fc3f4>
    1990:	0d031505 	jal	40c5414 <end+0x3cbb414>
    1994:	0805e408 	j	179020 <sigill_handler-0x286fe0>
    1998:	4a0205f3 	c2	0x205f3
    199c:	bb830805 	swr	v1,2053(gp)
    19a0:	05830405 	bgezl	t4,29b8 <sigill_handler-0x3fd648>
    19a4:	1705810a 	bne	t8,a1,fffe1dd0 <end+0xffbd7dd0>
    19a8:	82080582 	lb	t0,1410(s0)
    19ac:	02002405 	0x2002405
    19b0:	05ba0104 	0x5ba0104
    19b4:	04020020 	bltzl	zero,1a38 <sigill_handler-0x3fe5c8>
    19b8:	0705f201 	0x705f201
    19bc:	82130585 	lb	s3,1413(s0)
    19c0:	05820505 	bltzl	t4,2dd8 <sigill_handler-0x3fd228>
    19c4:	2805bb1f 	slti	a1,zero,-17633
    19c8:	4a1d0582 	c2	0x1d0582
    19cc:	05821305 	bltzl	t4,65e4 <sigill_handler-0x3f9a1c>
    19d0:	1705ba1d 	bne	t8,a1,ffff0248 <end+0xffbe6248>
    19d4:	4b05054a 	c2	0x105054a
    19d8:	05820d05 	bltzl	t4,4df0 <sigill_handler-0x3fb210>
    19dc:	04020030 	bltzl	zero,1aa0 <sigill_handler-0x3fe560>
    19e0:	ba790302 	swr	t9,770(s3)
    19e4:	02000f05 	0x2000f05
    19e8:	05ba0104 	0x5ba0104
    19ec:	04020002 	bltzl	zero,19f8 <sigill_handler-0x3fe608>
    19f0:	17054a01 	bne	t8,a1,141f8 <sigill_handler-0x3ebe08>
    19f4:	03040200 	0x3040200
    19f8:	001305f2 	tlt	zero,s3,0x17
    19fc:	f2030402 	0xf2030402
    1a00:	0a030905 	j	80c2414 <end+0x7cb8414>
    1a04:	4d010582 	bc3t	3010 <sigill_handler-0x3fcff0>
    1a08:	0d034f05 	jal	40d3c14 <end+0x3cc9c14>
    1a0c:	15057408 	bne	t0,a1,1ea30 <sigill_handler-0x3e15d0>
    1a10:	e4080e03 	swc1	$f8,3587(zero)
    1a14:	05f30805 	bgezall	t7,3a2c <sigill_handler-0x3fc5d4>
    1a18:	08054a02 	j	152808 <sigill_handler-0x2ad7f8>
    1a1c:	0405bb83 	0x405bb83
    1a20:	810a0583 	lb	t2,1411(t0)
    1a24:	05821605 	bltzl	t4,723c <sigill_handler-0x3f8dc4>
    1a28:	08058213 	j	16084c <sigill_handler-0x29f7b4>
    1a2c:	0030054a 	0x30054a
    1a30:	ba010402 	swr	at,1026(s0)
    1a34:	02002c05 	0x2002c05
    1a38:	05f20104 	bltzall	t7,1e4c <sigill_handler-0x3fe1b4>
    1a3c:	13058507 	beq	t8,a1,fffe2e5c <end+0xffbd8e5c>
    1a40:	82100582 	lb	s0,1410(s0)
    1a44:	054a0505 	tlti	t2,1285
    1a48:	0a05bb31 	j	816ecc4 <end+0x7d64cc4>
    1a4c:	821305ba 	lb	s3,1466(s0)
    1a50:	054a0805 	tlti	t2,2053
    1a54:	20058231 	addi	a1,zero,-32207
    1a58:	4b05054a 	c2	0x105054a
    1a5c:	05820d05 	bltzl	t4,4e74 <sigill_handler-0x3fb18c>
    1a60:	04020030 	bltzl	zero,1b24 <sigill_handler-0x3fe4dc>
    1a64:	ba790302 	swr	t9,770(s3)
    1a68:	02000f05 	0x2000f05
    1a6c:	05ba0104 	0x5ba0104
    1a70:	04020002 	bltzl	zero,1a7c <sigill_handler-0x3fe584>
    1a74:	17054a01 	bne	t8,a1,1427c <sigill_handler-0x3ebd84>
    1a78:	03040200 	0x3040200
    1a7c:	001305f2 	tlt	zero,s3,0x17
    1a80:	f2030402 	0xf2030402
    1a84:	0a030905 	j	80c2414 <end+0x7cb8414>
    1a88:	4f010582 	c3	0x1010582
    1a8c:	0d031f05 	jal	40c7c14 <end+0x3cbdc14>
    1a90:	0b057408 	j	c15d020 <end+0xbd53020>
    1a94:	05054208 	0x5054208
    1a98:	0a057408 	j	815d020 <end+0x7d53020>
    1a9c:	bd1505bb 	cache	0x15,1467(t0)
    1aa0:	3e080905 	0x3e080905
    1aa4:	02000105 	0x2000105
    1aa8:	3d080104 	0x3d080104
    1aac:	0b032605 	j	c0c9814 <end+0xbcbf814>
    1ab0:	02057408 	0x2057408
    1ab4:	05f33e08 	bgezall	t7,112d8 <sigill_handler-0x3eed28>
    1ab8:	05ad0809 	0x5ad0809
    1abc:	38054b01 	xori	a1,zero,0x4b01
    1ac0:	09057608 	j	415d820 <end+0x3d53820>
    1ac4:	01053d08 	0x1053d08
    1ac8:	0014024b 	0x14024b
    1acc:	017b0101 	0x17b0101
    1ad0:	00030000 	sll	zero,v1,0x0
    1ad4:	0000008a 	0x8a
    1ad8:	0efb0101 	jal	bec0404 <end+0xbab6404>
    1adc:	0101000d 	break	0x101
    1ae0:	00000101 	0x101
    1ae4:	00000100 	sll	zero,zero,0x4
    1ae8:	73752f01 	0x73752f01
    1aec:	696c2f72 	0x696c2f72
    1af0:	63672f62 	0x63672f62
    1af4:	72632d63 	0x72632d63
    1af8:	2f73736f 	sltiu	s3,k1,29551
    1afc:	7370696d 	0x7370696d
    1b00:	6e696c2d 	0x6e696c2d
    1b04:	672d7875 	0x672d7875
    1b08:	312f756e 	andi	t7,t1,0x756e
    1b0c:	6e692f30 	0x6e692f30
    1b10:	64756c63 	0x64756c63
    1b14:	2e2e0065 	sltiu	t6,s1,101
    1b18:	636e692f 	0x636e692f
    1b1c:	6564756c 	0x6564756c
    1b20:	6c650000 	0x6c650000
    1b24:	616f6c66 	0x616f6c66
    1b28:	2e726564 	sltiu	s2,s3,25956
    1b2c:	00000063 	0x63
    1b30:	64747300 	0x64747300
    1b34:	2e666564 	sltiu	a2,s3,25956
    1b38:	00010068 	0x10068
    1b3c:	64747300 	0x64747300
    1b40:	2d746e69 	sltiu	s4,t3,28265
    1b44:	2e636367 	sltiu	v1,s3,25447
    1b48:	00010068 	0x10068
    1b4c:	70797400 	0x70797400
    1b50:	682e7365 	0x682e7365
    1b54:	00000200 	sll	zero,zero,0x8
    1b58:	2e666c65 	sltiu	a2,s3,27749
    1b5c:	00020068 	0x20068
    1b60:	3d050000 	0x3d050000
    1b64:	70020500 	0x70020500
    1b68:	15004049 	bnez	t0,11c90 <sigill_handler-0x3ee370>
    1b6c:	3d081405 	0x3d081405
    1b70:	05830505 	bgezl	t4,2f88 <sigill_handler-0x3fd078>
    1b74:	04020031 	bltzl	zero,1c3c <sigill_handler-0x3fe3c4>
    1b78:	2105f201 	addi	a1,t0,-3583
    1b7c:	01040200 	0x1040200
    1b80:	00130582 	srl	zero,s3,0x16
    1b84:	bb020402 	swr	v0,1026(t8)
    1b88:	02004605 	0x2004605
    1b8c:	05810204 	bgez	t4,23a0 <sigill_handler-0x3fdc60>
    1b90:	2805bb38 	slti	a1,zero,-17608
    1b94:	00130582 	srl	zero,s3,0x16
    1b98:	bb010402 	swr	at,1026(t8)
    1b9c:	02004d05 	0x2004d05
    1ba0:	05810104 	bgez	t4,1fb4 <sigill_handler-0x3fe04c>
    1ba4:	2805bb2f 	slti	a1,zero,-17617
    1ba8:	bb0a0582 	swr	t2,1410(t8)
    1bac:	05bc0905 	0x5bc0905
    1bb0:	56054b01 	bnel	s0,a1,147b8 <sigill_handler-0x3eb848>
    1bb4:	3c080d03 	lui	t0,0xd03
    1bb8:	e5080905 	swc1	$f8,2309(t0)
    1bbc:	0805bbbb 	j	16eeec <sigill_handler-0x291114>
    1bc0:	120583bb 	beq	s0,a1,fffe2ab0 <end+0xffbd8ab0>
    1bc4:	4a050582 	c2	0x50582
    1bc8:	05830805 	bgezl	t4,3be0 <sigill_handler-0x3fc420>
    1bcc:	0505bf09 	0x505bf09
    1bd0:	bc0705bb 	cache	0x7,1467(zero)
    1bd4:	2c020c05 	sltiu	v0,zero,3077
    1bd8:	02060511 	0x2060511
    1bdc:	0b05122c 	j	c1448b0 <end+0xbd3a8b0>
    1be0:	bf3605bc 	cache	0x16,1468(t9)
    1be4:	02001405 	0x2001405
    1be8:	05ba0104 	0x5ba0104
    1bec:	04020036 	bltzl	zero,1cc8 <sigill_handler-0x3fe338>
    1bf0:	12340202 	beq	s1,s4,23fc <sigill_handler-0x3fdc04>
    1bf4:	02000905 	0x2000905
    1bf8:	054a0404 	tlti	t2,1028
    1bfc:	04020002 	bltzl	zero,1c08 <sigill_handler-0x3fe3f8>
    1c00:	0c054a04 	jal	152810 <sigill_handler-0x2ad7f0>
    1c04:	08350583 	j	d4160c <end+0x93760c>
    1c08:	020c0574 	teq	s0,t4,0x15
    1c0c:	0605122c 	0x605122c
    1c10:	05122802 	bltzall	t0,bc1c <sigill_handler-0x3f43e4>
    1c14:	4b05bc0b 	c2	0x105bc0b
    1c18:	06040200 	0x6040200
    1c1c:	000205b7 	0x205b7
    1c20:	ba050402 	swr	a1,1026(s0)
    1c24:	44080805 	0x44080805
    1c28:	05830c05 	bgezl	t4,4c40 <sigill_handler-0x3fb3c0>
    1c2c:	0c05ba32 	jal	16e8c8 <sigill_handler-0x291738>
    1c30:	05122c02 	bltzall	t0,cc3c <sigill_handler-0x3f33c4>
    1c34:	12240206 	beq	s1,a0,2450 <sigill_handler-0x3fdbb0>
    1c38:	05bb0b05 	0x5bb0b05
    1c3c:	0805bc05 	j	16f014 <sigill_handler-0x290fec>
    1c40:	080905b6 	j	2416d8 <sigill_handler-0x1be928>
    1c44:	4b010542 	c2	0x1010542
    1c48:	01001802 	0x1001802
    1c4c:	00036901 	0x36901
    1c50:	79000300 	0x79000300
    1c54:	01000000 	0x1000000
    1c58:	0d0efb01 	jal	43bec04 <end+0x3fb4c04>
    1c5c:	01010100 	0x1010100
    1c60:	00000001 	movf	zero,zero,$fcc0
    1c64:	01000001 	movf	zero,t0,$fcc0
    1c68:	7273752f 	0x7273752f
    1c6c:	62696c2f 	0x62696c2f
    1c70:	6363672f 	0x6363672f
    1c74:	6f72632d 	0x6f72632d
    1c78:	6d2f7373 	0x6d2f7373
    1c7c:	2d737069 	sltiu	s3,t3,28777
    1c80:	756e696c 	jalx	5b9a5b0 <end+0x57905b0>
    1c84:	6e672d78 	0x6e672d78
    1c88:	30312f75 	andi	s1,at,0x2f75
    1c8c:	636e692f 	0x636e692f
    1c90:	6564756c 	0x6564756c
    1c94:	2f2e2e00 	sltiu	t6,t9,11776
    1c98:	6c636e69 	0x6c636e69
    1c9c:	00656475 	0x656475
    1ca0:	69727000 	0x69727000
    1ca4:	632e746e 	0x632e746e
    1ca8:	00000000 	nop
    1cac:	61647473 	0x61647473
    1cb0:	682e6772 	0x682e6772
    1cb4:	00000100 	sll	zero,zero,0x4
    1cb8:	64647473 	0x64647473
    1cbc:	682e6665 	0x682e6665
    1cc0:	00000100 	sll	zero,zero,0x4
    1cc4:	6e697270 	0x6e697270
    1cc8:	00682e74 	teq	v1,t0,0xb9
    1ccc:	00000002 	srl	zero,zero,0x0
    1cd0:	05004d05 	bltz	t0,150e8 <sigill_handler-0x3eaf18>
    1cd4:	404cd002 	0x404cd002
    1cd8:	0f051900 	jal	c146400 <end+0xbd3c400>
    1cdc:	e4080e03 	swc1	$f8,3587(zero)
    1ce0:	05830805 	bgezl	t4,3cf8 <sigill_handler-0x3fc308>
    1ce4:	0a058307 	j	8160c1c <end+0x7d56c1c>
    1ce8:	820805b9 	lb	t0,1465(s0)
    1cec:	02001b05 	0x2001b05
    1cf0:	05ba0104 	0x5ba0104
    1cf4:	04020017 	bltzl	zero,1d54 <sigill_handler-0x3fe2ac>
    1cf8:	16058201 	bne	s0,a1,fffe2500 <end+0xffbd8500>
    1cfc:	ba030587 	swr	v1,1415(s0)
    1d00:	af080705 	sw	t0,1797(t8)
    1d04:	05820505 	bltzl	t4,311c <sigill_handler-0x3fcee4>
    1d08:	0b058506 	j	c161418 <end+0xbd57418>
    1d0c:	4b0805bd 	c2	0x10805bd
    1d10:	05830705 	bgezl	t4,3928 <sigill_handler-0x3fc6d8>
    1d14:	0c058205 	jal	160814 <sigill_handler-0x29f7ec>
    1d18:	830705bb 	lb	a3,1467(t8)
    1d1c:	3e080c05 	0x3e080c05
    1d20:	05820a05 	bltzl	t4,4538 <sigill_handler-0x3fbac8>
    1d24:	0705bb09 	0x705bb09
    1d28:	be090583 	cache	0x9,1411(s0)
    1d2c:	bb4b0805 	swr	t3,2053(k0)
    1d30:	05831205 	bgezl	t4,6548 <sigill_handler-0x3f9ab8>
    1d34:	05740817 	0x5740817
    1d38:	0705820a 	0x705820a
    1d3c:	bb060583 	swr	a2,1411(t8)
    1d40:	05b70805 	0x5b70805
    1d44:	04020012 	bltzl	zero,1d90 <sigill_handler-0x3fe270>
    1d48:	0d05f201 	jal	417c804 <end+0x3d72804>
    1d4c:	4b0705f9 	c2	0x10705f9
    1d50:	05820505 	bltzl	t4,3168 <sigill_handler-0x3fce98>
    1d54:	0705bb0e 	0x705bb0e
    1d58:	bd0c0583 	cache	0xc,1411(t0)
    1d5c:	054b0b05 	tltiu	t2,2821
    1d60:	07058203 	0x7058203
    1d64:	05145402 	0x5145402
    1d68:	ae08bb09 	sw	t0,-17655(s0)
    1d6c:	3e080405 	0x3e080405
    1d70:	05133c02 	bgezall	t0,10d7c <sigill_handler-0x3ef284>
    1d74:	09058607 	j	416181c <end+0x3d5781c>
    1d78:	05ae08bb 	tnei	t5,2235
    1d7c:	08090306 	j	240c18 <sigill_handler-0x1bf3e8>
    1d80:	bb0f053c 	swr	t7,1340(t8)
    1d84:	05830a05 	bgezl	t4,459c <sigill_handler-0x3fba64>
    1d88:	4002bc04 	0x4002bc04
    1d8c:	86070513 	lh	a3,1299(s0)
    1d90:	08bb0905 	j	2ec2414 <end+0x2ab8414>
    1d94:	080405ae 	j	1016b8 <sigill_handler-0x2fe948>
    1d98:	133c023e 	beq	t9,gp,2694 <sigill_handler-0x3fd96c>
    1d9c:	05860705 	0x5860705
    1da0:	ae08bb09 	sw	t0,-17655(s0)
    1da4:	3e080405 	0x3e080405
    1da8:	05133c02 	bgezall	t0,10db4 <sigill_handler-0x3ef24c>
    1dac:	09058507 	j	416141c <end+0x3d5741c>
    1db0:	05ae08bb 	tnei	t5,2235
    1db4:	023e0804 	sllv	at,s8,s1
    1db8:	0705133c 	0x705133c
    1dbc:	bb090585 	swr	t1,1413(t8)
    1dc0:	0405ae08 	0x405ae08
    1dc4:	40023e08 	0x40023e08
    1dc8:	850e0513 	lh	t6,1299(t0)
    1dcc:	05f20605 	bltzall	t7,35e4 <sigill_handler-0x3fca1c>
    1dd0:	24024b04 	li	v0,19204
    1dd4:	85060513 	lh	a2,1299(t0)
    1dd8:	3d080405 	0x3d080405
    1ddc:	0705e508 	0x705e508
    1de0:	bb040585 	swr	a0,1413(t8)
    1de4:	08060586 	j	181618 <sigill_handler-0x27e9e8>
    1de8:	030b0576 	tne	t8,t3,0x15
    1dec:	05ba7efb 	0x5ba7efb
    1df0:	820c0303 	lb	t4,771(s0)
    1df4:	fb030105 	sdc2	$3,261(t8)
    1df8:	52054a00 	beql	s0,a1,145fc <sigill_handler-0x3eba04>
    1dfc:	0505af08 	0x505af08
    1e00:	05152402 	0x5152402
    1e04:	0d05bb0a 	jal	416ec28 <end+0x3d64c28>
    1e08:	83050584 	lb	a1,1412(t8)
    1e0c:	05bb0305 	0x5bb0305
    1e10:	05ad080a 	0x5ad080a
    1e14:	04058203 	0x4058203
    1e18:	03040200 	0x3040200
    1e1c:	001c0583 	sra	zero,gp,0x16
    1e20:	08030402 	j	c1008 <sigill_handler-0x33eff8>
    1e24:	000305ab 	0x305ab
    1e28:	ba010402 	swr	at,1026(s0)
    1e2c:	09030105 	j	40c0414 <end+0x3cb6414>
    1e30:	0a053c08 	j	814f020 <end+0x7d45020>
    1e34:	4a03057d 	c2	0x3057d
    1e38:	02000405 	0x2000405
    1e3c:	05830304 	bgezl	t4,2a50 <sigill_handler-0x3fd5b0>
    1e40:	04020020 	bltzl	zero,1ec4 <sigill_handler-0x3fe13c>
    1e44:	05ab0803 	tltiu	t5,2051
    1e48:	0402001a 	bltzl	zero,1eb4 <sigill_handler-0x3fe14c>
    1e4c:	0305ba01 	0x305ba01
    1e50:	01040200 	0x1040200
    1e54:	0105f582 	0x105f582
    1e58:	5805ae08 	0x5805ae08
    1e5c:	0605ae08 	0x605ae08
    1e60:	0e05e608 	jal	8179820 <end+0x7d6f820>
    1e64:	8308054b 	lb	t0,1355(t8)
    1e68:	05830605 	bgezl	t4,3680 <sigill_handler-0x3fc980>
    1e6c:	0905b90c 	j	416e430 <end+0x3d64430>
    1e70:	4a0805ba 	c2	0x805ba
    1e74:	05850505 	0x5850505
    1e78:	053d080a 	0x53d080a
    1e7c:	03058505 	0x3058505
    1e80:	080a05bb 	j	2816ec <sigill_handler-0x17e914>
    1e84:	820305ad 	lb	v1,1453(s0)
    1e88:	02000405 	0x2000405
    1e8c:	05830304 	bgezl	t4,2aa0 <sigill_handler-0x3fd560>
    1e90:	0402001e 	bltzl	zero,1f0c <sigill_handler-0x3fe0f4>
    1e94:	05ab0803 	tltiu	t5,2051
    1e98:	04020003 	bltzl	zero,1ea8 <sigill_handler-0x3fe158>
    1e9c:	0105ba01 	0x105ba01
    1ea0:	3c080903 	lui	t0,0x903
    1ea4:	057d0a05 	0x57d0a05
    1ea8:	04054a03 	0x4054a03
    1eac:	03040200 	0x3040200
    1eb0:	00220583 	0x220583
    1eb4:	08030402 	j	c1008 <sigill_handler-0x33eff8>
    1eb8:	001a05ab 	0x1a05ab
    1ebc:	ba010402 	swr	at,1026(s0)
    1ec0:	02000305 	0x2000305
    1ec4:	f5ba0104 	sdc1	$f26,260(t5)
    1ec8:	ae080105 	sw	t0,261(s0)
    1ecc:	af082d05 	sw	t0,11525(t8)
    1ed0:	05122402 	bltzall	t0,aedc <sigill_handler-0x3f5124>
    1ed4:	820b0306 	lb	t3,774(s0)
    1ed8:	054b1205 	tltiu	t2,4613
    1edc:	08058207 	j	16081c <sigill_handler-0x29f7e4>
    1ee0:	05136002 	bgezall	t0,19eec <sigill_handler-0x3e6114>
    1ee4:	0705860f 	0x705860f
    1ee8:	06053c08 	0x6053c08
    1eec:	f30f054b 	0xf30f054b
    1ef0:	05f20605 	bltzall	t7,3708 <sigill_handler-0x3fc8f8>
    1ef4:	0905ba0f 	j	416e83c <end+0x3d6483c>
    1ef8:	bb0d0582 	swr	t5,1410(t8)
    1efc:	05bb1505 	0x5bb1505
    1f00:	1505f206 	bne	t0,a1,ffffe71c <end+0xffbf471c>
    1f04:	820905ba 	lb	t1,1466(s0)
    1f08:	05bc1505 	0x5bc1505
    1f0c:	1505f206 	bne	t0,a1,ffffe728 <end+0xffbf4728>
    1f10:	820905ba 	lb	t1,1466(s0)
    1f14:	054c0505 	teqi	t2,1285
    1f18:	05ad0802 	0x5ad0802
    1f1c:	05bbbc05 	0x5bbbc05
    1f20:	0f05ba08 	jal	c16e820 <end+0xbd64820>
    1f24:	f3050586 	0xf3050586
    1f28:	3d080a05 	0x3d080a05
    1f2c:	05860505 	0x5860505
    1f30:	0505bb08 	0x505bb08
    1f34:	000f0584 	0xf0584
    1f38:	ba010402 	swr	at,1026(s0)
    1f3c:	02001b05 	0x2001b05
    1f40:	05ba0204 	0x5ba0204
    1f44:	0305f30a 	0x305f30a
    1f48:	000b05ba 	0xb05ba
    1f4c:	83030402 	lb	v1,1026(t8)
    1f50:	02002f05 	0x2002f05
    1f54:	3b080304 	xori	t0,t8,0x304
    1f58:	02002905 	0x2002905
    1f5c:	05ba0104 	0x5ba0104
    1f60:	04020003 	bltzl	zero,1f70 <sigill_handler-0x3fe090>
    1f64:	0e058201 	jal	8160804 <end+0x7d56804>
    1f68:	821305f5 	lb	s3,1525(s0)
    1f6c:	76080a05 	jalx	8202814 <end+0x7df8814>
    1f70:	05820305 	bltzl	t4,2b88 <sigill_handler-0x3fd478>
    1f74:	0402000b 	bltzl	zero,1fa4 <sigill_handler-0x3fe05c>
    1f78:	27058303 	addiu	a1,t8,-31997
    1f7c:	03040200 	0x3040200
    1f80:	03053b08 	0x3053b08
    1f84:	01040200 	0x1040200
    1f88:	080605ba 	j	1816e8 <sigill_handler-0x27e918>
    1f8c:	4c050542 	0x4c050542
    1f90:	08bb0705 	j	2ec1c14 <end+0x2ab7c14>
    1f94:	be08053e 	cache	0x8,1342(s0)
    1f98:	08130583 	j	4c160c <end+0xb760c>
    1f9c:	f20e053d 	0xf20e053d
    1fa0:	05f30c05 	bgezall	t7,4fb8 <sigill_handler-0x3fb048>
    1fa4:	053d0808 	0x53d0808
    1fa8:	0805bb06 	j	16ec18 <sigill_handler-0x2913e8>
    1fac:	080205b5 	j	816d4 <sigill_handler-0x37e92c>
    1fb0:	08010544 	j	41510 <sigill_handler-0x3beaf0>
    1fb4:	002002e5 	0x2002e5
    1fb8:	02310101 	0x2310101
    1fbc:	00030000 	sll	zero,v1,0x0
    1fc0:	0000007e 	0x7e
    1fc4:	0efb0101 	jal	bec0404 <end+0xbab6404>
    1fc8:	0101000d 	break	0x101
    1fcc:	00000101 	0x101
    1fd0:	00000100 	sll	zero,zero,0x4
    1fd4:	73752f01 	0x73752f01
    1fd8:	696c2f72 	0x696c2f72
    1fdc:	63672f62 	0x63672f62
    1fe0:	72632d63 	0x72632d63
    1fe4:	2f73736f 	sltiu	s3,k1,29551
    1fe8:	7370696d 	0x7370696d
    1fec:	6e696c2d 	0x6e696c2d
    1ff0:	672d7875 	0x672d7875
    1ff4:	312f756e 	andi	t7,t1,0x756e
    1ff8:	6e692f30 	0x6e692f30
    1ffc:	64756c63 	0x64756c63
    2000:	2e2e0065 	sltiu	t6,s1,101
    2004:	636e692f 	0x636e692f
    2008:	6564756c 	0x6564756c
    200c:	74730000 	jalx	1cc0000 <end+0x18b6000>
    2010:	676e6972 	0x676e6972
    2014:	0000632e 	0x632e
    2018:	74730000 	jalx	1cc0000 <end+0x18b6000>
    201c:	66656464 	0x66656464
    2020:	0100682e 	0x100682e
    2024:	74730000 	jalx	1cc0000 <end+0x18b6000>
    2028:	746e6964 	jalx	1b9a590 <end+0x1790590>
    202c:	6363672d 	0x6363672d
    2030:	0100682e 	0x100682e
    2034:	79740000 	0x79740000
    2038:	2e736570 	sltiu	s3,s3,25968
    203c:	00020068 	0x20068
    2040:	34050000 	li	a1,0x0
    2044:	40020500 	0x40020500
    2048:	14004059 	bnez	zero,121b0 <sigill_handler-0x3ede50>
    204c:	75080805 	jalx	4202014 <end+0x3df8014>
    2050:	f4070583 	sdc1	$f7,1411(zero)
    2054:	054a1c05 	tlti	t2,7173
    2058:	05054a18 	0x5054a18
    205c:	83090582 	lb	t1,1410(t8)
    2060:	05831605 	bgezl	t4,7878 <sigill_handler-0x3f8788>
    2064:	1505ba05 	bne	t0,a1,ffff087c <end+0xffbe687c>
    2068:	4a1305ba 	c2	0x1305ba
    206c:	05490905 	tgeiu	t2,2309
    2070:	053f080a 	0x53f080a
    2074:	0405be15 	0x405be15
    2078:	ba1405ba 	swr	s4,1466(s0)
    207c:	054a1205 	tlti	t2,4613
    2080:	1605490a 	bne	s0,a1,144ac <sigill_handler-0x3ebb54>
    2084:	4a08054a 	c2	0x8054a
    2088:	02001b05 	0x2001b05
    208c:	05820104 	bltzl	t4,24a0 <sigill_handler-0x3fdb60>
    2090:	05410808 	bgez	t2,40b4 <sigill_handler-0x3fbf4c>
    2094:	14058316 	bne	zero,a1,fffe2cf0 <end+0xffbd8cf0>
    2098:	83070582 	lb	a3,1410(t8)
    209c:	b70d05bb 	0xb70d05bb
    20a0:	f9820805 	sdc2	$2,2053(t4)
    20a4:	05831505 	bgezl	t4,74bc <sigill_handler-0x3f8b44>
    20a8:	1405ba04 	bne	zero,a1,ffff08bc <end+0xffbe68bc>
    20ac:	4a1205ba 	c2	0x1205ba
    20b0:	05490805 	tgeiu	t2,2053
    20b4:	053f0809 	0x53f0809
    20b8:	2a054b01 	slti	a1,s0,19201
    20bc:	08053e08 	j	14f820 <sigill_handler-0x2b07e0>
    20c0:	05837508 	bgezl	t4,1f4e4 <sigill_handler-0x3e0b1c>
    20c4:	1705f309 	bne	t8,a1,ffffecec <end+0xffbf4cec>
    20c8:	4a1e0583 	c2	0x1e0583
    20cc:	05821705 	bltzl	t4,7ce4 <sigill_handler-0x3f831c>
    20d0:	23054a2a 	addi	a1,t8,18986
    20d4:	4a370582 	c2	0x370582
    20d8:	05823005 	bltzl	t4,e0f0 <sigill_handler-0x3f1f10>
    20dc:	08054a0b 	j	15282c <sigill_handler-0x2ad7d4>
    20e0:	8304054c 	lb	a0,1356(t8)
    20e4:	05ba1405 	0x5ba1405
    20e8:	1605810a 	bne	s0,a1,fffe2514 <end+0xffbd8514>
    20ec:	4a08054a 	c2	0x8054a
    20f0:	02001b05 	0x2001b05
    20f4:	05820104 	bltzl	t4,2508 <sigill_handler-0x3fdaf8>
    20f8:	05410808 	bgez	t2,411c <sigill_handler-0x3fbee4>
    20fc:	07058314 	0x7058314
    2100:	b80d05bb 	swr	t5,1467(zero)
    2104:	f8820805 	sdc2	$2,2053(a0)
    2108:	05830405 	bgezl	t4,3120 <sigill_handler-0x3fcee0>
    210c:	0805ba14 	j	16e850 <sigill_handler-0x2917b0>
    2110:	08090581 	j	241604 <sigill_handler-0x1be9fc>
    2114:	4b01053f 	c2	0x101053f
    2118:	3e081e05 	0x3e081e05
    211c:	05f50905 	0x5f50905
    2120:	04054a02 	0x4054a02
    2124:	03040200 	0x3040200
    2128:	00130583 	sra	zero,s3,0x16
    212c:	b9030402 	swr	v1,1026(t0)
    2130:	02000e05 	0x2000e05
    2134:	05ba0104 	0x5ba0104
    2138:	04020002 	bltzl	zero,2144 <sigill_handler-0x3fdebc>
    213c:	09058201 	j	4160804 <end+0x3d56804>
    2140:	4b010586 	c2	0x1010586
    2144:	3e082a05 	0x3e082a05
    2148:	3d080805 	0x3d080805
    214c:	00170584 	0x170584
    2150:	4a010402 	c2	0x10402
    2154:	02000e05 	0x2000e05
    2158:	05ba0104 	0x5ba0104
    215c:	04020013 	bltzl	zero,21ac <sigill_handler-0x3fde54>
    2160:	1105ba01 	beq	t0,a1,ffff0968 <end+0xffbe6968>
    2164:	01040200 	0x1040200
    2168:	000a054a 	0xa054a
    216c:	4a010402 	c2	0x10402
    2170:	02000805 	0x2000805
    2174:	054a0104 	tlti	t2,260
    2178:	01058509 	0x1058509
    217c:	082a054b 	j	a8152c <end+0x67752c>
    2180:	0802053e 	j	814f8 <sigill_handler-0x37eb08>
    2184:	8307053d 	lb	a3,1341(t8)
    2188:	05ba0605 	0x5ba0605
    218c:	0e05bb0b 	jal	816ec2c <end+0x7d64c2c>
    2190:	000905b8 	0x905b8
    2194:	ba010402 	swr	at,1026(s0)
    2198:	02000205 	0x2000205
    219c:	05820104 	bltzl	t4,25b0 <sigill_handler-0x3fda50>
    21a0:	01058709 	0x1058709
    21a4:	082a054b 	j	a8152c <end+0x67752c>
    21a8:	0808053e 	j	2014f8 <sigill_handler-0x1feb08>
    21ac:	8304053d 	lb	a0,1341(t8)
    21b0:	b9ba0905 	swr	k0,2309(t5)
    21b4:	05820805 	bltzl	t4,41cc <sigill_handler-0x3fbe34>
    21b8:	0402000f 	bltzl	zero,21f8 <sigill_handler-0x3fde08>
    21bc:	15058201 	bne	t0,a1,fffe29c4 <end+0xffbd89c4>
    21c0:	01040200 	0x1040200
    21c4:	000c0582 	srl	zero,t4,0x16
    21c8:	82010402 	lb	at,1026(s0)
    21cc:	05860d05 	0x5860d05
    21d0:	0505ba19 	0x505ba19
    21d4:	bb0a05ba 	swr	t2,1466(t8)
    21d8:	05bd0d05 	0x5bd0d05
    21dc:	0505ba19 	0x505ba19
    21e0:	bb0a05ba 	swr	t2,1466(t8)
    21e4:	05bd0905 	0x5bd0905
    21e8:	14024b01 	bne	zero,v0,14df0 <sigill_handler-0x3eb210>
    21ec:	地址 0x00000000000021ec 越界。


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	676e6f6c 	0x676e6f6c
   4:	6e6f6c20 	0x6e6f6c20
   8:	6e692067 	0x6e692067
   c:	69730074 	0x69730074
  10:	6c6c6967 	0x6c6c6967
  14:	6e61685f 	0x6e61685f
  18:	72656c64 	0x72656c64
  1c:	695f7500 	0x695f7500
  20:	6c00746e 	0x6c00746e
  24:	20676e6f 	addi	a3,v1,28271
  28:	676e6f6c 	0x676e6f6c
  2c:	736e7520 	0x736e7520
  30:	656e6769 	0x656e6769
  34:	6e692064 	0x6e692064
  38:	69730074 	0x69730074
  3c:	746e6967 	jalx	1b9a59c <end+0x179059c>
  40:	6e61685f 	0x6e61685f
  44:	72656c64 	0x72656c64
  48:	6f682f00 	0x6f682f00
  4c:	672f656d 	0x672f656d
  50:	322f7469 	andi	t7,s1,0x7469
  54:	34373331 	ori	s7,at,0x3331
  58:	2f373630 	sltiu	s7,t9,13872
  5c:	72657375 	0x72657375
  60:	67697300 	0x67697300
  64:	646c6863 	0x646c6863
  68:	6e61685f 	0x6e61685f
  6c:	72656c64 	0x72656c64
  70:	736e7500 	0x736e7500
  74:	656e6769 	0x656e6769
  78:	68632064 	0x68632064
  7c:	73007261 	0x73007261
  80:	65736769 	0x65736769
  84:	00745f74 	teq	v1,s4,0x17d
  88:	6d5f6173 	0x6d5f6173
  8c:	006b7361 	0x6b7361
  90:	20554e47 	addi	s5,v0,20039
  94:	20393943 	addi	t9,at,14659
  98:	332e3031 	andi	t6,t9,0x3031
  9c:	2d20302e 	sltiu	zero,t1,12334
  a0:	20302047 	addi	s0,at,8263
  a4:	3020472d 	andi	zero,at,0x472d
  a8:	656d2d20 	0x656d2d20
  ac:	6d2d206c 	0x6d2d206c
  b0:	68637261 	0x68637261
  b4:	636b343d 	0x636b343d
  b8:	6e6d2d20 	0x6e6d2d20
  bc:	62612d6f 	0x62612d6f
  c0:	6c616369 	0x6c616369
  c4:	2d20736c 	sltiu	zero,t1,29548
  c8:	6f67786d 	0x6f67786d
  cc:	6d2d2074 	0x6d2d2074
  d0:	662d6f6e 	0x662d6f6e
  d4:	722d7869 	0x722d7869
  d8:	30303034 	andi	s0,at,0x3034
  dc:	616d2d20 	0x616d2d20
  e0:	3d686372 	0x3d686372
  e4:	20636b34 	addi	v1,v1,27444
  e8:	70666d2d 	0x70666d2d
  ec:	2d207878 	sltiu	zero,t1,30840
  f0:	736c6c6d 	0x736c6c6d
  f4:	6d2d2063 	0x6d2d2063
  f8:	6c2d6f6e 	0x6c2d6f6e
  fc:	2d316378 	sltiu	s1,t1,25464
 100:	31637873 	andi	v1,t3,0x7873
 104:	696d2d20 	0x696d2d20
 108:	32337370 	andi	s3,s1,0x7370
 10c:	6e6d2d20 	0x6e6d2d20
 110:	68732d6f 	0x68732d6f
 114:	64657261 	0x64657261
 118:	616d2d20 	0x616d2d20
 11c:	333d6962 	andi	sp,t9,0x6962
 120:	672d2032 	0x672d2032
 124:	67672d20 	0x67672d20
 128:	2d206264 	sltiu	zero,t1,25188
 12c:	672d2067 	0x672d2067
 130:	20626467 	addi	v0,v1,25703
 134:	20304f2d 	addi	s0,at,20269
 138:	20304f2d 	addi	s0,at,20269
 13c:	6474732d 	0x6474732d
 140:	756e673d 	jalx	5b99cf4 <end+0x578fcf4>
 144:	2d203939 	sltiu	zero,t1,14649
 148:	3d647473 	0x3d647473
 14c:	39756e67 	xori	s5,t3,0x6e67
 150:	662d2039 	0x662d2039
 154:	702d6f6e 	0x702d6f6e
 158:	2d206369 	sltiu	zero,t1,25449
 15c:	65726666 	0x65726666
 160:	61747365 	0x61747365
 164:	6e69646e 	0x6e69646e
 168:	662d2067 	0x662d2067
 16c:	732d6f6e 	0x732d6f6e
 170:	6b636174 	0x6b636174
 174:	6f72702d 	0x6f72702d
 178:	74636574 	jalx	18d95d0 <end+0x14cf5d0>
 17c:	2d20726f 	sltiu	zero,t1,29295
 180:	2d6f6e66 	sltiu	t7,t3,28262
 184:	6c697562 	0x6c697562
 188:	006e6974 	teq	v1,t6,0x1a5
 18c:	726f6873 	0x726f6873
 190:	6e752074 	0x6e752074
 194:	6e676973 	0x6e676973
 198:	69206465 	0x69206465
 19c:	7400746e 	jalx	1d1b8 <sigill_handler-0x3e2e48>
 1a0:	73747365 	0x73747365
 1a4:	6c696769 	0x6c696769
 1a8:	00632e6c 	0x632e6c
 1ac:	726f6873 	0x726f6873
 1b0:	6e692074 	0x6e692074
 1b4:	61730074 	0x61730074
 1b8:	6e61685f 	0x6e61685f
 1bc:	72656c64 	0x72656c64
 1c0:	62696c00 	0x62696c00
 1c4:	746e652f 	jalx	1b994bc <end+0x178f4bc>
 1c8:	532e7972 	beql	t9,t6,1e794 <sigill_handler-0x3e186c>
 1cc:	554e4700 	bnel	t2,t6,11dd0 <sigill_handler-0x3ee230>
 1d0:	20534120 	addi	s3,v0,16672
 1d4:	38332e32 	xori	s3,at,0x2e32
 1d8:	62696c00 	0x62696c00
 1dc:	7379732f 	0x7379732f
 1e0:	6c6c6163 	0x6c6c6163
 1e4:	6172775f 	0x6172775f
 1e8:	00532e70 	tge	v0,s3,0xb9
 1ec:	657a6973 	0x657a6973
 1f0:	5f00745f 	bgtzl	t8,1d370 <sigill_handler-0x3e2c90>
 1f4:	6975625f 	0x6975625f
 1f8:	6e69746c 	0x6e69746c
 1fc:	5f61765f 	0x5f61765f
 200:	7473696c 	jalx	1cda5b0 <end+0x18d05b0>
 204:	62656400 	0x62656400
 208:	6f5f6775 	0x6f5f6775
 20c:	75707475 	jalx	5c1d1d4 <end+0x58131d4>
 210:	696c0074 	0x696c0074
 214:	65642f62 	0x65642f62
 218:	66677562 	0x66677562
 21c:	5f00632e 	bgtzl	t8,18ed8 <sigill_handler-0x3e7128>
 220:	72657375 	0x72657375
 224:	6e61705f 	0x6e61705f
 228:	5f006369 	bgtzl	t8,18fd0 <sigill_handler-0x3e7030>
 22c:	756e675f 	jalx	5b99d7c <end+0x578fd7c>
 230:	61765f63 	0x61765f63
 234:	73696c5f 	0x73696c5f
 238:	755f0074 	jalx	57c01d0 <end+0x53b61d0>
 23c:	5f726573 	0x5f726573
 240:	746c6168 	jalx	1b185a0 <end+0x170e5a0>
 244:	6e696c00 	0x6e696c00
 248:	64760065 	0x64760065
 24c:	67756265 	0x67756265
 250:	65640066 	0x65640066
 254:	5f677562 	0x5f677562
 258:	00787463 	0x787463
 25c:	75626564 	jalx	5899590 <end+0x548f590>
 260:	6c665f67 	0x6c665f67
 264:	00687375 	0x687375
 268:	5f307063 	0x5f307063
 26c:	73756163 	0x73756163
 270:	6e650065 	0x6e650065
 274:	73755f76 	0x73755f76
 278:	745f7265 	jalx	17dc994 <end+0x13d2994>
 27c:	6d5f626c 	0x6d5f626c
 280:	655f646f 	0x655f646f
 284:	7972746e 	0x7972746e
 288:	735f5f00 	0x735f5f00
 28c:	63007465 	0x63007465
 290:	625f3070 	0x625f3070
 294:	61766461 	0x61766461
 298:	00726464 	0x726464
 29c:	69676973 	0x69676973
 2a0:	6d656d73 	0x6d656d73
 2a4:	00726562 	0x726562
 2a8:	5f766e65 	0x5f766e65
 2ac:	65006469 	0x65006469
 2b0:	695f766e 	0x695f766e
 2b4:	645f6370 	0x645f6370
 2b8:	61767473 	0x61767473
 2bc:	67697300 	0x67697300
 2c0:	73646e61 	0x73646e61
 2c4:	73007465 	0x73007465
 2c8:	69666769 	0x69666769
 2cc:	65736c6c 	0x65736c6c
 2d0:	656e0074 	0x656e0074
 2d4:	74636177 	jalx	18d85dc <end+0x14ce5dc>
 2d8:	30706300 	andi	s0,v1,0x6300
 2dc:	6370655f 	0x6370655f
 2e0:	766e6500 	jalx	9b99400 <end+0x978f400>
 2e4:	6370695f 	0x6370695f
 2e8:	6365725f 	0x6365725f
 2ec:	676e6976 	0x676e6976
 2f0:	735f5f00 	0x735f5f00
 2f4:	6f6e6769 	0x6f6e6769
 2f8:	67697300 	0x67697300
 2fc:	736c6564 	0x736c6564
 300:	5f007465 	bgtzl	t8,1d498 <sigill_handler-0x3e2b68>
 304:	6769725f 	0x6769725f
 308:	65007468 	0x65007468
 30c:	705f766e 	0x705f766e
 310:	65006972 	0x65006972
 314:	735f766e 	0x735f766e
 318:	63616769 	0x63616769
 31c:	6e6f6974 	0x6e6f6974
 320:	766e6500 	jalx	9b99400 <end+0x978f400>
 324:	6769735f 	0x6769735f
 328:	6e65705f 	0x6e65705f
 32c:	676e6964 	0x676e6964
 330:	67697300 	0x67697300
 334:	006d756e 	0x6d756e
 338:	5f766e65 	0x5f766e65
 33c:	5f637069 	0x5f637069
 340:	6d726570 	0x6d726570
 344:	766e6500 	jalx	9b99400 <end+0x978f400>
 348:	6863735f 	0x6863735f
 34c:	6c5f6465 	0x6c5f6465
 350:	006b6e69 	0x6b6e69
 354:	6d62696c 	0x6d62696c
 358:	006e6961 	0x6e6961
 35c:	5f766e65 	0x5f766e65
 360:	64697361 	0x64697361
 364:	766e6500 	jalx	9b99400 <end+0x978f400>
 368:	6769735f 	0x6769735f
 36c:	00746573 	tltu	v1,s4,0x195
 370:	5f766e65 	0x5f766e65
 374:	6b6e696c 	0x6b6e696c
 378:	766e6500 	jalx	9b99400 <end+0x978f400>
 37c:	6769735f 	0x6769735f
 380:	6f6c625f 	0x6f6c625f
 384:	64656b63 	0x64656b63
 388:	766e6500 	jalx	9b99400 <end+0x978f400>
 38c:	6769735f 	0x6769735f
 390:	616c665f 	0x616c665f
 394:	6e650067 	0x6e650067
 398:	67705f76 	0x67705f76
 39c:	00726964 	0x726964
 3a0:	5f657174 	0x5f657174
 3a4:	76657270 	jalx	995c9c0 <end+0x95529c0>
 3a8:	5f656c00 	0x5f656c00
 3ac:	76657270 	jalx	995c9c0 <end+0x95529c0>
 3b0:	766e6500 	jalx	9b99400 <end+0x978f400>
 3b4:	0066745f 	0x66745f
 3b8:	5f657174 	0x5f657174
 3bc:	7478656e 	jalx	1e195b8 <end+0x1a0f5b8>
 3c0:	67697300 	0x67697300
 3c4:	6573726f 	0x6573726f
 3c8:	656c0074 	0x656c0074
 3cc:	78656e5f 	0x78656e5f
 3d0:	69730074 	0x69730074
 3d4:	706d6567 	0x706d6567
 3d8:	65737974 	0x65737974
 3dc:	69730074 	0x69730074
 3e0:	6e657067 	0x6e657067
 3e4:	676e6964 	0x676e6964
 3e8:	30706300 	andi	s0,v1,0x6300
 3ec:	6174735f 	0x6174735f
 3f0:	00737574 	teq	v1,s3,0x1d5
 3f4:	5f766e65 	0x5f766e65
 3f8:	65726170 	0x65726170
 3fc:	695f746e 	0x695f746e
 400:	6e650064 	0x6e650064
 404:	70695f76 	0x70695f76
 408:	61765f63 	0x61765f63
 40c:	0065756c 	0x65756c
 410:	74697865 	jalx	1a5e194 <end+0x1654194>
 414:	61725400 	0x61725400
 418:	61726670 	0x61726670
 41c:	6500656d 	0x6500656d
 420:	695f766e 	0x695f766e
 424:	665f6370 	0x665f6370
 428:	006d6f72 	tlt	v1,t5,0x1bd
 42c:	6f685f5f 	0x6f685f5f
 430:	65720077 	0x65720077
 434:	61007367 	0x61007367
 438:	00636772 	tlt	v1,v1,0x19d
 43c:	61646c6f 	0x61646c6f
 440:	73007463 	0x73007463
 444:	64616769 	0x64616769
 448:	74657364 	jalx	195cd90 <end+0x1552d90>
 44c:	766e6500 	jalx	9b99400 <end+0x978f400>
 450:	6e75725f 	0x6e75725f
 454:	696c0073 	0x696c0073
 458:	696c2f62 	0x696c2f62
 45c:	2e736f62 	sltiu	s3,s3,28514
 460:	72610063 	0x72610063
 464:	5f007667 	bgtzl	t8,1de04 <sigill_handler-0x3e21fc>
 468:	66656c5f 	0x66656c5f
 46c:	5f5f0074 	0x5f5f0074
 470:	7465736f 	jalx	195cdbc <end+0x1552dbc>
 474:	6c5f7500 	0x6c5f7500
 478:	00676e6f 	0x676e6f
 47c:	69676973 	0x69676973
 480:	706d6573 	0x706d6573
 484:	65737974 	0x65737974
 488:	6e650074 	0x6e650074
 48c:	73755f76 	0x73755f76
 490:	735f7265 	0x735f7265
 494:	655f6769 	0x655f6769
 498:	7972746e 	0x7972746e
 49c:	53595300 	beql	k0,t9,150a0 <sigill_handler-0x3eaf60>
 4a0:	6370695f 	0x6370695f
 4a4:	6365725f 	0x6365725f
 4a8:	59530076 	0x59530076
 4ac:	72775f53 	0x72775f53
 4b0:	5f657469 	0x5f657469
 4b4:	00766564 	0x766564
 4b8:	5f535953 	0x5f535953
 4bc:	666f7865 	0x666f7865
 4c0:	006b726f 	0x6b726f
 4c4:	5f535953 	0x5f535953
 4c8:	64616572 	0x64616572
 4cc:	7665645f 	jalx	995917c <end+0x954f17c>
 4d0:	62696c00 	0x62696c00
 4d4:	726f662f 	0x726f662f
 4d8:	00632e6b 	0x632e6b
 4dc:	5f535953 	0x5f535953
 4e0:	5f6d656d 	0x5f6d656d
 4e4:	616d6e75 	0x616d6e75
 4e8:	6c6f0070 	0x6c6f0070
 4ec:	616d5f64 	0x616d5f64
 4f0:	53006b73 	beqzl	t8,1b2c0 <sigill_handler-0x3e4d40>
 4f4:	795f5359 	0x795f5359
 4f8:	646c6569 	0x646c6569
 4fc:	53595300 	beql	k0,t9,15100 <sigill_handler-0x3eaf00>
 500:	6769735f 	0x6769735f
 504:	636f7270 	0x636f7270
 508:	6b73616d 	0x6b73616d
 50c:	53595300 	beql	k0,t9,15110 <sigill_handler-0x3eaef0>
 510:	7465735f 	jalx	195cd7c <end+0x1552d7c>
 514:	626c745f 	0x626c745f
 518:	646f6d5f 	0x646f6d5f
 51c:	746e655f 	jalx	1b9957c <end+0x178f57c>
 520:	53007972 	beqzl	t8,1eaec <sigill_handler-0x3e1514>
 524:	705f5359 	0x705f5359
 528:	746e6972 	jalx	1b9a5c8 <end+0x17905c8>
 52c:	6e6f635f 	0x6e6f635f
 530:	59530073 	0x59530073
 534:	70695f53 	0x70695f53
 538:	72745f63 	0x72745f63
 53c:	65735f79 	0x65735f79
 540:	4d00646e 	bc3f	196fc <sigill_handler-0x3e6904>
 544:	535f5841 	beql	k0,ra,1664c <sigill_handler-0x3e99b4>
 548:	4f4e5359 	c3	0x14e5359
 54c:	53595300 	beql	k0,t9,15150 <sigill_handler-0x3eaeb0>
 550:	6e61705f 	0x6e61705f
 554:	65006369 	0x65006369
 558:	735f766e 	0x735f766e
 55c:	735f7465 	0x735f7465
 560:	655f6769 	0x655f6769
 564:	7972746e 	0x7972746e
 568:	53595300 	beql	k0,t9,1516c <sigill_handler-0x3eae94>
 56c:	7465675f 	jalx	1959d7c <end+0x154fd7c>
 570:	69766e65 	0x69766e65
 574:	59530064 	0x59530064
 578:	65735f53 	0x65735f53
 57c:	69735f74 	0x69735f74
 580:	6e655f67 	0x6e655f67
 584:	00797274 	teq	v1,t9,0x1c9
 588:	5f535953 	0x5f535953
 58c:	61676973 	0x61676973
 590:	6f697463 	0x6f697463
 594:	5953006e 	0x5953006e
 598:	75705f53 	jalx	5c17d4c <end+0x580dd4c>
 59c:	61686374 	0x61686374
 5a0:	68630072 	0x68630072
 5a4:	00646c69 	0x646c69
 5a8:	5f535953 	0x5f535953
 5ac:	6c6c696b 	0x6c6c696b
 5b0:	53595300 	beql	k0,t9,151b4 <sigill_handler-0x3eae4c>
 5b4:	7465735f 	jalx	195cd7c <end+0x1552d7c>
 5b8:	6172745f 	0x6172745f
 5bc:	61726670 	0x61726670
 5c0:	5300656d 	beqzl	t8,19b78 <sigill_handler-0x3e6488>
 5c4:	735f5359 	0x735f5359
 5c8:	655f7465 	0x655f7465
 5cc:	735f766e 	0x735f766e
 5d0:	75746174 	jalx	5d185d0 <end+0x590e5d0>
 5d4:	59530073 	0x59530073
 5d8:	656d5f53 	0x656d5f53
 5dc:	616d5f6d 	0x616d5f6d
 5e0:	75660070 	jalx	59801c0 <end+0x55761c0>
 5e4:	5300636e 	beqzl	t8,193a0 <sigill_handler-0x3e6c60>
 5e8:	735f5359 	0x735f5359
 5ec:	735f7465 	0x735f7465
 5f0:	665f6769 	0x665f6769
 5f4:	0067616c 	0x67616c
 5f8:	5f535953 	0x5f535953
 5fc:	74656763 	jalx	1959d8c <end+0x154fd8c>
 600:	59530063 	0x59530063
 604:	656d5f53 	0x656d5f53
 608:	6c615f6d 	0x6c615f6d
 60c:	00636f6c 	0x636f6c
 610:	70707564 	0x70707564
 614:	00656761 	0x656761
 618:	5f535953 	0x5f535953
 61c:	5f766e65 	0x5f766e65
 620:	74736564 	jalx	1cd9590 <end+0x18cf590>
 624:	00796f72 	tlt	v1,t9,0x1bd
 628:	63737973 	0x63737973
 62c:	5f6c6c61 	0x5f6c6c61
 630:	666f7865 	0x666f7865
 634:	006b726f 	0x6b726f
 638:	5f776f63 	0x5f776f63
 63c:	72746e65 	0x72746e65
 640:	79730079 	0x79730079
 644:	6c616373 	0x6c616373
 648:	65725f6c 	0x65725f6c
 64c:	645f6461 	0x645f6461
 650:	73007665 	0x73007665
 654:	61637379 	0x61637379
 658:	675f6c6c 	0x675f6c6c
 65c:	6e657465 	0x6e657465
 660:	00646976 	tne	v1,a0,0x1a5
 664:	63737973 	0x63737973
 668:	5f6c6c61 	0x5f6c6c61
 66c:	6e697270 	0x6e697270
 670:	6f635f74 	0x6f635f74
 674:	7300736e 	0x7300736e
 678:	61637379 	0x61637379
 67c:	655f6c6c 	0x655f6c6c
 680:	645f766e 	0x645f766e
 684:	72747365 	0x72747365
 688:	7300796f 	0x7300796f
 68c:	61637379 	0x61637379
 690:	735f6c6c 	0x735f6c6c
 694:	735f7465 	0x735f7465
 698:	655f6769 	0x655f6769
 69c:	7972746e 	0x7972746e
 6a0:	73797300 	0x73797300
 6a4:	6c6c6163 	0x6c6c6163
 6a8:	6370695f 	0x6370695f
 6ac:	7972745f 	0x7972745f
 6b0:	6e65735f 	0x6e65735f
 6b4:	79730064 	0x79730064
 6b8:	6c616373 	0x6c616373
 6bc:	656d5f6c 	0x656d5f6c
 6c0:	6e755f6d 	0x6e755f6d
 6c4:	0070616d 	0x70616d
 6c8:	63737973 	0x63737973
 6cc:	5f6c6c61 	0x5f6c6c61
 6d0:	6c656979 	0x6c656979
 6d4:	79730064 	0x79730064
 6d8:	6c616373 	0x6c616373
 6dc:	656d5f6c 	0x656d5f6c
 6e0:	616d5f6d 	0x616d5f6d
 6e4:	79730070 	0x79730070
 6e8:	6c616373 	0x6c616373
 6ec:	65735f6c 	0x65735f6c
 6f0:	72745f74 	0x72745f74
 6f4:	72667061 	0x72667061
 6f8:	00656d61 	0x656d61
 6fc:	63737973 	0x63737973
 700:	5f6c6c61 	0x5f6c6c61
 704:	5f746573 	0x5f746573
 708:	5f766e65 	0x5f766e65
 70c:	74617473 	jalx	185d1cc <end+0x14531cc>
 710:	73007375 	0x73007375
 714:	61637379 	0x61637379
 718:	705f6c6c 	0x705f6c6c
 71c:	63696e61 	0x63696e61
 720:	73797300 	0x73797300
 724:	6c6c6163 	0x6c6c6163
 728:	6c696b5f 	0x6c696b5f
 72c:	7973006c 	0x7973006c
 730:	6c616373 	0x6c616373
 734:	72775f6c 	0x72775f6c
 738:	5f657469 	0x5f657469
 73c:	00766564 	0x766564
 740:	69637273 	0x69637273
 744:	79730064 	0x79730064
 748:	6c616373 	0x6c616373
 74c:	67635f6c 	0x67635f6c
 750:	00637465 	0x637465
 754:	63737973 	0x63737973
 758:	5f6c6c61 	0x5f6c6c61
 75c:	63747570 	0x63747570
 760:	00726168 	0x726168
 764:	69747364 	0x69747364
 768:	79730064 	0x79730064
 76c:	6c616373 	0x6c616373
 770:	69735f6c 	0x69735f6c
 774:	6f727067 	0x6f727067
 778:	73616d63 	0x73616d63
 77c:	7273006b 	0x7273006b
 780:	00617663 	0x617663
 784:	63737973 	0x63737973
 788:	5f6c6c61 	0x5f6c6c61
 78c:	5f6d656d 	0x5f6d656d
 790:	6f6c6c61 	0x6f6c6c61
 794:	79730063 	0x79730063
 798:	6c616373 	0x6c616373
 79c:	65735f6c 	0x65735f6c
 7a0:	6c745f74 	0x6c745f74
 7a4:	6f6d5f62 	0x6f6d5f62
 7a8:	6e655f64 	0x6e655f64
 7ac:	00797274 	teq	v1,t9,0x1c9
 7b0:	63737973 	0x63737973
 7b4:	5f6c6c61 	0x5f6c6c61
 7b8:	61676973 	0x61676973
 7bc:	6f697463 	0x6f697463
 7c0:	696c006e 	0x696c006e
 7c4:	79732f62 	0x79732f62
 7c8:	6c616373 	0x6c616373
 7cc:	696c5f6c 	0x696c5f6c
 7d0:	00632e62 	0x632e62
 7d4:	63737973 	0x63737973
 7d8:	5f6c6c61 	0x5f6c6c61
 7dc:	5f637069 	0x5f637069
 7e0:	76636572 	jalx	98d95c8 <end+0x94cf5c8>
 7e4:	73797300 	0x73797300
 7e8:	6c6c6163 	0x6c6c6163
 7ec:	7465735f 	jalx	195cd7c <end+0x1552d7c>
 7f0:	6769735f 	0x6769735f
 7f4:	616c665f 	0x616c665f
 7f8:	68770067 	0x68770067
 7fc:	6c006d6f 	0x6c006d6f
 800:	692f6269 	0x692f6269
 804:	632e6370 	0x632e6370
 808:	63706900 	0x63706900
 80c:	6e65735f 	0x6e65735f
 810:	64660064 	0x64660064
 814:	74616432 	jalx	18590c8 <end+0x144f0c8>
 818:	656e0061 	0x656e0061
 81c:	6e646677 	0x6e646677
 820:	64006d75 	0x64006d75
 824:	6c5f7665 	0x6c5f7665
 828:	756b6f6f 	jalx	5adbdbc <end+0x56d1dbc>
 82c:	65640070 	0x65640070
 830:	65735f76 	0x65735f76
 834:	72006b65 	0x72006b65
 838:	6e646165 	0x6e646165
 83c:	5f646600 	0x5f646600
 840:	6f6c6c61 	0x6f6c6c61
 844:	65640063 	0x65640063
 848:	62617476 	0x62617476
 84c:	6d756e00 	0x6d756e00
 850:	00646632 	tlt	v1,a0,0x198
 854:	66766564 	0x66766564
 858:	00656c69 	0x656c69
 85c:	6e326466 	0x6e326466
 860:	64006d75 	0x64006d75
 864:	635f7665 	0x635f7665
 868:	65736f6c 	0x65736f6c
 86c:	61745300 	0x61745300
 870:	64660074 	0x64660074
 874:	6f6c635f 	0x6f6c635f
 878:	66006573 	0x66006573
 87c:	65645f64 	0x65645f64
 880:	64695f76 	0x64695f76
 884:	76656400 	jalx	9959000 <end+0x954f000>
 888:	6d616e5f 	0x6d616e5f
 88c:	65640065 	0x65640065
 890:	72775f76 	0x72775f76
 894:	00657469 	0x657469
 898:	735f7473 	0x735f7473
 89c:	00657a69 	0x657a69
 8a0:	66646c6f 	0x66646c6f
 8a4:	64660064 	0x64660064
 8a8:	6f6f6c5f 	0x6f6f6c5f
 8ac:	0070756b 	0x70756b
 8b0:	66646c6f 	0x66646c6f
 8b4:	6d756e64 	0x6d756e64
 8b8:	77656e00 	jalx	d95b800 <end+0xd551800>
 8bc:	6c006466 	0x6c006466
 8c0:	662f6269 	0x662f6269
 8c4:	00632e64 	0x632e64
 8c8:	5f766564 	0x5f766564
 8cc:	64616572 	0x64616572
 8d0:	5f747300 	0x5f747300
 8d4:	656d616e 	0x656d616e
 8d8:	5f646600 	0x5f646600
 8dc:	646f6d6f 	0x646f6d6f
 8e0:	64660065 	0x64660065
 8e4:	64006f6e 	0x64006f6e
 8e8:	69707665 	0x69707665
 8ec:	64006570 	0x64006570
 8f0:	735f7665 	0x735f7665
 8f4:	00746174 	teq	v1,s4,0x185
 8f8:	645f7473 	0x645f7473
 8fc:	66007665 	0x66007665
 900:	74617473 	jalx	185d1cc <end+0x14531cc>
 904:	5f646600 	0x5f646600
 908:	7366666f 	0x7366666f
 90c:	73007465 	0x73007465
 910:	73695f74 	0x73695f74
 914:	00726964 	0x726964
 918:	63766564 	0x63766564
 91c:	00736e6f 	0x736e6f
 920:	736f6c63 	0x736f6c63
 924:	6c615f65 	0x6c615f65
 928:	6150006c 	0x6150006c
 92c:	4c5f6567 	0x4c5f6567
 930:	5f545349 	0x5f545349
 934:	72746e65 	0x72746e65
 938:	00745f79 	0x745f79
 93c:	68735f75 	0x68735f75
 940:	0074726f 	0x74726f
 944:	65676150 	0x65676150
 948:	62696c00 	0x62696c00
 94c:	6761702f 	0x6761702f
 950:	66657265 	0x66657265
 954:	7000632e 	0x7000632e
 958:	696c5f70 	0x696c5f70
 95c:	70006b6e 	0x70006b6e
 960:	65725f70 	0x65725f70
 964:	61700066 	0x61700066
 968:	65726567 	0x65726567
 96c:	5f660066 	0x5f660066
 970:	00726964 	0x726964
 974:	69665f66 	0x69665f66
 978:	6c00656c 	0x6c00656c
 97c:	662f6269 	0x662f6269
 980:	2e656c69 	sltiu	a1,s3,27753
 984:	69660063 	0x69660063
 988:	635f656c 	0x635f656c
 98c:	65736f6c 	0x65736f6c
 990:	61657200 	0x61657200
 994:	616d5f64 	0x616d5f64
 998:	69460070 	0x69460070
 99c:	6600656c 	0x6600656c
 9a0:	7079745f 	0x7079745f
 9a4:	5f660065 	0x5f660065
 9a8:	69646e69 	0x69646e69
 9ac:	74636572 	jalx	18d95c8 <end+0x14cf5c8>
 9b0:	6c696600 	0x6c696600
 9b4:	72775f65 	0x72775f65
 9b8:	00657469 	0x657469
 9bc:	69665f66 	0x69665f66
 9c0:	6469656c 	0x6469656c
 9c4:	735f6600 	0x735f6600
 9c8:	00657a69 	0x657a69
 9cc:	656c6966 	0x656c6966
 9d0:	6165725f 	0x6165725f
 9d4:	5f660064 	0x5f660064
 9d8:	65726964 	0x65726964
 9dc:	66007463 	0x66007463
 9e0:	6e757274 	0x6e757274
 9e4:	65746163 	0x65746163
 9e8:	665f6600 	0x665f6600
 9ec:	6c6f0064 	0x6c6f0064
 9f0:	7a697364 	0x7a697364
 9f4:	69750065 	0x69750065
 9f8:	3233746e 	andi	s3,s1,0x746e
 9fc:	4600745f 	c1	0x745f
 a00:	66656c69 	0x66656c69
 a04:	69660064 	0x69660064
 a08:	735f656c 	0x735f656c
 a0c:	00746174 	teq	v1,s4,0x185
 a10:	616e5f66 	0x616e5f66
 a14:	6600656d 	0x6600656d
 a18:	6461705f 	0x6461705f
 a1c:	69736600 	0x69736600
 a20:	6d5f6370 	0x6d5f6370
 a24:	46007061 	cvt.d.s	$f1,$f14
 a28:	71657273 	0x71657273
 a2c:	65706f5f 	0x65706f5f
 a30:	696c006e 	0x696c006e
 a34:	73662f62 	0x73662f62
 a38:	2e637069 	sltiu	v1,s3,28777
 a3c:	53460063 	beql	k0,a2,bcc <sigill_handler-0x3ff434>
 a40:	5f514552 	0x5f514552
 a44:	54524944 	bnel	v0,s2,12f58 <sigill_handler-0x3ed0a8>
 a48:	73660059 	0x73660059
 a4c:	5f637069 	0x5f637069
 a50:	5f746573 	0x5f746573
 a54:	657a6973 	0x657a6973
 a58:	52534600 	beql	s2,s3,1225c <sigill_handler-0x3edda4>
 a5c:	4d5f5145 	0x4d5f5145
 a60:	72005041 	0x72005041
 a64:	705f7165 	0x705f7165
 a68:	00687461 	0x687461
 a6c:	5f716572 	0x5f716572
 a70:	657a6973 	0x657a6973
 a74:	69736600 	0x69736600
 a78:	75626370 	jalx	5898dc0 <end+0x548edc0>
 a7c:	73460066 	0x73460066
 a80:	5f716572 	0x5f716572
 a84:	736f6c63 	0x736f6c63
 a88:	73660065 	0x73660065
 a8c:	5f637069 	0x5f637069
 a90:	74726964 	jalx	1c9a590 <end+0x1890590>
 a94:	73460079 	0x73460079
 a98:	5f716572 	0x5f716572
 a9c:	0070616d 	0x70616d
 aa0:	5f58414d 	0x5f58414d
 aa4:	45525346 	0x45525346
 aa8:	004f4e51 	0x4f4e51
 aac:	70697366 	0x70697366
 ab0:	706f5f63 	0x706f5f63
 ab4:	72006e65 	0x72006e65
 ab8:	6f5f7165 	0x6f5f7165
 abc:	65736666 	0x65736666
 ac0:	53460074 	beql	k0,a2,c94 <sigill_handler-0x3ff36c>
 ac4:	5f514552 	0x5f514552
 ac8:	5f544553 	0x5f544553
 acc:	455a4953 	0x455a4953
 ad0:	635f7500 	0x635f7500
 ad4:	00726168 	0x726168
 ad8:	70697366 	0x70697366
 adc:	79735f63 	0x79735f63
 ae0:	4600636e 	c1	0x636e
 ae4:	71657273 	0x71657273
 ae8:	7465735f 	jalx	195cd7c <end+0x1552d7c>
 aec:	7a69735f 	0x7a69735f
 af0:	73460065 	0x73460065
 af4:	5f716572 	0x5f716572
 af8:	6f6d6572 	0x6f6d6572
 afc:	46006576 	c1	0x6576
 b00:	51455253 	beql	t2,a1,15450 <sigill_handler-0x3eabb0>
 b04:	4f4c435f 	c3	0x14c435f
 b08:	46004553 	movn.s	$f21,$f8,zero
 b0c:	51455253 	beql	t2,a1,1545c <sigill_handler-0x3eaba4>
 b10:	4d45525f 	0x4d45525f
 b14:	0045564f 	0x45564f
 b18:	5f716572 	0x5f716572
 b1c:	656c6966 	0x656c6966
 b20:	46006469 	c1	0x6469
 b24:	51455253 	beql	t2,a1,15474 <sigill_handler-0x3eab8c>
 b28:	45504f5f 	0x45504f5f
 b2c:	7366004e 	0x7366004e
 b30:	00716572 	tlt	v1,s1,0x195
 b34:	70697366 	0x70697366
 b38:	6c635f63 	0x6c635f63
 b3c:	0065736f 	0x65736f
 b40:	70697366 	0x70697366
 b44:	53460063 	beql	k0,a2,cd4 <sigill_handler-0x3ff32c>
 b48:	5f514552 	0x5f514552
 b4c:	434e5953 	c0	0x14e5953
 b50:	72734600 	0x72734600
 b54:	645f7165 	0x645f7165
 b58:	79747269 	0x79747269
 b5c:	71657200 	0x71657200
 b60:	6f6d6f5f 	0x6f6d6f5f
 b64:	66006564 	0x66006564
 b68:	63706973 	0x63706973
 b6c:	6d65725f 	0x6d65725f
 b70:	0065766f 	0x65766f
 b74:	736e6f63 	0x736e6f63
 b78:	6972775f 	0x6972775f
 b7c:	76006574 	jalx	80195d0 <end+0x7c0f5d0>
 b80:	00667562 	0x667562
 b84:	6f637369 	0x6f637369
 b88:	6f00736e 	0x6f00736e
 b8c:	636e6570 	0x636e6570
 b90:	00736e6f 	0x736e6f
 b94:	736e6f63 	0x736e6f63
 b98:	6165725f 	0x6165725f
 b9c:	696c0064 	0x696c0064
 ba0:	6f632f62 	0x6f632f62
 ba4:	6c6f736e 	0x6c6f736e
 ba8:	00632e65 	0x632e65
 bac:	736e6f63 	0x736e6f63
 bb0:	6f6c635f 	0x6f6c635f
 bb4:	63006573 	0x63006573
 bb8:	5f736e6f 	0x5f736e6f
 bbc:	74617473 	jalx	185d1cc <end+0x14531cc>
 bc0:	62696c00 	0x62696c00
 bc4:	7270662f 	0x7270662f
 bc8:	66746e69 	0x66746e69
 bcc:	7000632e 	0x7000632e
 bd0:	746e6972 	jalx	1b9a5c8 <end+0x17905c8>
 bd4:	7874635f 	0x7874635f
 bd8:	70667600 	0x70667600
 bdc:	746e6972 	jalx	1b9a5c8 <end+0x17905c8>
 be0:	72700066 	0x72700066
 be4:	5f746e69 	0x5f746e69
 be8:	7074756f 	0x7074756f
 bec:	77007475 	jalx	c01d1d4 <end+0xbc131d4>
 bf0:	00746961 	0x746961
 bf4:	2f62696c 	sltiu	v0,k1,26988
 bf8:	74696177 	jalx	1a585dc <end+0x164e5dc>
 bfc:	7300632e 	0x7300632e
 c00:	6e776170 	0x6e776170
 c04:	70616d5f 	0x70616d5f
 c08:	00726570 	tge	v1,s2,0x195
 c0c:	61765f70 	0x61765f70
 c10:	00726464 	0x726464
 c14:	77617073 	jalx	d85c1cc <end+0xd4521cc>
 c18:	5f65006e 	0x5f65006e
 c1c:	65707974 	0x65707974
 c20:	615f7000 	0x615f7000
 c24:	6e67696c 	0x6e67696c
 c28:	666c4500 	0x666c4500
 c2c:	4f5f3233 	c3	0x15f3233
 c30:	70006666 	0x70006666
 c34:	76677261 	jalx	99dc984 <end+0x95d2984>
 c38:	7274705f 	0x7274705f
 c3c:	665f7000 	0x665f7000
 c40:	73656c69 	0x73656c69
 c44:	6c45007a 	0x6c45007a
 c48:	5f323366 	0x5f323366
 c4c:	64726f57 	0x64726f57
 c50:	735f6500 	0x735f6500
 c54:	72747368 	0x72747368
 c58:	0078646e 	0x78646e
 c5c:	6d657463 	0x6d657463
 c60:	69750070 	0x69750070
 c64:	3631746e 	ori	s1,s1,0x746e
 c68:	7000745f 	0x7000745f
 c6c:	6461705f 	0x6461705f
 c70:	65007264 	0x65007264
 c74:	7265765f 	0x7265765f
 c78:	6e6f6973 	0x6e6f6973
 c7c:	65647000 	0x65647000
 c80:	70006f6e 	0x70006f6e
 c84:	6d656d5f 	0x6d656d5f
 c88:	70007a73 	0x70007a73
 c8c:	00676f72 	tlt	v1,a3,0x1bd
 c90:	68705f65 	0x68705f65
 c94:	73746e65 	0x73746e65
 c98:	00657a69 	0x657a69
 c9c:	74696e69 	jalx	1a5b9a4 <end+0x16519a4>
 ca0:	6174735f 	0x6174735f
 ca4:	5f006b63 	bgtzl	t8,1ba34 <sigill_handler-0x3e45cc>
 ca8:	695f6870 	0x695f6870
 cac:	45007864 	bc1f	1ee40 <sigill_handler-0x3e11c0>
 cb0:	3233666c 	andi	s3,s1,0x666c
 cb4:	6468505f 	0x6468505f
 cb8:	74730072 	jalx	1cc01c8 <end+0x18b61c8>
 cbc:	676e6972 	0x676e6972
 cc0:	5f650073 	0x5f650073
 cc4:	6863616d 	0x6863616d
 cc8:	00656e69 	0x656e69
 ccc:	76677261 	jalx	99dc984 <end+0x95d2984>
 cd0:	6d65745f 	0x6d65745f
 cd4:	5f700070 	0x5f700070
 cd8:	65707974 	0x65707974
 cdc:	65747000 	0x65747000
 ce0:	65006f6e 	0x65006f6e
 ce4:	7368655f 	0x7368655f
 ce8:	00657a69 	0x657a69
 cec:	666f5f70 	0x666f5f70
 cf0:	74657366 	jalx	195cd98 <end+0x1552d98>
 cf4:	666c4500 	0x666c4500
 cf8:	485f3233 	0x485f3233
 cfc:	00666c61 	0x666c61
 d00:	6c696863 	0x6c696863
 d04:	64695f64 	0x64695f64
 d08:	72726500 	0x72726500
 d0c:	6500726f 	0x6500726f
 d10:	00726468 	0x726468
 d14:	33666c45 	andi	a2,k1,0x6c45
 d18:	68455f32 	0x68455f32
 d1c:	65007264 	0x65007264
 d20:	7562666c 	jalx	58999b0 <end+0x548f9b0>
 d24:	696c0066 	0x696c0066
 d28:	70732f62 	0x70732f62
 d2c:	2e6e7761 	sltiu	t6,s3,30561
 d30:	6e650063 	0x6e650063
 d34:	70797274 	0x70797274
 d38:	746e696f 	jalx	1b9a5bc <end+0x17905bc>
 d3c:	735f6500 	0x735f6500
 d40:	66666f68 	0x66666f68
 d44:	665f7000 	0x665f7000
 d48:	7367616c 	0x7367616c
 d4c:	695f6500 	0x695f6500
 d50:	746e6564 	jalx	1b99590 <end+0x178f590>
 d54:	665f6500 	0x665f6500
 d58:	7367616c 	0x7367616c
 d5c:	705f6500 	0x705f6500
 d60:	66666f68 	0x66666f68
 d64:	666c4500 	0x666c4500
 d68:	415f3233 	0x415f3233
 d6c:	00726464 	0x726464
 d70:	6f5f6870 	0x6f5f6870
 d74:	65006666 	0x65006666
 d78:	6568735f 	0x6568735f
 d7c:	6973746e 	0x6973746e
 d80:	6500657a 	0x6500657a
 d84:	6e68735f 	0x6e68735f
 d88:	65006d75 	0x65006d75
 d8c:	00317272 	tlt	at,s1,0x1c9
 d90:	32727265 	andi	s2,s3,0x7265
 d94:	61707300 	0x61707300
 d98:	006c6e77 	0x6c6e77
 d9c:	6e655f65 	0x6e655f65
 da0:	00797274 	teq	v1,t9,0x1c9
 da4:	68705f65 	0x68705f65
 da8:	006d756e 	0x6d756e
 dac:	73677261 	0x73677261
 db0:	696e6900 	0x696e6900
 db4:	70735f74 	0x70735f74
 db8:	725f7000 	0x725f7000
 dbc:	00736f70 	tge	v1,s3,0x1bd
 dc0:	75625f70 	jalx	5897dc0 <end+0x548ddc0>
 dc4:	69700066 	0x69700066
 dc8:	775f6570 	jalx	d7d95c0 <end+0xd3cf5c0>
 dcc:	65746972 	0x65746972
 dd0:	75627200 	jalx	589c800 <end+0x5492800>
 dd4:	69700066 	0x69700066
 dd8:	725f6570 	0x725f6570
 ddc:	5f006665 	bgtzl	t8,1a774 <sigill_handler-0x3e588c>
 de0:	65706970 	0x65706970
 de4:	5f73695f 	0x5f73695f
 de8:	736f6c63 	0x736f6c63
 dec:	70006465 	0x70006465
 df0:	5f657069 	0x5f657069
 df4:	64616572 	0x64616572
 df8:	5f646600 	0x5f646600
 dfc:	00666572 	tlt	v1,a2,0x195
 e00:	70775f70 	0x70775f70
 e04:	7700736f 	jalx	c01cdbc <end+0xbc12dbc>
 e08:	00667562 	0x667562
 e0c:	65706970 	0x65706970
 e10:	6174735f 	0x6174735f
 e14:	69500074 	0x69500074
 e18:	6c006570 	0x6c006570
 e1c:	702f6269 	0x702f6269
 e20:	2e657069 	sltiu	a1,s3,28777
 e24:	72650063 	0x72650063
 e28:	70003372 	0x70003372
 e2c:	5f657069 	0x5f657069
 e30:	736f6c63 	0x736f6c63
 e34:	6c650065 	0x6c650065
 e38:	72665f66 	0x72665f66
 e3c:	6d006d6f 	0x6d006d6f
 e40:	705f7061 	0x705f7061
 e44:	00656761 	0x656761
 e48:	6d6f682f 	0x6d6f682f
 e4c:	69672f65 	0x69672f65
 e50:	31322f74 	andi	s2,t1,0x2f74
 e54:	30343733 	andi	s4,at,0x3733
 e58:	6c2f3736 	0x6c2f3736
 e5c:	65006269 	0x65006269
 e60:	6f6c666c 	0x6f6c666c
 e64:	72656461 	0x72656461
 e68:	6500632e 	0x6500632e
 e6c:	6c5f666c 	0x6c5f666c
 e70:	5f64616f 	0x5f64616f
 e74:	00676573 	tltu	v1,a3,0x195
 e78:	5f666c65 	0x5f666c65
 e7c:	7070616d 	0x7070616d
 e80:	745f7265 	jalx	17dc994 <end+0x13d2994>
 e84:	6e696200 	0x6e696200
 e88:	7a69735f 	0x7a69735f
 e8c:	67730065 	0x67730065
 e90:	657a6973 	0x657a6973
 e94:	6e696200 	0x6e696200
 e98:	00797261 	0x797261
 e9c:	69676562 	0x69676562
 ea0:	7270006e 	0x7270006e
 ea4:	2e746e69 	sltiu	s4,s3,28265
 ea8:	61700063 	0x61700063
 eac:	6c006364 	0x6c006364
 eb0:	756a6461 	jalx	5a99184 <end+0x568f184>
 eb4:	70007473 	0x70007473
 eb8:	746e6972 	jalx	1b9a5c8 <end+0x17905c8>
 ebc:	7274735f 	0x7274735f
 ec0:	67656e00 	0x67656e00
 ec4:	616c665f 	0x616c665f
 ec8:	6d660067 	0x6d660067
 ecc:	61635f74 	0x61635f74
 ed0:	61626c6c 	0x61626c6c
 ed4:	745f6b63 	jalx	17dad8c <end+0x13d0d8c>
 ed8:	63707500 	0x63707500
 edc:	00657361 	0x657361
 ee0:	65736162 	0x65736162
 ee4:	6e6f6c00 	0x6e6f6c00
 ee8:	6c665f67 	0x6c665f67
 eec:	76006761 	jalx	8019d84 <end+0x7c0fd84>
 ef0:	6e697270 	0x6e697270
 ef4:	746d6674 	jalx	1b599d0 <end+0x174f9d0>
 ef8:	64697700 	0x64697700
 efc:	70006874 	0x70006874
 f00:	746e6972 	jalx	1b9a5c8 <end+0x17905c8>
 f04:	6d756e5f 	0x6d756e5f
 f08:	74636100 	jalx	18d8400 <end+0x14ce400>
 f0c:	4c6c6175 	0x4c6c6175
 f10:	74676e65 	jalx	19db994 <end+0x15d1994>
 f14:	70730068 	0x70730068
 f18:	00656361 	0x656361
 f1c:	6e697270 	0x6e697270
 f20:	68635f74 	0x68635f74
 f24:	6c007261 	0x6c007261
 f28:	74676e65 	jalx	19db994 <end+0x15d1994>
 f2c:	6f770068 	0x6f770068
 f30:	73006472 	0x73006472
 f34:	68637274 	0x68637274
 f38:	79620072 	0x79620072
 f3c:	73006574 	0x73006574
 f40:	656c7274 	0x656c7274
 f44:	7473006e 	jalx	1cc01b8 <end+0x18b61b8>
 f48:	79706372 	0x79706372
 f4c:	6d656d00 	0x6d656d00
 f50:	00746573 	tltu	v1,s4,0x195
 f54:	61747364 	0x61747364
 f58:	00726464 	0x726464
 f5c:	63727473 	0x63727473
 f60:	7300706d 	0x7300706d
 f64:	6e697274 	0x6e697274
 f68:	00632e67 	0x632e67
 f6c:	636d656d 	0x636d656d
 f70:	地址 0x0000000000000f70 越界。


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	syscall
       4:	ffffffff 	0xffffffff
       8:	7c010001 	0x7c010001
       c:	001d0d1f 	0x1d0d1f
      10:	00000020 	add	zero,zero,zero
      14:	00000000 	nop
      18:	00400000 	0x400000
      1c:	00000088 	0x88
      20:	48180e44 	0x48180e44
      24:	029e019f 	0x29e019f
      28:	021e0d44 	0x21e0d44
      2c:	4c1d0d64 	0x4c1d0d64
      30:	000edfde 	0xedfde
      34:	00000020 	add	zero,zero,zero
      38:	00000000 	nop
      3c:	00400088 	0x400088
      40:	00000068 	0x68
      44:	48180e44 	0x48180e44
      48:	029e019f 	0x29e019f
      4c:	021e0d44 	0x21e0d44
      50:	4c1d0d44 	0x4c1d0d44
      54:	000edfde 	0xedfde
      58:	00000020 	add	zero,zero,zero
      5c:	00000000 	nop
      60:	004000f0 	tge	v0,zero,0x3
      64:	0000007c 	0x7c
      68:	48180e44 	0x48180e44
      6c:	029e019f 	0x29e019f
      70:	021e0d44 	0x21e0d44
      74:	4c1d0d58 	0x4c1d0d58
      78:	000edfde 	0xedfde
      7c:	00000024 	and	zero,zero,zero
      80:	00000000 	nop
      84:	0040016c 	0x40016c
      88:	00000158 	0x158
      8c:	48280e44 	0x48280e44
      90:	029e019f 	0x29e019f
      94:	031e0d44 	0x31e0d44
      98:	1d0d0134 	0x1d0d0134
      9c:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
      a0:	00000000 	nop
      a4:	0000000c 	syscall
      a8:	ffffffff 	0xffffffff
      ac:	7c010001 	0x7c010001
      b0:	001d0d1f 	0x1d0d1f
      b4:	00000020 	add	zero,zero,zero
      b8:	000000a4 	0xa4
      bc:	004002f0 	tge	v0,zero,0xb
      c0:	0000009c 	0x9c
      c4:	48200e44 	0x48200e44
      c8:	029e019f 	0x29e019f
      cc:	021e0d44 	0x21e0d44
      d0:	4c1d0d78 	0x4c1d0d78
      d4:	000edfde 	0xedfde
      d8:	00000020 	add	zero,zero,zero
      dc:	000000a4 	0xa4
      e0:	0040038c 	syscall	0x1000e
      e4:	00000110 	0x110
      e8:	48200e44 	0x48200e44
      ec:	029e019f 	0x29e019f
      f0:	021e0d44 	0x21e0d44
      f4:	4c1d0dec 	0x4c1d0dec
      f8:	000edfde 	0xedfde
      fc:	00000024 	and	zero,zero,zero
     100:	000000a4 	0xa4
     104:	0040049c 	0x40049c
     108:	00000068 	0x68
     10c:	08a00e44 	j	2803910 <end+0x23f9910>
     110:	9e019f48 	0x9e019f48
     114:	1e0d4402 	0x1e0d4402
     118:	1d0d4402 	0x1d0d4402
     11c:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     120:	00000000 	nop
     124:	00000020 	add	zero,zero,zero
     128:	000000a4 	0xa4
     12c:	00400504 	0x400504
     130:	00000058 	0x58
     134:	48200e44 	0x48200e44
     138:	029e019f 	0x29e019f
     13c:	741e0d44 	jalx	783510 <end+0x379510>
     140:	de4c1d0d 	0xde4c1d0d
     144:	00000edf 	0xedf
     148:	00000018 	mult	zero,zero
     14c:	000000a4 	0xa4
     150:	0040055c 	0x40055c
     154:	0000006c 	0x6c
     158:	48200e44 	0x48200e44
     15c:	029e019f 	0x29e019f
     160:	001e0d44 	0x1e0d44
     164:	00000018 	mult	zero,zero
     168:	000000a4 	0xa4
     16c:	004005c8 	0x4005c8
     170:	00000074 	teq	zero,zero,0x1
     174:	48200e44 	0x48200e44
     178:	029e019f 	0x29e019f
     17c:	001e0d44 	0x1e0d44
     180:	0000000c 	syscall
     184:	ffffffff 	0xffffffff
     188:	7c010001 	0x7c010001
     18c:	001d0d1f 	0x1d0d1f
     190:	00000018 	mult	zero,zero
     194:	00000180 	sll	zero,zero,0x6
     198:	00400640 	0x400640
     19c:	00000040 	ssnop
     1a0:	48180e44 	0x48180e44
     1a4:	029e019f 	0x29e019f
     1a8:	001e0d44 	0x1e0d44
     1ac:	00000018 	mult	zero,zero
     1b0:	00000180 	sll	zero,zero,0x6
     1b4:	00400680 	0x400680
     1b8:	00000068 	0x68
     1bc:	48180e44 	0x48180e44
     1c0:	029e019f 	0x29e019f
     1c4:	001e0d44 	0x1e0d44
     1c8:	00000020 	add	zero,zero,zero
     1cc:	00000180 	sll	zero,zero,0x6
     1d0:	004006e8 	0x4006e8
     1d4:	00000048 	0x48
     1d8:	48180e44 	0x48180e44
     1dc:	029e019f 	0x29e019f
     1e0:	641e0d44 	0x641e0d44
     1e4:	de4c1d0d 	0xde4c1d0d
     1e8:	00000edf 	0xedf
     1ec:	00000020 	add	zero,zero,zero
     1f0:	00000180 	sll	zero,zero,0x6
     1f4:	00400730 	tge	v0,zero,0x1c
     1f8:	00000040 	ssnop
     1fc:	48180e44 	0x48180e44
     200:	029e019f 	0x29e019f
     204:	5c1e0d44 	0x5c1e0d44
     208:	de4c1d0d 	0xde4c1d0d
     20c:	00000edf 	0xedf
     210:	0000001c 	0x1c
     214:	00000180 	sll	zero,zero,0x6
     218:	00400770 	tge	v0,zero,0x1d
     21c:	00000030 	tge	zero,zero
     220:	44080e44 	0x44080e44
     224:	0d44019e 	jal	5100678 <end+0x4cf6678>
     228:	1d0d541e 	0x1d0d541e
     22c:	000ede48 	0xede48
     230:	0000001c 	0x1c
     234:	00000180 	sll	zero,zero,0x6
     238:	004007a0 	0x4007a0
     23c:	00000034 	teq	zero,zero
     240:	44080e44 	0x44080e44
     244:	0d44019e 	jal	5100678 <end+0x4cf6678>
     248:	1d0d581e 	0x1d0d581e
     24c:	000ede48 	0xede48
     250:	00000020 	add	zero,zero,zero
     254:	00000180 	sll	zero,zero,0x6
     258:	004007d4 	0x4007d4
     25c:	00000078 	0x78
     260:	44080e44 	0x44080e44
     264:	0d44019e 	jal	5100678 <end+0x4cf6678>
     268:	0d5c021e 	jal	5700878 <end+0x52f6878>
     26c:	0ede481d 	jal	b792074 <end+0xb388074>
     270:	00000000 	nop
     274:	00000020 	add	zero,zero,zero
     278:	00000180 	sll	zero,zero,0x6
     27c:	0040084c 	syscall	0x10021
     280:	0000007c 	0x7c
     284:	44080e44 	0x44080e44
     288:	0d44019e 	jal	5100678 <end+0x4cf6678>
     28c:	0d60021e 	jal	5800878 <end+0x53f6878>
     290:	0ede481d 	jal	b792074 <end+0xb388074>
     294:	00000000 	nop
     298:	00000020 	add	zero,zero,zero
     29c:	00000180 	sll	zero,zero,0x6
     2a0:	004008c8 	0x4008c8
     2a4:	00000084 	0x84
     2a8:	44080e44 	0x44080e44
     2ac:	0d44019e 	jal	5100678 <end+0x4cf6678>
     2b0:	0d68021e 	jal	5a00878 <end+0x55f6878>
     2b4:	0ede481d 	jal	b792074 <end+0xb388074>
     2b8:	00000000 	nop
     2bc:	0000001c 	0x1c
     2c0:	00000180 	sll	zero,zero,0x6
     2c4:	0040094c 	syscall	0x10025
     2c8:	00000044 	0x44
     2cc:	44080e44 	0x44080e44
     2d0:	0d44019e 	jal	5100678 <end+0x4cf6678>
     2d4:	1d0d681e 	0x1d0d681e
     2d8:	000ede48 	0xede48
     2dc:	0000001c 	0x1c
     2e0:	00000180 	sll	zero,zero,0x6
     2e4:	00400990 	0x400990
     2e8:	0000004c 	syscall	0x1
     2ec:	44080e44 	0x44080e44
     2f0:	0d44019e 	jal	5100678 <end+0x4cf6678>
     2f4:	1d0d701e 	0x1d0d701e
     2f8:	000ede48 	0xede48
     2fc:	0000001c 	0x1c
     300:	00000180 	sll	zero,zero,0x6
     304:	004009dc 	0x4009dc
     308:	0000004c 	syscall	0x1
     30c:	44080e44 	0x44080e44
     310:	0d44019e 	jal	5100678 <end+0x4cf6678>
     314:	1d0d701e 	0x1d0d701e
     318:	000ede48 	0xede48
     31c:	00000020 	add	zero,zero,zero
     320:	00000180 	sll	zero,zero,0x6
     324:	00400a28 	0x400a28
     328:	00000048 	0x48
     32c:	48180e44 	0x48180e44
     330:	029e019f 	0x29e019f
     334:	641e0d44 	0x641e0d44
     338:	de4c1d0d 	0xde4c1d0d
     33c:	00000edf 	0xedf
     340:	0000001c 	0x1c
     344:	00000180 	sll	zero,zero,0x6
     348:	00400a70 	tge	v0,zero,0x29
     34c:	0000003c 	0x3c
     350:	44080e44 	0x44080e44
     354:	0d44019e 	jal	5100678 <end+0x4cf6678>
     358:	1d0d601e 	0x1d0d601e
     35c:	000ede48 	0xede48
     360:	0000000c 	syscall
     364:	ffffffff 	0xffffffff
     368:	7c010001 	0x7c010001
     36c:	001d0d1f 	0x1d0d1f
     370:	00000024 	and	zero,zero,zero
     374:	00000360 	0x360
     378:	00400ab0 	tge	v0,zero,0x2a
     37c:	000001a8 	0x1a8
     380:	48380e44 	0x48380e44
     384:	029e019f 	0x29e019f
     388:	031e0d44 	0x31e0d44
     38c:	1d0d0184 	0x1d0d0184
     390:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     394:	00000000 	nop
     398:	00000024 	and	zero,zero,zero
     39c:	00000360 	0x360
     3a0:	00400c58 	0x400c58
     3a4:	00000158 	0x158
     3a8:	48280e44 	0x48280e44
     3ac:	029e019f 	0x29e019f
     3b0:	031e0d44 	0x31e0d44
     3b4:	1d0d0134 	0x1d0d0134
     3b8:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     3bc:	00000000 	nop
     3c0:	00000024 	and	zero,zero,zero
     3c4:	00000360 	0x360
     3c8:	00400db0 	tge	v0,zero,0x36
     3cc:	00000204 	0x204
     3d0:	48380e44 	0x48380e44
     3d4:	029e019f 	0x29e019f
     3d8:	031e0d44 	0x31e0d44
     3dc:	1d0d01e0 	0x1d0d01e0
     3e0:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     3e4:	00000000 	nop
     3e8:	00000020 	add	zero,zero,zero
     3ec:	00000360 	0x360
     3f0:	00400fb4 	teq	v0,zero,0x3e
     3f4:	0000003c 	0x3c
     3f8:	48180e44 	0x48180e44
     3fc:	029e019f 	0x29e019f
     400:	581e0d44 	0x581e0d44
     404:	de4c1d0d 	0xde4c1d0d
     408:	00000edf 	0xedf
     40c:	00000024 	and	zero,zero,zero
     410:	00000360 	0x360
     414:	00400ff0 	tge	v0,zero,0x3f
     418:	00000250 	0x250
     41c:	48400e44 	0x48400e44
     420:	029e019f 	0x29e019f
     424:	031e0d44 	0x31e0d44
     428:	1d0d022c 	0x1d0d022c
     42c:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     430:	00000000 	nop
     434:	0000000c 	syscall
     438:	ffffffff 	0xffffffff
     43c:	7c010001 	0x7c010001
     440:	001d0d1f 	0x1d0d1f
     444:	00000020 	add	zero,zero,zero
     448:	00000434 	teq	zero,zero,0x10
     44c:	00401240 	0x401240
     450:	00000040 	ssnop
     454:	48180e44 	0x48180e44
     458:	029e019f 	0x29e019f
     45c:	5c1e0d44 	0x5c1e0d44
     460:	de4c1d0d 	0xde4c1d0d
     464:	00000edf 	0xedf
     468:	00000020 	add	zero,zero,zero
     46c:	00000434 	teq	zero,zero,0x10
     470:	00401280 	0x401280
     474:	00000044 	0x44
     478:	48180e44 	0x48180e44
     47c:	029e019f 	0x29e019f
     480:	601e0d44 	0x601e0d44
     484:	de4c1d0d 	0xde4c1d0d
     488:	00000edf 	0xedf
     48c:	00000020 	add	zero,zero,zero
     490:	00000434 	teq	zero,zero,0x10
     494:	004012c4 	0x4012c4
     498:	00000034 	teq	zero,zero
     49c:	48180e44 	0x48180e44
     4a0:	029e019f 	0x29e019f
     4a4:	501e0d44 	beql	zero,s8,39b8 <sigill_handler-0x3fc648>
     4a8:	de4c1d0d 	0xde4c1d0d
     4ac:	00000edf 	0xedf
     4b0:	00000020 	add	zero,zero,zero
     4b4:	00000434 	teq	zero,zero,0x10
     4b8:	004012f8 	0x4012f8
     4bc:	00000038 	0x38
     4c0:	48180e44 	0x48180e44
     4c4:	029e019f 	0x29e019f
     4c8:	541e0d44 	bnel	zero,s8,39dc <sigill_handler-0x3fc624>
     4cc:	de4c1d0d 	0xde4c1d0d
     4d0:	00000edf 	0xedf
     4d4:	00000020 	add	zero,zero,zero
     4d8:	00000434 	teq	zero,zero,0x10
     4dc:	00401330 	tge	v0,zero,0x4c
     4e0:	0000003c 	0x3c
     4e4:	48180e44 	0x48180e44
     4e8:	029e019f 	0x29e019f
     4ec:	581e0d44 	0x581e0d44
     4f0:	de4c1d0d 	0xde4c1d0d
     4f4:	00000edf 	0xedf
     4f8:	00000020 	add	zero,zero,zero
     4fc:	00000434 	teq	zero,zero,0x10
     500:	0040136c 	0x40136c
     504:	00000044 	0x44
     508:	48180e44 	0x48180e44
     50c:	029e019f 	0x29e019f
     510:	601e0d44 	0x601e0d44
     514:	de4c1d0d 	0xde4c1d0d
     518:	00000edf 	0xedf
     51c:	00000020 	add	zero,zero,zero
     520:	00000434 	teq	zero,zero,0x10
     524:	004013b0 	tge	v0,zero,0x4e
     528:	0000004c 	syscall	0x1
     52c:	48180e44 	0x48180e44
     530:	029e019f 	0x29e019f
     534:	681e0d44 	0x681e0d44
     538:	de4c1d0d 	0xde4c1d0d
     53c:	00000edf 	0xedf
     540:	00000020 	add	zero,zero,zero
     544:	00000434 	teq	zero,zero,0x10
     548:	004013fc 	0x4013fc
     54c:	00000060 	0x60
     550:	48200e44 	0x48200e44
     554:	029e019f 	0x29e019f
     558:	7c1e0d44 	0x7c1e0d44
     55c:	de4c1d0d 	0xde4c1d0d
     560:	00000edf 	0xedf
     564:	00000020 	add	zero,zero,zero
     568:	00000434 	teq	zero,zero,0x10
     56c:	0040145c 	0x40145c
     570:	00000044 	0x44
     574:	48180e44 	0x48180e44
     578:	029e019f 	0x29e019f
     57c:	601e0d44 	0x601e0d44
     580:	de4c1d0d 	0xde4c1d0d
     584:	00000edf 	0xedf
     588:	00000020 	add	zero,zero,zero
     58c:	00000434 	teq	zero,zero,0x10
     590:	004014a0 	0x4014a0
     594:	00000044 	0x44
     598:	48180e44 	0x48180e44
     59c:	029e019f 	0x29e019f
     5a0:	601e0d44 	0x601e0d44
     5a4:	de4c1d0d 	0xde4c1d0d
     5a8:	00000edf 	0xedf
     5ac:	00000020 	add	zero,zero,zero
     5b0:	00000434 	teq	zero,zero,0x10
     5b4:	004014e4 	0x4014e4
     5b8:	00000044 	0x44
     5bc:	48180e44 	0x48180e44
     5c0:	029e019f 	0x29e019f
     5c4:	601e0d44 	0x601e0d44
     5c8:	de4c1d0d 	0xde4c1d0d
     5cc:	00000edf 	0xedf
     5d0:	00000018 	mult	zero,zero
     5d4:	00000434 	teq	zero,zero,0x10
     5d8:	00401528 	0x401528
     5dc:	00000048 	0x48
     5e0:	48200e44 	0x48200e44
     5e4:	029e019f 	0x29e019f
     5e8:	001e0d44 	0x1e0d44
     5ec:	00000020 	add	zero,zero,zero
     5f0:	00000434 	teq	zero,zero,0x10
     5f4:	00401570 	tge	v0,zero,0x55
     5f8:	00000058 	0x58
     5fc:	48200e44 	0x48200e44
     600:	029e019f 	0x29e019f
     604:	741e0d44 	jalx	783510 <end+0x379510>
     608:	de4c1d0d 	0xde4c1d0d
     60c:	00000edf 	0xedf
     610:	00000020 	add	zero,zero,zero
     614:	00000434 	teq	zero,zero,0x10
     618:	004015c8 	0x4015c8
     61c:	0000003c 	0x3c
     620:	48180e44 	0x48180e44
     624:	029e019f 	0x29e019f
     628:	581e0d44 	0x581e0d44
     62c:	de4c1d0d 	0xde4c1d0d
     630:	00000edf 	0xedf
     634:	00000020 	add	zero,zero,zero
     638:	00000434 	teq	zero,zero,0x10
     63c:	00401604 	0x401604
     640:	00000034 	teq	zero,zero
     644:	48180e44 	0x48180e44
     648:	029e019f 	0x29e019f
     64c:	501e0d44 	beql	zero,s8,3b60 <sigill_handler-0x3fc4a0>
     650:	de4c1d0d 	0xde4c1d0d
     654:	00000edf 	0xedf
     658:	00000020 	add	zero,zero,zero
     65c:	00000434 	teq	zero,zero,0x10
     660:	00401638 	0x401638
     664:	0000004c 	syscall	0x1
     668:	48180e44 	0x48180e44
     66c:	029e019f 	0x29e019f
     670:	681e0d44 	0x681e0d44
     674:	de4c1d0d 	0xde4c1d0d
     678:	00000edf 	0xedf
     67c:	00000020 	add	zero,zero,zero
     680:	00000434 	teq	zero,zero,0x10
     684:	00401684 	0x401684
     688:	0000004c 	syscall	0x1
     68c:	48180e44 	0x48180e44
     690:	029e019f 	0x29e019f
     694:	681e0d44 	0x681e0d44
     698:	de4c1d0d 	0xde4c1d0d
     69c:	00000edf 	0xedf
     6a0:	00000020 	add	zero,zero,zero
     6a4:	00000434 	teq	zero,zero,0x10
     6a8:	004016d0 	0x4016d0
     6ac:	0000004c 	syscall	0x1
     6b0:	48180e44 	0x48180e44
     6b4:	029e019f 	0x29e019f
     6b8:	681e0d44 	0x681e0d44
     6bc:	de4c1d0d 	0xde4c1d0d
     6c0:	00000edf 	0xedf
     6c4:	00000020 	add	zero,zero,zero
     6c8:	00000434 	teq	zero,zero,0x10
     6cc:	0040171c 	0x40171c
     6d0:	0000004c 	syscall	0x1
     6d4:	48180e44 	0x48180e44
     6d8:	029e019f 	0x29e019f
     6dc:	681e0d44 	0x681e0d44
     6e0:	de4c1d0d 	0xde4c1d0d
     6e4:	00000edf 	0xedf
     6e8:	00000020 	add	zero,zero,zero
     6ec:	00000434 	teq	zero,zero,0x10
     6f0:	00401768 	0x401768
     6f4:	00000044 	0x44
     6f8:	48180e44 	0x48180e44
     6fc:	029e019f 	0x29e019f
     700:	601e0d44 	0x601e0d44
     704:	de4c1d0d 	0xde4c1d0d
     708:	00000edf 	0xedf
     70c:	00000020 	add	zero,zero,zero
     710:	00000434 	teq	zero,zero,0x10
     714:	004017ac 	0x4017ac
     718:	00000044 	0x44
     71c:	48180e44 	0x48180e44
     720:	029e019f 	0x29e019f
     724:	601e0d44 	0x601e0d44
     728:	de4c1d0d 	0xde4c1d0d
     72c:	00000edf 	0xedf
     730:	00000020 	add	zero,zero,zero
     734:	00000434 	teq	zero,zero,0x10
     738:	004017f0 	tge	v0,zero,0x5f
     73c:	00000044 	0x44
     740:	48180e44 	0x48180e44
     744:	029e019f 	0x29e019f
     748:	601e0d44 	0x601e0d44
     74c:	de4c1d0d 	0xde4c1d0d
     750:	00000edf 	0xedf
     754:	0000000c 	syscall
     758:	ffffffff 	0xffffffff
     75c:	7c010001 	0x7c010001
     760:	001d0d1f 	0x1d0d1f
     764:	00000020 	add	zero,zero,zero
     768:	00000754 	0x754
     76c:	00401840 	0x401840
     770:	000000a8 	0xa8
     774:	48200e44 	0x48200e44
     778:	029e019f 	0x29e019f
     77c:	021e0d44 	0x21e0d44
     780:	4c1d0d84 	0x4c1d0d84
     784:	000edfde 	0xedfde
     788:	00000020 	add	zero,zero,zero
     78c:	00000754 	0x754
     790:	004018e8 	0x4018e8
     794:	000000bc 	0xbc
     798:	48200e44 	0x48200e44
     79c:	029e019f 	0x29e019f
     7a0:	021e0d44 	0x21e0d44
     7a4:	4c1d0d98 	0x4c1d0d98
     7a8:	000edfde 	0xedfde
     7ac:	0000000c 	syscall
     7b0:	ffffffff 	0xffffffff
     7b4:	7c010001 	0x7c010001
     7b8:	001d0d1f 	0x1d0d1f
     7bc:	00000020 	add	zero,zero,zero
     7c0:	000007ac 	0x7ac
     7c4:	004019b0 	tge	v0,zero,0x66
     7c8:	000000ec 	0xec
     7cc:	48200e44 	0x48200e44
     7d0:	029e019f 	0x29e019f
     7d4:	021e0d44 	0x21e0d44
     7d8:	4c1d0dc8 	0x4c1d0dc8
     7dc:	000edfde 	0xedfde
     7e0:	00000020 	add	zero,zero,zero
     7e4:	000007ac 	0x7ac
     7e8:	00401a9c 	0x401a9c
     7ec:	000000e4 	0xe4
     7f0:	44100e44 	0x44100e44
     7f4:	0d44019e 	jal	5100678 <end+0x4cf6678>
     7f8:	0dc8021e 	jal	7200878 <end+0x6df6878>
     7fc:	0ede481d 	jal	b792074 <end+0xb388074>
     800:	00000000 	nop
     804:	00000020 	add	zero,zero,zero
     808:	000007ac 	0x7ac
     80c:	00401b80 	0x401b80
     810:	00000070 	tge	zero,zero,0x1
     814:	48200e44 	0x48200e44
     818:	029e019f 	0x29e019f
     81c:	021e0d44 	0x21e0d44
     820:	4c1d0d4c 	0x4c1d0d4c
     824:	000edfde 	0xedfde
     828:	00000020 	add	zero,zero,zero
     82c:	000007ac 	0x7ac
     830:	00401bf0 	tge	v0,zero,0x6f
     834:	0000009c 	0x9c
     838:	44100e44 	0x44100e44
     83c:	0d44019e 	jal	5100678 <end+0x4cf6678>
     840:	0d80021e 	jal	6000878 <end+0x5bf6878>
     844:	0ede481d 	jal	b792074 <end+0xb388074>
     848:	00000000 	nop
     84c:	00000020 	add	zero,zero,zero
     850:	000007ac 	0x7ac
     854:	00401c8c 	syscall	0x10072
     858:	00000040 	ssnop
     85c:	48180e44 	0x48180e44
     860:	029e019f 	0x29e019f
     864:	5c1e0d44 	0x5c1e0d44
     868:	de4c1d0d 	0xde4c1d0d
     86c:	00000edf 	0xedf
     870:	0000001c 	0x1c
     874:	000007ac 	0x7ac
     878:	00401ccc 	syscall	0x10073
     87c:	00000034 	teq	zero,zero
     880:	44080e44 	0x44080e44
     884:	0d44019e 	jal	5100678 <end+0x4cf6678>
     888:	1d0d581e 	0x1d0d581e
     88c:	000ede48 	0xede48
     890:	0000001c 	0x1c
     894:	000007ac 	0x7ac
     898:	00401d00 	0x401d00
     89c:	00000038 	0x38
     8a0:	44080e44 	0x44080e44
     8a4:	0d44019e 	jal	5100678 <end+0x4cf6678>
     8a8:	1d0d5c1e 	0x1d0d5c1e
     8ac:	000ede48 	0xede48
     8b0:	00000020 	add	zero,zero,zero
     8b4:	000007ac 	0x7ac
     8b8:	00401d38 	0x401d38
     8bc:	000000bc 	0xbc
     8c0:	48280e44 	0x48280e44
     8c4:	029e019f 	0x29e019f
     8c8:	021e0d44 	0x21e0d44
     8cc:	4c1d0d98 	0x4c1d0d98
     8d0:	000edfde 	0xedfde
     8d4:	00000020 	add	zero,zero,zero
     8d8:	000007ac 	0x7ac
     8dc:	00401df4 	teq	v0,zero,0x77
     8e0:	00000064 	0x64
     8e4:	48200e44 	0x48200e44
     8e8:	029e019f 	0x29e019f
     8ec:	021e0d44 	0x21e0d44
     8f0:	4c1d0d40 	0x4c1d0d40
     8f4:	000edfde 	0xedfde
     8f8:	00000024 	and	zero,zero,zero
     8fc:	000007ac 	0x7ac
     900:	00401e58 	0x401e58
     904:	0000029c 	0x29c
     908:	48480e44 	0x48480e44
     90c:	029e019f 	0x29e019f
     910:	031e0d44 	0x31e0d44
     914:	1d0d0278 	0x1d0d0278
     918:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     91c:	00000000 	nop
     920:	00000020 	add	zero,zero,zero
     924:	000007ac 	0x7ac
     928:	004020f4 	teq	v0,zero,0x83
     92c:	00000114 	0x114
     930:	48300e44 	0x48300e44
     934:	029e019f 	0x29e019f
     938:	021e0d44 	0x21e0d44
     93c:	4c1d0df0 	0x4c1d0df0
     940:	000edfde 	0xedfde
     944:	00000020 	add	zero,zero,zero
     948:	000007ac 	0x7ac
     94c:	00402208 	0x402208
     950:	000000c8 	0xc8
     954:	48200e44 	0x48200e44
     958:	029e019f 	0x29e019f
     95c:	021e0d44 	0x21e0d44
     960:	4c1d0da4 	0x4c1d0da4
     964:	000edfde 	0xedfde
     968:	00000020 	add	zero,zero,zero
     96c:	000007ac 	0x7ac
     970:	004022d0 	0x4022d0
     974:	00000104 	0x104
     978:	48280e44 	0x48280e44
     97c:	029e019f 	0x29e019f
     980:	021e0d44 	0x21e0d44
     984:	4c1d0de0 	0x4c1d0de0
     988:	000edfde 	0xedfde
     98c:	00000020 	add	zero,zero,zero
     990:	000007ac 	0x7ac
     994:	004023d4 	0x4023d4
     998:	00000070 	tge	zero,zero,0x1
     99c:	48200e44 	0x48200e44
     9a0:	029e019f 	0x29e019f
     9a4:	021e0d44 	0x21e0d44
     9a8:	4c1d0d4c 	0x4c1d0d4c
     9ac:	000edfde 	0xedfde
     9b0:	00000020 	add	zero,zero,zero
     9b4:	000007ac 	0x7ac
     9b8:	00402444 	0x402444
     9bc:	000000d0 	0xd0
     9c0:	48280e44 	0x48280e44
     9c4:	029e019f 	0x29e019f
     9c8:	021e0d44 	0x21e0d44
     9cc:	4c1d0dac 	0x4c1d0dac
     9d0:	000edfde 	0xedfde
     9d4:	00000020 	add	zero,zero,zero
     9d8:	000007ac 	0x7ac
     9dc:	00402514 	0x402514
     9e0:	00000080 	sll	zero,zero,0x2
     9e4:	48200e44 	0x48200e44
     9e8:	029e019f 	0x29e019f
     9ec:	021e0d44 	0x21e0d44
     9f0:	4c1d0d5c 	0x4c1d0d5c
     9f4:	000edfde 	0xedfde
     9f8:	0000000c 	syscall
     9fc:	ffffffff 	0xffffffff
     a00:	7c010001 	0x7c010001
     a04:	001d0d1f 	0x1d0d1f
     a08:	00000020 	add	zero,zero,zero
     a0c:	000009f8 	0x9f8
     a10:	004025a0 	0x4025a0
     a14:	000000bc 	0xbc
     a18:	44100e44 	0x44100e44
     a1c:	0d44019e 	jal	5100678 <end+0x4cf6678>
     a20:	0da0021e 	jal	6800878 <end+0x63f6878>
     a24:	0ede481d 	jal	b792074 <end+0xb388074>
     a28:	00000000 	nop
     a2c:	0000000c 	syscall
     a30:	ffffffff 	0xffffffff
     a34:	7c010001 	0x7c010001
     a38:	001d0d1f 	0x1d0d1f
     a3c:	00000024 	and	zero,zero,zero
     a40:	00000a2c 	0xa2c
     a44:	00402660 	0x402660
     a48:	00000144 	0x144
     a4c:	48400e44 	0x48400e44
     a50:	029e019f 	0x29e019f
     a54:	031e0d44 	0x31e0d44
     a58:	1d0d0120 	0x1d0d0120
     a5c:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     a60:	00000000 	nop
     a64:	00000024 	and	zero,zero,zero
     a68:	00000a2c 	0xa2c
     a6c:	004027a4 	0x4027a4
     a70:	0000018c 	syscall	0x6
     a74:	48300e44 	0x48300e44
     a78:	029e019f 	0x29e019f
     a7c:	031e0d44 	0x31e0d44
     a80:	1d0d0168 	0x1d0d0168
     a84:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     a88:	00000000 	nop
     a8c:	00000020 	add	zero,zero,zero
     a90:	00000a2c 	0xa2c
     a94:	00402930 	tge	v0,zero,0xa4
     a98:	000000c8 	0xc8
     a9c:	48200e44 	0x48200e44
     aa0:	029e019f 	0x29e019f
     aa4:	021e0d44 	0x21e0d44
     aa8:	4c1d0da4 	0x4c1d0da4
     aac:	000edfde 	0xedfde
     ab0:	00000024 	and	zero,zero,zero
     ab4:	00000a2c 	0xa2c
     ab8:	004029f8 	0x4029f8
     abc:	00000130 	tge	zero,zero,0x4
     ac0:	48280e44 	0x48280e44
     ac4:	029e019f 	0x29e019f
     ac8:	031e0d44 	0x31e0d44
     acc:	1d0d010c 	0x1d0d010c
     ad0:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     ad4:	00000000 	nop
     ad8:	00000020 	add	zero,zero,zero
     adc:	00000a2c 	0xa2c
     ae0:	00402b28 	0x402b28
     ae4:	000000f4 	teq	zero,zero,0x3
     ae8:	48280e44 	0x48280e44
     aec:	029e019f 	0x29e019f
     af0:	021e0d44 	0x21e0d44
     af4:	4c1d0dd0 	0x4c1d0dd0
     af8:	000edfde 	0xedfde
     afc:	00000020 	add	zero,zero,zero
     b00:	00000a2c 	0xa2c
     b04:	00402c1c 	0x402c1c
     b08:	00000088 	0x88
     b0c:	48200e44 	0x48200e44
     b10:	029e019f 	0x29e019f
     b14:	021e0d44 	0x21e0d44
     b18:	4c1d0d64 	0x4c1d0d64
     b1c:	000edfde 	0xedfde
     b20:	00000024 	and	zero,zero,zero
     b24:	00000a2c 	0xa2c
     b28:	00402ca4 	0x402ca4
     b2c:	0000027c 	0x27c
     b30:	48400e44 	0x48400e44
     b34:	029e019f 	0x29e019f
     b38:	031e0d44 	0x31e0d44
     b3c:	1d0d0258 	0x1d0d0258
     b40:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     b44:	00000000 	nop
     b48:	00000020 	add	zero,zero,zero
     b4c:	00000a2c 	0xa2c
     b50:	00402f20 	0x402f20
     b54:	00000038 	0x38
     b58:	48180e44 	0x48180e44
     b5c:	029e019f 	0x29e019f
     b60:	541e0d44 	bnel	zero,s8,4074 <sigill_handler-0x3fbf8c>
     b64:	de4c1d0d 	0xde4c1d0d
     b68:	00000edf 	0xedf
     b6c:	00000020 	add	zero,zero,zero
     b70:	00000a2c 	0xa2c
     b74:	00402f58 	0x402f58
     b78:	00000030 	tge	zero,zero
     b7c:	48180e44 	0x48180e44
     b80:	029e019f 	0x29e019f
     b84:	4c1e0d44 	0x4c1e0d44
     b88:	de4c1d0d 	0xde4c1d0d
     b8c:	00000edf 	0xedf
     b90:	0000000c 	syscall
     b94:	ffffffff 	0xffffffff
     b98:	7c010001 	0x7c010001
     b9c:	001d0d1f 	0x1d0d1f
     ba0:	00000020 	add	zero,zero,zero
     ba4:	00000b90 	0xb90
     ba8:	00402f90 	0x402f90
     bac:	00000074 	teq	zero,zero,0x1
     bb0:	48200e44 	0x48200e44
     bb4:	029e019f 	0x29e019f
     bb8:	021e0d44 	0x21e0d44
     bbc:	4c1d0d50 	0x4c1d0d50
     bc0:	000edfde 	0xedfde
     bc4:	00000020 	add	zero,zero,zero
     bc8:	00000b90 	0xb90
     bcc:	00403004 	sllv	a2,zero,v0
     bd0:	000000a0 	0xa0
     bd4:	48200e44 	0x48200e44
     bd8:	029e019f 	0x29e019f
     bdc:	021e0d44 	0x21e0d44
     be0:	4c1d0d7c 	0x4c1d0d7c
     be4:	000edfde 	0xedfde
     be8:	00000020 	add	zero,zero,zero
     bec:	00000b90 	0xb90
     bf0:	004030a4 	0x4030a4
     bf4:	000000d8 	0xd8
     bf8:	48300e44 	0x48300e44
     bfc:	029e019f 	0x29e019f
     c00:	021e0d44 	0x21e0d44
     c04:	4c1d0db4 	0x4c1d0db4
     c08:	000edfde 	0xedfde
     c0c:	00000020 	add	zero,zero,zero
     c10:	00000b90 	0xb90
     c14:	0040317c 	0x40317c
     c18:	0000006c 	0x6c
     c1c:	48200e44 	0x48200e44
     c20:	029e019f 	0x29e019f
     c24:	021e0d44 	0x21e0d44
     c28:	4c1d0d48 	0x4c1d0d48
     c2c:	000edfde 	0xedfde
     c30:	00000020 	add	zero,zero,zero
     c34:	00000b90 	0xb90
     c38:	004031e8 	0x4031e8
     c3c:	0000005c 	0x5c
     c40:	48200e44 	0x48200e44
     c44:	029e019f 	0x29e019f
     c48:	781e0d44 	0x781e0d44
     c4c:	de4c1d0d 	0xde4c1d0d
     c50:	00000edf 	0xedf
     c54:	00000020 	add	zero,zero,zero
     c58:	00000b90 	0xb90
     c5c:	00403244 	0x403244
     c60:	0000006c 	0x6c
     c64:	48200e44 	0x48200e44
     c68:	029e019f 	0x29e019f
     c6c:	021e0d44 	0x21e0d44
     c70:	4c1d0d48 	0x4c1d0d48
     c74:	000edfde 	0xedfde
     c78:	00000020 	add	zero,zero,zero
     c7c:	00000b90 	0xb90
     c80:	004032b0 	tge	v0,zero,0xca
     c84:	0000009c 	0x9c
     c88:	48200e44 	0x48200e44
     c8c:	029e019f 	0x29e019f
     c90:	021e0d44 	0x21e0d44
     c94:	4c1d0d78 	0x4c1d0d78
     c98:	000edfde 	0xedfde
     c9c:	00000020 	add	zero,zero,zero
     ca0:	00000b90 	0xb90
     ca4:	0040334c 	syscall	0x100cd
     ca8:	00000044 	0x44
     cac:	48180e44 	0x48180e44
     cb0:	029e019f 	0x29e019f
     cb4:	601e0d44 	0x601e0d44
     cb8:	de4c1d0d 	0xde4c1d0d
     cbc:	00000edf 	0xedf
     cc0:	0000000c 	syscall
     cc4:	ffffffff 	0xffffffff
     cc8:	7c010001 	0x7c010001
     ccc:	001d0d1f 	0x1d0d1f
     cd0:	00000020 	add	zero,zero,zero
     cd4:	00000cc0 	sll	at,zero,0x13
     cd8:	00403390 	0x403390
     cdc:	00000078 	0x78
     ce0:	48200e44 	0x48200e44
     ce4:	029e019f 	0x29e019f
     ce8:	021e0d44 	0x21e0d44
     cec:	4c1d0d54 	0x4c1d0d54
     cf0:	000edfde 	0xedfde
     cf4:	00000020 	add	zero,zero,zero
     cf8:	00000cc0 	sll	at,zero,0x13
     cfc:	00403408 	0x403408
     d00:	000000b4 	teq	zero,zero,0x2
     d04:	48200e44 	0x48200e44
     d08:	029e019f 	0x29e019f
     d0c:	021e0d44 	0x21e0d44
     d10:	4c1d0d90 	0x4c1d0d90
     d14:	000edfde 	0xedfde
     d18:	00000020 	add	zero,zero,zero
     d1c:	00000cc0 	sll	at,zero,0x13
     d20:	004034bc 	0x4034bc
     d24:	000000f8 	0xf8
     d28:	48200e44 	0x48200e44
     d2c:	029e019f 	0x29e019f
     d30:	021e0d44 	0x21e0d44
     d34:	4c1d0dd4 	0x4c1d0dd4
     d38:	000edfde 	0xedfde
     d3c:	00000020 	add	zero,zero,zero
     d40:	00000cc0 	sll	at,zero,0x13
     d44:	004035b4 	teq	v0,zero,0xd6
     d48:	00000068 	0x68
     d4c:	48200e44 	0x48200e44
     d50:	029e019f 	0x29e019f
     d54:	021e0d44 	0x21e0d44
     d58:	4c1d0d44 	0x4c1d0d44
     d5c:	000edfde 	0xedfde
     d60:	0000001c 	0x1c
     d64:	00000cc0 	sll	at,zero,0x13
     d68:	0040361c 	0x40361c
     d6c:	00000028 	0x28
     d70:	44080e44 	0x44080e44
     d74:	0d44019e 	jal	5100678 <end+0x4cf6678>
     d78:	1d0d4c1e 	0x1d0d4c1e
     d7c:	000ede48 	0xede48
     d80:	00000020 	add	zero,zero,zero
     d84:	00000cc0 	sll	at,zero,0x13
     d88:	00403644 	0x403644
     d8c:	0000004c 	syscall	0x1
     d90:	48180e44 	0x48180e44
     d94:	029e019f 	0x29e019f
     d98:	681e0d44 	0x681e0d44
     d9c:	de4c1d0d 	0xde4c1d0d
     da0:	00000edf 	0xedf
     da4:	0000000c 	syscall
     da8:	ffffffff 	0xffffffff
     dac:	7c010001 	0x7c010001
     db0:	001d0d1f 	0x1d0d1f
     db4:	00000020 	add	zero,zero,zero
     db8:	00000da4 	0xda4
     dbc:	00403690 	0x403690
     dc0:	000000b0 	tge	zero,zero,0x2
     dc4:	48200e44 	0x48200e44
     dc8:	029e019f 	0x29e019f
     dcc:	021e0d44 	0x21e0d44
     dd0:	4c1d0d8c 	0x4c1d0d8c
     dd4:	000edfde 	0xedfde
     dd8:	00000020 	add	zero,zero,zero
     ddc:	00000da4 	0xda4
     de0:	00403740 	0x403740
     de4:	00000064 	0x64
     de8:	48200e44 	0x48200e44
     dec:	029e019f 	0x29e019f
     df0:	021e0d44 	0x21e0d44
     df4:	4c1d0d40 	0x4c1d0d40
     df8:	000edfde 	0xedfde
     dfc:	00000020 	add	zero,zero,zero
     e00:	00000da4 	0xda4
     e04:	004037a4 	0x4037a4
     e08:	00000060 	0x60
     e0c:	48200e44 	0x48200e44
     e10:	029e019f 	0x29e019f
     e14:	7c1e0d44 	0x7c1e0d44
     e18:	de4c1d0d 	0xde4c1d0d
     e1c:	00000edf 	0xedf
     e20:	00000020 	add	zero,zero,zero
     e24:	00000da4 	0xda4
     e28:	00403804 	sllv	a3,zero,v0
     e2c:	00000060 	0x60
     e30:	48200e44 	0x48200e44
     e34:	029e019f 	0x29e019f
     e38:	7c1e0d44 	0x7c1e0d44
     e3c:	de4c1d0d 	0xde4c1d0d
     e40:	00000edf 	0xedf
     e44:	0000000c 	syscall
     e48:	ffffffff 	0xffffffff
     e4c:	7c010001 	0x7c010001
     e50:	001d0d1f 	0x1d0d1f
     e54:	00000020 	add	zero,zero,zero
     e58:	00000e44 	0xe44
     e5c:	00403870 	tge	v0,zero,0xe1
     e60:	0000008c 	syscall	0x2
     e64:	48200e44 	0x48200e44
     e68:	029e019f 	0x29e019f
     e6c:	021e0d44 	0x21e0d44
     e70:	4c1d0d68 	0x4c1d0d68
     e74:	000edfde 	0xedfde
     e78:	0000000c 	syscall
     e7c:	ffffffff 	0xffffffff
     e80:	7c010001 	0x7c010001
     e84:	001d0d1f 	0x1d0d1f
     e88:	00000024 	and	zero,zero,zero
     e8c:	00000e78 	0xe78
     e90:	00403900 	0x403900
     e94:	000003b4 	teq	zero,zero,0xe
     e98:	48480e44 	0x48480e44
     e9c:	029e019f 	0x29e019f
     ea0:	031e0d44 	0x31e0d44
     ea4:	1d0d0390 	0x1d0d0390
     ea8:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     eac:	00000000 	nop
     eb0:	00000024 	and	zero,zero,zero
     eb4:	00000e78 	0xe78
     eb8:	00403cb4 	teq	v0,zero,0xf2
     ebc:	00000124 	0x124
     ec0:	48300e44 	0x48300e44
     ec4:	029e019f 	0x29e019f
     ec8:	031e0d44 	0x31e0d44
     ecc:	1d0d0100 	0x1d0d0100
     ed0:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     ed4:	00000000 	nop
     ed8:	00000024 	and	zero,zero,zero
     edc:	00000e78 	0xe78
     ee0:	00403dd8 	0x403dd8
     ee4:	000004d4 	0x4d4
     ee8:	05f80e44 	0x5f80e44
     eec:	9e019f48 	0x9e019f48
     ef0:	1e0d4402 	0x1e0d4402
     ef4:	0d04b003 	jal	412c00c <end+0x3d2200c>
     ef8:	dfde4c1d 	0xdfde4c1d
     efc:	0000000e 	0xe
     f00:	00000020 	add	zero,zero,zero
     f04:	00000e78 	0xe78
     f08:	004042ac 	0x4042ac
     f0c:	0000004c 	syscall	0x1
     f10:	48180e44 	0x48180e44
     f14:	029e019f 	0x29e019f
     f18:	681e0d44 	0x681e0d44
     f1c:	de4c1d0d 	0xde4c1d0d
     f20:	00000edf 	0xedf
     f24:	0000000c 	syscall
     f28:	ffffffff 	0xffffffff
     f2c:	7c010001 	0x7c010001
     f30:	001d0d1f 	0x1d0d1f
     f34:	00000024 	and	zero,zero,zero
     f38:	00000f24 	0xf24
     f3c:	00404300 	0x404300
     f40:	00000258 	0x258
     f44:	4c380e44 	0x4c380e44
     f48:	029e019f 	0x29e019f
     f4c:	0d440390 	jal	5100e40 <end+0x4cf6e40>
     f50:	022c031e 	0x22c031e
     f54:	d0501d0d 	0xd0501d0d
     f58:	000edfde 	0xedfde
     f5c:	00000020 	add	zero,zero,zero
     f60:	00000f24 	0xf24
     f64:	00404558 	0x404558
     f68:	0000008c 	syscall	0x2
     f6c:	48280e44 	0x48280e44
     f70:	029e019f 	0x29e019f
     f74:	021e0d44 	0x21e0d44
     f78:	4c1d0d68 	0x4c1d0d68
     f7c:	000edfde 	0xedfde
     f80:	00000024 	and	zero,zero,zero
     f84:	00000f24 	0xf24
     f88:	004045e4 	0x4045e4
     f8c:	00000138 	0x138
     f90:	48280e44 	0x48280e44
     f94:	029e019f 	0x29e019f
     f98:	031e0d44 	0x31e0d44
     f9c:	1d0d0114 	0x1d0d0114
     fa0:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     fa4:	00000000 	nop
     fa8:	00000024 	and	zero,zero,zero
     fac:	00000f24 	0xf24
     fb0:	0040471c 	0x40471c
     fb4:	00000140 	sll	zero,zero,0x5
     fb8:	48280e44 	0x48280e44
     fbc:	029e019f 	0x29e019f
     fc0:	031e0d44 	0x31e0d44
     fc4:	1d0d011c 	0x1d0d011c
     fc8:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
     fcc:	00000000 	nop
     fd0:	00000020 	add	zero,zero,zero
     fd4:	00000f24 	0xf24
     fd8:	0040485c 	0x40485c
     fdc:	00000084 	0x84
     fe0:	48280e44 	0x48280e44
     fe4:	029e019f 	0x29e019f
     fe8:	021e0d44 	0x21e0d44
     fec:	4c1d0d60 	0x4c1d0d60
     ff0:	000edfde 	0xedfde
     ff4:	00000020 	add	zero,zero,zero
     ff8:	00000f24 	0xf24
     ffc:	004048e0 	0x4048e0
    1000:	0000005c 	0x5c
    1004:	48180e44 	0x48180e44
    1008:	029e019f 	0x29e019f
    100c:	781e0d44 	0x781e0d44
    1010:	de4c1d0d 	0xde4c1d0d
    1014:	00000edf 	0xedf
    1018:	0000001c 	0x1c
    101c:	00000f24 	0xf24
    1020:	0040493c 	0x40493c
    1024:	0000002c 	0x2c
    1028:	44080e44 	0x44080e44
    102c:	0d44019e 	jal	5100678 <end+0x4cf6678>
    1030:	1d0d501e 	0x1d0d501e
    1034:	000ede48 	0xede48
    1038:	0000000c 	syscall
    103c:	ffffffff 	0xffffffff
    1040:	7c010001 	0x7c010001
    1044:	001d0d1f 	0x1d0d1f
    1048:	00000020 	add	zero,zero,zero
    104c:	00001038 	0x1038
    1050:	00404970 	tge	v0,zero,0x125
    1054:	000000b4 	teq	zero,zero,0x2
    1058:	44100e44 	0x44100e44
    105c:	0d44019e 	jal	5100678 <end+0x4cf6678>
    1060:	0d98021e 	jal	6600878 <end+0x61f6878>
    1064:	0ede481d 	jal	b792074 <end+0xb388074>
    1068:	00000000 	nop
    106c:	00000024 	and	zero,zero,zero
    1070:	00001038 	0x1038
    1074:	00404a24 	0x404a24
    1078:	000002a0 	0x2a0
    107c:	48600e44 	0x48600e44
    1080:	029e019f 	0x29e019f
    1084:	031e0d44 	0x31e0d44
    1088:	1d0d027c 	0x1d0d027c
    108c:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
    1090:	00000000 	nop
    1094:	0000000c 	syscall
    1098:	ffffffff 	0xffffffff
    109c:	7c010001 	0x7c010001
    10a0:	001d0d1f 	0x1d0d1f
    10a4:	00000024 	and	zero,zero,zero
    10a8:	00001094 	0x1094
    10ac:	00404cd0 	0x404cd0
    10b0:	00000610 	0x610
    10b4:	48580e44 	0x48580e44
    10b8:	029e019f 	0x29e019f
    10bc:	031e0d44 	0x31e0d44
    10c0:	1d0d05ec 	0x1d0d05ec
    10c4:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
    10c8:	00000000 	nop
    10cc:	00000024 	and	zero,zero,zero
    10d0:	00001094 	0x1094
    10d4:	004052e0 	0x4052e0
    10d8:	00000140 	sll	zero,zero,0x5
    10dc:	48200e44 	0x48200e44
    10e0:	029e019f 	0x29e019f
    10e4:	031e0d44 	0x31e0d44
    10e8:	1d0d011c 	0x1d0d011c
    10ec:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
    10f0:	00000000 	nop
    10f4:	00000024 	and	zero,zero,zero
    10f8:	00001094 	0x1094
    10fc:	00405420 	0x405420
    1100:	00000178 	0x178
    1104:	48280e44 	0x48280e44
    1108:	029e019f 	0x29e019f
    110c:	031e0d44 	0x31e0d44
    1110:	1d0d0154 	0x1d0d0154
    1114:	0edfde4c 	jal	b7f7930 <end+0xb3ed930>
    1118:	00000000 	nop
    111c:	00000024 	and	zero,zero,zero
    1120:	00001094 	0x1094
    1124:	00405598 	0x405598
    1128:	000003a8 	0x3a8
    112c:	4c480e44 	0x4c480e44
    1130:	029e019f 	0x29e019f
    1134:	0d440390 	jal	5100e40 <end+0x4cf6e40>
    1138:	037c031e 	0x37c031e
    113c:	d0501d0d 	0xd0501d0d
    1140:	000edfde 	0xedfde
    1144:	0000000c 	syscall
    1148:	ffffffff 	0xffffffff
    114c:	7c010001 	0x7c010001
    1150:	001d0d1f 	0x1d0d1f
    1154:	00000020 	add	zero,zero,zero
    1158:	00001144 	0x1144
    115c:	00405940 	0x405940
    1160:	00000170 	tge	zero,zero,0x5
    1164:	44100e44 	0x44100e44
    1168:	0d44019e 	jal	5100678 <end+0x4cf6678>
    116c:	0154031e 	0x154031e
    1170:	de481d0d 	0xde481d0d
    1174:	0000000e 	0xe
    1178:	00000020 	add	zero,zero,zero
    117c:	00001144 	0x1144
    1180:	00405ab0 	tge	v0,zero,0x16a
    1184:	00000124 	0x124
    1188:	44180e44 	0x44180e44
    118c:	0d44019e 	jal	5100678 <end+0x4cf6678>
    1190:	0108031e 	0x108031e
    1194:	de481d0d 	0xde481d0d
    1198:	0000000e 	0xe
    119c:	00000020 	add	zero,zero,zero
    11a0:	00001144 	0x1144
    11a4:	00405bd4 	0x405bd4
    11a8:	0000005c 	0x5c
    11ac:	44100e44 	0x44100e44
    11b0:	0d44019e 	jal	5100678 <end+0x4cf6678>
    11b4:	0d40021e 	jal	5000878 <end+0x4bf6878>
    11b8:	0ede481d 	jal	b792074 <end+0xb388074>
    11bc:	00000000 	nop
    11c0:	00000020 	add	zero,zero,zero
    11c4:	00001144 	0x1144
    11c8:	00405c30 	tge	v0,zero,0x170
    11cc:	00000064 	0x64
    11d0:	44100e44 	0x44100e44
    11d4:	0d44019e 	jal	5100678 <end+0x4cf6678>
    11d8:	0d48021e 	jal	5200878 <end+0x4df6878>
    11dc:	0ede481d 	jal	b792074 <end+0xb388074>
    11e0:	00000000 	nop
    11e4:	00000020 	add	zero,zero,zero
    11e8:	00001144 	0x1144
    11ec:	00405c94 	0x405c94
    11f0:	00000074 	teq	zero,zero,0x1
    11f4:	44080e44 	0x44080e44
    11f8:	0d44019e 	jal	5100678 <end+0x4cf6678>
    11fc:	0d58021e 	jal	5600878 <end+0x51f6878>
    1200:	0ede481d 	jal	b792074 <end+0xb388074>
    1204:	00000000 	nop
    1208:	00000020 	add	zero,zero,zero
    120c:	00001144 	0x1144
    1210:	00405d08 	0x405d08
    1214:	000000d4 	0xd4
    1218:	44080e44 	0x44080e44
    121c:	0d44019e 	jal	5100678 <end+0x4cf6678>
    1220:	0db8021e 	jal	6e00878 <end+0x69f6878>
    1224:	0ede481d 	jal	b792074 <end+0xb388074>
    1228:	00000000 	nop

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	0000008c 	syscall	0x2
   4:	000000b4 	teq	zero,zero,0x2
   8:	00000174 	teq	zero,zero,0x5
   c:	00000180 	sll	zero,zero,0x6
	...
  18:	000000d8 	0xd8
  1c:	0000011c 	0x11c
  20:	00000180 	sll	zero,zero,0x6
  24:	0000018c 	syscall	0x6
	...
  30:	0000011c 	0x11c
  34:	00000140 	sll	zero,zero,0x5
  38:	0000018c 	syscall	0x6
  3c:	00000190 	0x190
	...
  48:	00000378 	0x378
  4c:	00000410 	0x410
  50:	000004d0 	0x4d0
  54:	000004e8 	0x4e8
	...
  60:	00000378 	0x378
  64:	000003a4 	0x3a4
  68:	000004d0 	0x4d0
  6c:	000004dc 	0x4dc
	...
  78:	000003ac 	0x3ac
  7c:	000003cc 	syscall	0xf
  80:	000004dc 	0x4dc
  84:	000004e8 	0x4e8
	...
  90:	00000468 	0x468
  94:	00000488 	0x488
  98:	000004e8 	0x4e8
  9c:	000004ec 	0x4ec
	...
  a8:	000005ec 	0x5ec
  ac:	00000710 	0x710
  b0:	0000094c 	syscall	0x25
  b4:	00000974 	teq	zero,zero,0x25
	...
  c0:	000005f8 	0x5f8
  c4:	000006d0 	0x6d0
  c8:	0000094c 	syscall	0x25
  cc:	00000974 	teq	zero,zero,0x25
	...
  d8:	0000066c 	0x66c
  dc:	000006d0 	0x6d0
  e0:	00000964 	0x964
  e4:	00000974 	teq	zero,zero,0x25
	...
  f0:	00000020 	add	zero,zero,zero
  f4:	000005e8 	0x5e8
  f8:	000005f0 	tge	zero,zero,0x17
  fc:	000005f4 	teq	zero,zero,0x17
	...
